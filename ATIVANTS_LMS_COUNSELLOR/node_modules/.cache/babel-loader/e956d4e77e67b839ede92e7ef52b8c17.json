{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\ACTIVANTS\\\\Desktop\\\\LMS Councellor\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ACTIVANTS\\\\Desktop\\\\LMS Councellor\\\\ATIVANTS_LMS_COUNSELLOR\\\\src\\\\SecondaryComponents\\\\Desktop\\\\_NavigationItems.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Grid, Icon } from 'semantic-ui-react';\nimport _HeaderMovieCast from './_HeaderMovieCast';\nimport _HeaderMovieDetails from '../Desktop/_HeaderMovieDetails';\nimport axios from 'axios';\nimport _Header from '../Desktop/_Header';\n\nvar _NavigationItems = function _NavigationItems() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      movieList = _useState2[0],\n      setMovieList = _useState2[1];\n\n  var _useState3 = useState({\n    bgImg: '',\n    post: '',\n    name: '',\n    desc: '',\n    youtube: '',\n    relDate: '',\n    rate: ''\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      Image = _useState4[0],\n      setImage = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      YouTube = _useState6[0],\n      setYoutube = _useState6[1];\n\n  var geTYouTube = function geTYouTube(id) {\n    axios.get(\"https://api.themoviedb.org/3/movie/\".concat(id, \"?api_key=028e8ea4ca7d9164d085c9238979098b&append_to_response=videos\")).then(function (x) {\n      var videos = x.data.videos;\n      var Trailer = videos.results.sort(function (a, b) {\n        return b.size - a.size;\n      }).filter(function (x) {\n        return x.type === 'Trailer';\n      });\n      var Teaser = videos.results.sort(function (a, b) {\n        return b.size - a.size;\n      }).filter(function (x) {\n        return x.type === 'Teaser';\n      });\n      var key = '';\n      if (Trailer) key = Trailer.map(function (x) {\n        return x.key;\n      });else key = Teaser.map(function (x) {\n        return x.key;\n      });\n      setYoutube(\"https://www.youtube.com/watch?v=\".concat(key));\n    }).catch(function (err) {});\n  };\n\n  useEffect(function () {\n    var url = 'https://api.themoviedb.org/3/trending/movie/week?api_key=028e8ea4ca7d9164d085c9238979098b&include_adult=false';\n    axios.get(url).then(function (res) {\n      var results = res.data.results;\n      var movieImageUrll;\n      var postImageUrl;\n      var name = '';\n      var movieRows = [];\n      movieImageUrll = \"https://image.tmdb.org/t/p/w500\" + results[0].backdrop_path;\n      postImageUrl = \"https://image.tmdb.org/t/p/w500\" + results[0].poster_path;\n      geTYouTube(results[0].id);\n      setImage({\n        bgImg: movieImageUrll,\n        post: postImageUrl,\n        name: results[0].title || results[0].name,\n        desc: results[0].overview,\n        relDate: results[0].release_date,\n        rate: results[0].vote_average * 10\n      });\n      results.forEach(function (movie) {\n        var movieImageUrl;\n        movieImageUrl = \"https://image.tmdb.org/t/p/w500\" + movie.backdrop_path;\n\n        if (movie.poster_path !== null && movie.media_type !== \"person\") {\n          var movieComponent = /*#__PURE__*/React.createElement(_HeaderMovieCast, {\n            movieDetials: function movieDetials() {\n              return selectMovieHandler(movie);\n            },\n            key: movie.id,\n            movieImage: movieImageUrl,\n            movie: movie,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 48\n            }\n          });\n          movieRows.push(movieComponent);\n        }\n      });\n      setMovieList(movieRows);\n    }).catch(function (error) {\n      console.log(\"errror\", error);\n    });\n    return function () {\n      setMovieList([]);\n    };\n  }, []);\n\n  var selectMovieHandler = function selectMovieHandler(movie) {\n    var url;\n    var urlVideo;\n    var details = {};\n\n    if (movie.media_type === \"movie\") {\n      var movieId = movie.id;\n      url = \"https://api.themoviedb.org/3/movie/\".concat(movieId, \"?api_key=028e8ea4ca7d9164d085c9238979098b&append_to_response=videos\");\n    } else if (movie.media_type === \"tv\") {\n      var tvId = movie.id;\n      url = \"https://api.themoviedb.org/3/tv/\".concat(tvId, \"?api_key=028e8ea4ca7d9164d085c9238979098b&append_to_response=videos\");\n    }\n\n    axios.get(url).then(function (res) {\n      var movieImageUrl = \"https://image.tmdb.org/t/p/w500\" + res.data.backdrop_path;\n      var moviePoster = \"https://image.tmdb.org/t/p/w500\" + res.data.poster_path;\n      var desc = res.data.overview;\n      geTYouTube(res.data.id);\n      setImage({\n        bgImg: movieImageUrl,\n        post: moviePoster,\n        desc: res.data.overview,\n        name: res.data.title || res.data.name,\n        relDate: res.data.release_date,\n        rate: res.data.vote_average * 10\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(_Header, {\n    movie: Image,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    style: {\n      display: ''\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, \"\\xA0\"), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(_HeaderMovieDetails, {\n    url: YouTube,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    icon: true,\n    labelPosition: \"left\",\n    style: {\n      backgroundColor: \"transparent\",\n      pointerEvents: 'none',\n      border: '1px solid grey'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"calendar check\",\n    color: \"green\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 25\n    }\n  }, Image.relDate)), /*#__PURE__*/React.createElement(Button, {\n    icon: true,\n    labelPosition: \"left\",\n    style: {\n      backgroundColor: \"transparent\",\n      pointerEvents: 'none',\n      border: '1px solid grey'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"star\",\n    color: \"green\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 25\n    }\n  }, Image.rate, \"%\")))), /*#__PURE__*/React.createElement(Grid, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, \"\\xA0\"), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 14,\n    textAlign: \"center\",\n    className: \"scrollmenuImageBigger\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, movieList), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, \"\\xA0\")));\n};\n\nexport default _NavigationItems;","map":{"version":3,"sources":["C:/Users/ACTIVANTS/Desktop/LMS Councellor/ATIVANTS_LMS_COUNSELLOR/src/SecondaryComponents/Desktop/_NavigationItems.js"],"names":["React","useState","useEffect","Button","Grid","Icon","_HeaderMovieCast","_HeaderMovieDetails","axios","_Header","_NavigationItems","movieList","setMovieList","bgImg","post","name","desc","youtube","relDate","rate","Image","setImage","YouTube","setYoutube","geTYouTube","id","get","then","x","videos","data","Trailer","results","sort","a","b","size","filter","type","Teaser","key","map","catch","err","url","res","movieImageUrll","postImageUrl","movieRows","backdrop_path","poster_path","title","overview","release_date","vote_average","forEach","movie","movieImageUrl","media_type","movieComponent","selectMovieHandler","push","error","console","log","urlVideo","details","movieId","tvId","moviePoster","display","backgroundColor","pointerEvents","border","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Grid, Icon } from 'semantic-ui-react'\n\nimport _HeaderMovieCast from './_HeaderMovieCast';\nimport _HeaderMovieDetails from '../Desktop/_HeaderMovieDetails';\nimport axios from 'axios';\nimport _Header from '../Desktop/_Header'\n\n\nconst _NavigationItems = () => {\n    const [movieList, setMovieList] = useState([]);\n    const [Image, setImage] = useState({ bgImg: '', post: '', name: '', desc: '', youtube: '', relDate: '', rate: '' });\n    const [YouTube, setYoutube] = useState();\n\n    const geTYouTube = id => {\n        axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=028e8ea4ca7d9164d085c9238979098b&append_to_response=videos`)\n            .then(x => {\n                const videos = x.data.videos;\n                const Trailer = videos.results.sort((a, b) => b.size - a.size).filter(x => x.type === 'Trailer');\n                const Teaser = videos.results.sort((a, b) => b.size - a.size).filter(x => x.type === 'Teaser');\n                let key = '';\n                if (Trailer)\n                    key = Trailer.map(x => x.key)\n                else\n                    key = Teaser.map(x => x.key)\n\n                setYoutube(`https://www.youtube.com/watch?v=${key}`);\n            })\n            .catch(err => {\n\n            })\n    }\n\n    useEffect(() => {\n\n        const url = 'https://api.themoviedb.org/3/trending/movie/week?api_key=028e8ea4ca7d9164d085c9238979098b&include_adult=false';\n        axios.get(url)\n            .then(res => {\n                const results = res.data.results;\n                let movieImageUrll;\n                let postImageUrl;\n                let name = '';\n                let movieRows = [];\n\n                movieImageUrll = \"https://image.tmdb.org/t/p/w500\" + results[0].backdrop_path;\n                postImageUrl = \"https://image.tmdb.org/t/p/w500\" + results[0].poster_path;\n                geTYouTube(results[0].id);\n                setImage({\n                    bgImg: movieImageUrll,\n                    post: postImageUrl,\n                    name: results[0].title || results[0].name,\n                    desc: results[0].overview,\n                    relDate: results[0].release_date,\n                    rate: results[0].vote_average * 10,\n                });\n\n                results.forEach((movie) => {\n                    let movieImageUrl;\n                    movieImageUrl = \"https://image.tmdb.org/t/p/w500\" + movie.backdrop_path;\n                    if (movie.poster_path !== null && movie.media_type !== \"person\") {\n                        const movieComponent = <_HeaderMovieCast\n                            movieDetials={() => selectMovieHandler(movie)}\n                            key={movie.id}\n                            movieImage={movieImageUrl}\n                            movie={movie}\n                        />\n                        movieRows.push(movieComponent);\n                    }\n                })\n\n                setMovieList(movieRows);\n\n            }).catch(error => {\n                console.log(\"errror\", error);\n            });\n\n        return () => {\n            setMovieList([]);\n        }\n\n    }, []);\n\n    const selectMovieHandler = movie => {\n        let url;\n        let urlVideo;\n        let details = {};\n        if (movie.media_type === \"movie\") {\n            const movieId = movie.id;\n            url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=028e8ea4ca7d9164d085c9238979098b&append_to_response=videos`;\n\n        } else if (movie.media_type === \"tv\") {\n            const tvId = movie.id\n            url = `https://api.themoviedb.org/3/tv/${tvId}?api_key=028e8ea4ca7d9164d085c9238979098b&append_to_response=videos`;\n        }\n\n        axios.get(url)\n            .then(res => {\n                let movieImageUrl = \"https://image.tmdb.org/t/p/w500\" + res.data.backdrop_path;\n                let moviePoster = \"https://image.tmdb.org/t/p/w500\" + res.data.poster_path;\n                let desc = res.data.overview;\n                geTYouTube(res.data.id);\n                setImage({\n                    bgImg: movieImageUrl, post: moviePoster, desc: res.data.overview,\n                    name: res.data.title || res.data.name,\n                    relDate: res.data.release_date,\n                    rate: res.data.vote_average * 10\n                });\n\n            }).catch(error => {\n                console.log(error);\n            });\n    }\n\n    return (\n        <React.Fragment>\n            <Grid>\n                <_Header movie={Image} />\n            </Grid>\n            <Grid style={{ display: '' }}>\n                <Grid.Column width={4}>\n                    &nbsp;\n                    </Grid.Column>\n                <Grid.Column width={12}>\n                    <_HeaderMovieDetails url={YouTube} />\n                    <Button icon labelPosition='left' style={{ backgroundColor: `transparent`, pointerEvents: 'none', border: '1px solid grey' }}>\n                        <Icon name=\"calendar check\" color='green' />\n                        <span style={{ color: 'white' }}>{Image.relDate}\n                        </span>\n                    </Button>\n                    <Button icon labelPosition='left' style={{ backgroundColor: `transparent`, pointerEvents: 'none', border: '1px solid grey' }}>\n                        <Icon name='star' color='green' />\n                        <span style={{ color: 'white' }}>{Image.rate}%\n                    </span>\n                    </Button>\n                </Grid.Column>\n            </Grid>\n            \n            <Grid>\n                <Grid.Column width={1}>&nbsp;</Grid.Column>\n                <Grid.Column width={14} textAlign=\"center\" className=\"scrollmenuImageBigger\">\n                    {movieList}\n                </Grid.Column>\n                <Grid.Column width={1}>&nbsp;</Grid.Column>\n            </Grid>\n        </React.Fragment>\n    )\n}\n\nexport default _NavigationItems;"]},"metadata":{},"sourceType":"module"}