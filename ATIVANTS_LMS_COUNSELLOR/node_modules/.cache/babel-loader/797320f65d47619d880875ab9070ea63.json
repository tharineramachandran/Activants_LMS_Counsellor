{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"C:\\\\Users\\\\ACTIVANTS\\\\Desktop\\\\LMS Councellor\\\\Activants_LMS_Counsellor\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/helpers/defineProperty\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StateProvider = StateProvider;\nexports.default = useTimekeeperState;\n\nvar _core = require(\"@emotion/core\");\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _objectSpread6 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash.debounce\"));\n\nvar _time = require(\"../helpers/time\");\n\nvar _configContext = _interopRequireDefault(require(\"./config-context\"));\n\nvar _utils = require(\"../helpers/utils\");\n\nvar _constants = require(\"../helpers/constants\");\n\nvar stateContext = (0, _react.createContext)({});\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'SET_TIME':\n      return (0, _objectSpread6.default)({}, state, {\n        time: action.time,\n        meridiem: action.meridiem || state.meridiem\n      });\n\n    case 'SET_MODE':\n      return (0, _objectSpread6.default)({}, state, {\n        mode: action.mode\n      });\n\n    case 'SET_MERIDIEM':\n      return (0, _objectSpread6.default)({}, state, {\n        meridiem: action.meridiem\n      });\n  }\n\n  return state;\n}\n\nfunction StateProvider(_ref) {\n  var onChange = _ref.onChange,\n      parentTime = _ref.time,\n      children = _ref.children;\n  var config = (0, _configContext.default)();\n\n  var _useReducer = (0, _react.useReducer)(reducer, null, function () {\n    return {\n      time: (0, _time.parseTime)(parentTime),\n      mode: config.hour24Mode ? _constants.MODE.HOURS_24 : _constants.MODE.HOURS_12,\n      // need meridiem for context when 12h mode, so can tell\n      // if user is changing hours before or after 12pm\n      meridiem: (0, _time.parseMeridiem)(parentTime)\n    };\n  }),\n      _useReducer2 = (0, _slicedToArray2.default)(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var mode = state.mode,\n      time = state.time,\n      meridiem = state.meridiem;\n  var refTime = (0, _react.useRef)(time); // handle time update if parent changes\n\n  (0, _react.useEffect)(function () {\n    if (parentTime == null) {\n      return;\n    }\n\n    var newTime = (0, _time.parseTime)(parentTime);\n\n    if ((0, _utils.isSameTime)(newTime, refTime.current)) {\n      return;\n    }\n\n    var action = {\n      type: 'SET_TIME',\n      time: (0, _time.parseTime)(parentTime)\n    };\n\n    if (!config.hour24Mode) {\n      action.meridiem = (0, _time.parseMeridiem)(parentTime);\n    }\n\n    dispatch(action);\n  }, [config.hour24Mode, parentTime]);\n  var getComposedTime = (0, _react.useCallback)(function () {\n    var time = refTime.current;\n    return (0, _time.composeTime)(time.hour, time.minute);\n  }, []); // debounced onChange function from parent\n\n  var debounceUpdateParent = (0, _react.useMemo)(function () {\n    if (typeof onChange === 'function') {\n      return (0, _lodash.default)(function () {\n        onChange(getComposedTime());\n      }, 80);\n    }\n\n    return function () {};\n  }, [getComposedTime, onChange]); // update 24 hour time on meridiem change\n\n  function updateMeridiem(newMeridiem) {\n    if (meridiem === newMeridiem) {\n      return;\n    }\n\n    var newTime = {\n      minute: time.minute,\n      hour: 0\n    };\n\n    if (newMeridiem === 'am') {\n      newTime.hour = time.hour - 12;\n    } else if (newMeridiem === 'pm') {\n      newTime.hour = time.hour + 12;\n    }\n\n    _actuallySetTime(newTime, newMeridiem);\n  } // update time on component and then on parent\n\n\n  function _actuallySetTime(newTime, meridiem) {\n    // update component global state\n    dispatch({\n      type: 'SET_TIME',\n      time: newTime,\n      meridiem: meridiem\n    });\n    refTime.current = newTime; // update time on parent\n\n    debounceUpdateParent();\n  } // this method is called only due to changes in clock actions\n\n\n  function updateTime(val) {\n    // account if minutes is 60 (eg: 59 rounded to 60)\n    val = val % 60; // account for max number being 12 during 12h mode\n\n    if (mode === _constants.MODE.HOURS_12 && meridiem === 'pm') {\n      val += 12;\n    } // generate new time and update timekeeper state\n\n\n    var unit = (0, _utils.isHourMode)(mode) ? 'hour' : 'minute'; // useful for same value when dragging between degrees in hours\n\n    if (refTime.current[unit] === val) {\n      return;\n    }\n\n    var newTime = (0, _objectSpread6.default)({}, time, _defineProperty({}, unit, val));\n\n    _actuallySetTime(newTime);\n  }\n\n  var setMode = (0, _react.useCallback)(function (mode) {\n    var m = mode;\n\n    if ((0, _utils.isHourMode)(mode)) {\n      m = config.hour24Mode ? _constants.MODE.HOURS_24 : _constants.MODE.HOURS_12;\n    }\n\n    dispatch({\n      type: 'SET_MODE',\n      mode: m\n    });\n  }, [config.hour24Mode]);\n  var value = {\n    time: time,\n    mode: mode,\n    updateTime: updateTime,\n    updateMeridiem: updateMeridiem,\n    setMode: setMode,\n    getComposedTime: getComposedTime\n  };\n  return (0, _core.jsx)(stateContext.Provider, {\n    value: value\n  }, children);\n}\n\nfunction useTimekeeperState() {\n  return (0, _react.useContext)(stateContext);\n}","map":{"version":3,"sources":["C:/Users/ACTIVANTS/Desktop/LMS Councellor/Activants_LMS_Counsellor/ATIVANTS_LMS_COUNSELLOR/node_modules/react-timekeeper/lib/hooks/state-context.js"],"names":["_interopRequireWildcard","require","_interopRequireDefault","Object","defineProperty","exports","value","StateProvider","default","useTimekeeperState","_core","_slicedToArray2","_objectSpread6","_react","_lodash","_time","_configContext","_utils","_constants","stateContext","createContext","reducer","state","action","type","time","meridiem","mode","onChange","parentTime","children","config","_useReducer","useReducer","parseTime","hour24Mode","MODE","HOURS_24","HOURS_12","parseMeridiem","_useReducer2","dispatch","refTime","useRef","useEffect","newTime","isSameTime","current","getComposedTime","useCallback","composeTime","hour","minute","debounceUpdateParent","useMemo","updateMeridiem","newMeridiem","_actuallySetTime","updateTime","val","unit","isHourMode","setMode","m","jsx","Provider","useContext"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StateProvider = StateProvider;\nexports.default = useTimekeeperState;\n\nvar _core = require(\"@emotion/core\");\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _objectSpread6 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash.debounce\"));\n\nvar _time = require(\"../helpers/time\");\n\nvar _configContext = _interopRequireDefault(require(\"./config-context\"));\n\nvar _utils = require(\"../helpers/utils\");\n\nvar _constants = require(\"../helpers/constants\");\n\nconst stateContext = (0, _react.createContext)({});\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'SET_TIME':\n      return (0, _objectSpread6.default)({}, state, {\n        time: action.time,\n        meridiem: action.meridiem || state.meridiem\n      });\n\n    case 'SET_MODE':\n      return (0, _objectSpread6.default)({}, state, {\n        mode: action.mode\n      });\n\n    case 'SET_MERIDIEM':\n      return (0, _objectSpread6.default)({}, state, {\n        meridiem: action.meridiem\n      });\n  }\n\n  return state;\n}\n\nfunction StateProvider({\n  onChange,\n  time: parentTime,\n  children\n}) {\n  const config = (0, _configContext.default)();\n\n  const _useReducer = (0, _react.useReducer)(reducer, null, () => {\n    return {\n      time: (0, _time.parseTime)(parentTime),\n      mode: config.hour24Mode ? _constants.MODE.HOURS_24 : _constants.MODE.HOURS_12,\n      // need meridiem for context when 12h mode, so can tell\n      // if user is changing hours before or after 12pm\n      meridiem: (0, _time.parseMeridiem)(parentTime)\n    };\n  }),\n        _useReducer2 = (0, _slicedToArray2.default)(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  const mode = state.mode,\n        time = state.time,\n        meridiem = state.meridiem;\n  const refTime = (0, _react.useRef)(time); // handle time update if parent changes\n\n  (0, _react.useEffect)(() => {\n    if (parentTime == null) {\n      return;\n    }\n\n    const newTime = (0, _time.parseTime)(parentTime);\n\n    if ((0, _utils.isSameTime)(newTime, refTime.current)) {\n      return;\n    }\n\n    const action = {\n      type: 'SET_TIME',\n      time: (0, _time.parseTime)(parentTime)\n    };\n\n    if (!config.hour24Mode) {\n      action.meridiem = (0, _time.parseMeridiem)(parentTime);\n    }\n\n    dispatch(action);\n  }, [config.hour24Mode, parentTime]);\n  const getComposedTime = (0, _react.useCallback)(() => {\n    const time = refTime.current;\n    return (0, _time.composeTime)(time.hour, time.minute);\n  }, []); // debounced onChange function from parent\n\n  const debounceUpdateParent = (0, _react.useMemo)(() => {\n    if (typeof onChange === 'function') {\n      return (0, _lodash.default)(() => {\n        onChange(getComposedTime());\n      }, 80);\n    }\n\n    return () => {};\n  }, [getComposedTime, onChange]); // update 24 hour time on meridiem change\n\n  function updateMeridiem(newMeridiem) {\n    if (meridiem === newMeridiem) {\n      return;\n    }\n\n    const newTime = {\n      minute: time.minute,\n      hour: 0\n    };\n\n    if (newMeridiem === 'am') {\n      newTime.hour = time.hour - 12;\n    } else if (newMeridiem === 'pm') {\n      newTime.hour = time.hour + 12;\n    }\n\n    _actuallySetTime(newTime, newMeridiem);\n  } // update time on component and then on parent\n\n\n  function _actuallySetTime(newTime, meridiem) {\n    // update component global state\n    dispatch({\n      type: 'SET_TIME',\n      time: newTime,\n      meridiem: meridiem\n    });\n    refTime.current = newTime; // update time on parent\n\n    debounceUpdateParent();\n  } // this method is called only due to changes in clock actions\n\n\n  function updateTime(val) {\n    // account if minutes is 60 (eg: 59 rounded to 60)\n    val = val % 60; // account for max number being 12 during 12h mode\n\n    if (mode === _constants.MODE.HOURS_12 && meridiem === 'pm') {\n      val += 12;\n    } // generate new time and update timekeeper state\n\n\n    const unit = (0, _utils.isHourMode)(mode) ? 'hour' : 'minute'; // useful for same value when dragging between degrees in hours\n\n    if (refTime.current[unit] === val) {\n      return;\n    }\n\n    const newTime = (0, _objectSpread6.default)({}, time, {\n      [unit]: val\n    });\n\n    _actuallySetTime(newTime);\n  }\n\n  const setMode = (0, _react.useCallback)(mode => {\n    let m = mode;\n\n    if ((0, _utils.isHourMode)(mode)) {\n      m = config.hour24Mode ? _constants.MODE.HOURS_24 : _constants.MODE.HOURS_12;\n    }\n\n    dispatch({\n      type: 'SET_MODE',\n      mode: m\n    });\n  }, [config.hour24Mode]);\n  const value = {\n    time,\n    mode,\n    updateTime,\n    updateMeridiem,\n    setMode,\n    getComposedTime\n  };\n  return (0, _core.jsx)(stateContext.Provider, {\n    value: value\n  }, children);\n}\n\nfunction useTimekeeperState() {\n  return (0, _react.useContext)(stateContext);\n}"]},"metadata":{},"sourceType":"script"}