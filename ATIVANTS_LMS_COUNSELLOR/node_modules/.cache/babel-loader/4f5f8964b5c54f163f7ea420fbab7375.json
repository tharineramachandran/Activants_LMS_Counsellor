{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\ACTIVANTS\\\\Desktop\\\\LMS Councellor\\\\Activants_LMS_Counsellor\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ACTIVANTS\\\\Desktop\\\\LMS Councellor\\\\Activants_LMS_Counsellor\\\\ATIVANTS_LMS_COUNSELLOR\\\\src\\\\SecondaryComponents\\\\Desktop\\\\RegistrationComponents\\\\_Registration_Second.js\";\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Header, Icon, Form, Image, Message, Segment, Grid, Modal, Search, Button, Dimmer, Loader, Divider, List, Dropdown, Select } from 'semantic-ui-react';\nimport { useForm } from \"react-hook-form\";\nimport Dropzone from 'react-dropzone';\nimport { useStep } from 'react-hooks-helper';\n\nvar Registration_Second = function Registration_Second(_ref) {\n  var formData = _ref.formData,\n      setForm = _ref.setForm,\n      navigation = _ref.navigation;\n  var COUNSELLOR_PHOTO = formData.COUNSELLOR_PHOTO;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      imrSrc = _useState2[0],\n      setImgSrc = _useState2[1];\n\n  var ImageMaxSize = 1000000000; //bytes\n\n  var acceptedFileTypes = 'image/x-png, image/png, image/jpg, image/jpeg, image/gif';\n  var acceptedFileTypesArray = acceptedFileTypes.split(\",\").map(function (item) {\n    return item.trim();\n  });\n\n  var _useForm = useForm({}),\n      handleSubmit = _useForm.handleSubmit,\n      register = _useForm.register,\n      errors = _useForm.errors;\n\n  var onSubmit = function onSubmit(data) {\n    navigation.next();\n  };\n\n  var verifyFile = function verifyFile(files) {\n    if (files && files.length > 0) {\n      var currentFile = files[0];\n      var currentFileType = currentFile.type;\n      var currentFileSize = currentFile.size;\n\n      if (currentFileSize > ImageMaxSize) {\n        alert(\"this file is not allowed. \" + currentFileSize + \" bytes is too large\");\n        return false;\n      }\n\n      if (!acceptedFileTypesArray.includes(currentFileType)) {\n        alert(\"This file is not allowed. Only images are allowed\");\n        return false;\n      }\n\n      return true;\n    }\n  };\n\n  var handleOnDrop = function handleOnDrop(files, rejectedFiles) {\n    if (rejectedFiles && rejectedFiles.length > 0) {\n      console.log(rejectedFiles);\n      verifyFile(rejectedFiles);\n    }\n\n    if (files && files.length > 0) {\n      var isVerified = verifyFile(files);\n\n      if (isVerified) {\n        console.log(\"accepted\");\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    size: \"small\",\n    onSubmit: handleSubmit(onSubmit),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"center\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Dropzone, {\n    onDrop: handleOnDrop,\n    multiple: false,\n    accept: acceptedFileTypes,\n    maxSize: ImageMaxSize,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }, function (_ref2) {\n    var getRootProps = _ref2.getRootProps;\n    return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps(), {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 37\n      }\n    }, \"Drop files here, or click to select files\"));\n  }), /*#__PURE__*/React.createElement(Segment, {\n    stacked: true,\n    style: {\n      width: '90%',\n      textAlign: 'left'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 33\n    }\n  }, \"Counsellor Photo\"), /*#__PURE__*/React.createElement(\"input\", {\n    fluid: true,\n    icon: \"user\",\n    iconPosition: \"left\",\n    placeholder: \"Enter your details\",\n    type: \"text\",\n    name: \"COUNSELLOR_FIRST_NAME\",\n    onChange: setForm,\n    value: COUNSELLOR_PHOTO,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    color: \"teal\",\n    fluid: true,\n    size: \"large\",\n    onClick: function onClick() {\n      return navigation.previous();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }, \"Back\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"teal\",\n    fluid: true,\n    size: \"large\",\n    type: \"submit\",\n    onClick: function onClick() {\n      return navigation.next();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }\n  }, \"Next\"))))));\n};\n\nexport default Registration_Second;","map":{"version":3,"sources":["C:/Users/ACTIVANTS/Desktop/LMS Councellor/Activants_LMS_Counsellor/ATIVANTS_LMS_COUNSELLOR/src/SecondaryComponents/Desktop/RegistrationComponents/_Registration_Second.js"],"names":["React","useState","useEffect","useContext","Header","Icon","Form","Image","Message","Segment","Grid","Modal","Search","Button","Dimmer","Loader","Divider","List","Dropdown","Select","useForm","Dropzone","useStep","Registration_Second","formData","setForm","navigation","COUNSELLOR_PHOTO","imrSrc","setImgSrc","ImageMaxSize","acceptedFileTypes","acceptedFileTypesArray","split","map","item","trim","handleSubmit","register","errors","onSubmit","data","next","verifyFile","files","length","currentFile","currentFileType","type","currentFileSize","size","alert","includes","handleOnDrop","rejectedFiles","console","log","isVerified","getRootProps","width","textAlign","previous"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport {\r\n    Header, Icon, Form, Image, Message,\r\n    Segment, Grid, Modal, Search, Button, Dimmer, Loader, Divider, List, Dropdown, Select\r\n} from 'semantic-ui-react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport Dropzone from 'react-dropzone';\r\nimport { useStep } from 'react-hooks-helper';\r\n\r\nconst Registration_Second = ({ formData, setForm, navigation }) => {\r\n\r\n    const { COUNSELLOR_PHOTO } = formData;\r\n\r\n    const [imrSrc, setImgSrc] = useState('');\r\n\r\n    const ImageMaxSize = 1000000000; //bytes\r\n    const acceptedFileTypes = 'image/x-png, image/png, image/jpg, image/jpeg, image/gif'\r\n    const acceptedFileTypesArray = acceptedFileTypes.split(\",\").map((item) => \r\n    {\r\n        return item.trim()\r\n    } )\r\n\r\n    const { handleSubmit, register, errors } = useForm({\r\n\r\n    });\r\n\r\n    const onSubmit = (data) => {\r\n        navigation.next()\r\n    };\r\n\r\n  \r\n\r\n    const verifyFile = (files) => {\r\n        if(files && files.length > 0){\r\n            const currentFile = files[0]\r\n            const currentFileType = currentFile.type\r\n            const currentFileSize = currentFile.size\r\n            if(currentFileSize > ImageMaxSize){\r\n                alert(\"this file is not allowed. \" + currentFileSize + \" bytes is too large\");\r\n                return false;\r\n            }\r\n            if(!acceptedFileTypesArray.includes(currentFileType))\r\n            {\r\n                alert(\"This file is not allowed. Only images are allowed\")\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n\r\n    const handleOnDrop = (files, rejectedFiles) => {\r\n        if (rejectedFiles && rejectedFiles.length > 0) {\r\n            console.log(rejectedFiles)\r\n            verifyFile(rejectedFiles)\r\n        }\r\n\r\n        if(files && files.length > 0)\r\n        {\r\n            const isVerified = verifyFile(files)\r\n            if(isVerified)\r\n            {\r\n                console.log(\"accepted\")\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        \r\n        <Grid>\r\n            <Grid.Column>\r\n                <Form size='small' onSubmit={handleSubmit(onSubmit)}>\r\n                    <center>\r\n\r\n                        <Dropzone onDrop={handleOnDrop} multiple={false} accept={acceptedFileTypes} maxSize={ImageMaxSize}>\r\n                            {({ getRootProps }) => (\r\n                                <div {...getRootProps()}>\r\n                                    <p>Drop files here, or click to select files</p>\r\n                                </div>\r\n                            )}\r\n                        </Dropzone>\r\n\r\n                    <Segment stacked style={{ width: '90%', textAlign: 'left' }}>\r\n                        <Form.Group widths='equal'>\r\n                            <Form.Field className=\"CustomForm\">\r\n                                <label>Counsellor Photo</label>\r\n                                <input\r\n                                    fluid\r\n                                    icon='user'\r\n                                    iconPosition='left'\r\n                                    placeholder='Enter your details'\r\n                                    type='text'\r\n                                    name=\"COUNSELLOR_FIRST_NAME\"\r\n                                    onChange={setForm}\r\n                                    value={COUNSELLOR_PHOTO}\r\n                                />\r\n                            </Form.Field>\r\n\r\n                        </Form.Group>\r\n\r\n\r\n                        <Button\r\n                            color='teal'\r\n                            fluid\r\n                            size='large'\r\n                            onClick={() => navigation.previous()}\r\n                        >\r\n                            Back\r\n                    </Button>\r\n\r\n                        <Button\r\n                            color='teal'\r\n                            fluid\r\n                            size='large'\r\n                            type=\"submit\"\r\n                            onClick={() => navigation.next()}\r\n                        >\r\n                            Next\r\n                    </Button>\r\n\r\n                    </Segment>\r\n                    </center>\r\n                </Form>\r\n\r\n            </Grid.Column>\r\n        </Grid >\r\n    )\r\n\r\n}\r\n\r\nexport default Registration_Second;"]},"metadata":{},"sourceType":"module"}