{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\ACTIVANTS\\\\Downloads\\\\CircuitBreakShow-master\\\\CircuitBreakShow-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Header,Icon,Segment,Grid,Modal,Search,Button,Dimmer,Loader}from'semantic-ui-react';import ReactPlayer from'react-player';var _SearchMovieList=function _SearchMovieList(props){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];var _useState3=useState(window.innerWidth),_useState4=_slicedToArray(_useState3,2),defHeight=_useState4[0],setHeight=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),YouTube=_useState6[0],setYoutube=_useState6[1];useEffect(function(){var setHeightofScreen=function setHeightofScreen(){return setHeight(window.innerHeight);};window.addEventListener('resize',setHeightofScreen);return function(){window.removeEventListener('resize',setHeightofScreen);};});useEffect(function(){if(props.movie.videos){setOpen(true);var Trailer=props.movie.videos.results.sort(function(a,b){return b.size-a.size;}).filter(function(x){return x.type==='Trailer';});var Teaser=props.movie.videos.results.sort(function(a,b){return b.size-a.size;}).filter(function(x){return x.type==='Teaser';});var key='';if(Trailer)key=Trailer.map(function(x){return x.key;});else key=Teaser.map(function(x){return x.key;});setYoutube(\"https://www.youtube.com/watch?v=\".concat(key));}return function(){setYoutube();};},[props.movie]);var close=function close(){setYoutube();setOpen(false);props.onCloseModal();};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Modal,{size:'fullscreen',dimmer:\"blurring\",open:open,onClose:function onClose(){return close();}},/*#__PURE__*/React.createElement(Modal.Actions,{style:{padding:'0rem',backgroundColor:'#000000'}},/*#__PURE__*/React.createElement(Grid,{padded:\"true\",textAlign:\"center\"},/*#__PURE__*/React.createElement(Grid.Column,{width:13},/*#__PURE__*/React.createElement(Search,{value:props.searchInputValue,showNoResults:false,className:\"customSearch\",onSearchChange:props.onSearchHandler,placeholder:props.defName})),/*#__PURE__*/React.createElement(Grid.Column,{width:3},/*#__PURE__*/React.createElement(Segment,{style:{padding:'10px',margin:'0px'}},/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return close();},icon:true,labelPosition:\"left\",style:{backgroundColor:\"#111111\"}},/*#__PURE__*/React.createElement(Icon,{name:\"checkmark\",color:\"green\"}),/*#__PURE__*/React.createElement(\"span\",{style:{color:'white'}},\"Done\")))))),/*#__PURE__*/React.createElement(Modal.Content,{style:{backgroundColor:'transparent !important'}},/*#__PURE__*/React.createElement(Modal.Description,null,/*#__PURE__*/React.createElement(Grid,{style:{marginRight:'1rem'}},/*#__PURE__*/React.createElement(Grid.Column,{width:6},/*#__PURE__*/React.createElement(Modal.Content,{scrolling:true,style:{marginRight:'0rem',backgroundColor:'transparent !important',minHeight:\"\".concat(defHeight,\"px\")}},/*#__PURE__*/React.createElement(Modal.Description,null,/*#__PURE__*/React.createElement(Grid,{padded:\"true\"},/*#__PURE__*/React.createElement(Grid.Row,null,/*#__PURE__*/React.createElement(Grid.Column,{textAlign:\"center\"},props.listOfMovies)))))),/*#__PURE__*/React.createElement(Grid.Column,{width:10},/*#__PURE__*/React.createElement(Segment,{color:\"green\",padded:\"true\",textAlign:\"center\"},YouTube?/*#__PURE__*/React.createElement(ReactPlayer,{url:YouTube,loop:true,width:\"100%\",controls:true}):/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Dimmer,{active:true},/*#__PURE__*/React.createElement(Loader,{padded:\"true\",indeterminate:true,style:{fontSize:'18px'}},\"Click Videos to Play\")),/*#__PURE__*/React.createElement(Icon,{name:\"youtube\",style:{fontSize:'20em'},color:\"red\"}))),props.movie.overview?/*#__PURE__*/React.createElement(Grid,{style:{marginRight:'1rem'}},/*#__PURE__*/React.createElement(Grid.Row,null,/*#__PURE__*/React.createElement(Grid.Column,null,/*#__PURE__*/React.createElement(Segment,{verticalalign:\"middle\",style:{backgroundColor:'#111111'}},/*#__PURE__*/React.createElement(Header,{color:\"green\",style:{fontSize:'2.5em',fontFamilty:'',fontWeight:'bold',padding:'1rem'}},props.movie.title||props.movie.name)))),/*#__PURE__*/React.createElement(Grid.Row,null,/*#__PURE__*/React.createElement(Grid.Column,{width:16},/*#__PURE__*/React.createElement(Segment,{style:{backgroundColor:'#111111'}},props.movie.overview?/*#__PURE__*/React.createElement(Grid,null,/*#__PURE__*/React.createElement(Grid.Column,{width:4},/*#__PURE__*/React.createElement(Icon,{name:\"info\",color:\"green\"}),\" Description\"),/*#__PURE__*/React.createElement(Grid.Column,{width:12,style:{textAlign:'justify'}},props.movie.overview)):\"\",props.movie.vote_average?/*#__PURE__*/React.createElement(Grid,null,/*#__PURE__*/React.createElement(Grid.Column,{width:4},/*#__PURE__*/React.createElement(Icon,{name:\"star\",color:\"green\"}),\"  Rating\"),/*#__PURE__*/React.createElement(Grid.Column,{width:12},props.movie.vote_average*10,\"%\",\" \")):\"\",props.movie.number_of_episodes?/*#__PURE__*/React.createElement(Grid,null,/*#__PURE__*/React.createElement(Grid.Column,{width:4},/*#__PURE__*/React.createElement(Icon,{name:\"braille\",color:\"green\"}),\" Episodes\"),/*#__PURE__*/React.createElement(Grid.Column,{width:12},props.movie.number_of_episodes)):\"\",props.movie.number_of_seasons?/*#__PURE__*/React.createElement(Grid,null,/*#__PURE__*/React.createElement(Grid.Column,{width:4},/*#__PURE__*/React.createElement(Icon,{name:\"folder open\",color:\"green\"}),\" Seasons\"),/*#__PURE__*/React.createElement(Grid.Column,{width:12},props.movie.number_of_seasons)):\"\",props.movie.release_date||props.movie.first_air_date?/*#__PURE__*/React.createElement(Grid,null,/*#__PURE__*/React.createElement(Grid.Column,{width:4},/*#__PURE__*/React.createElement(Icon,{name:\"cog\",color:\"green\"}),\" Release Date\"),/*#__PURE__*/React.createElement(Grid.Column,{width:12},props.movie.release_date||props.movie.first_air_date)):\"\",props.movie.runtime||props.movie.episode_run_time?/*#__PURE__*/React.createElement(Grid,null,/*#__PURE__*/React.createElement(Grid.Column,{width:4},/*#__PURE__*/React.createElement(Icon,{name:\"hourglass half\",color:\"green\"}),\" Runtime\"),/*#__PURE__*/React.createElement(Grid.Column,{width:12},props.movie.runtime||props.movie.episode_run_time)):\"\",/*#__PURE__*/React.createElement(\"br\",null))))):/*#__PURE__*/React.createElement(\"div\",null)))))));};export default _SearchMovieList;","map":{"version":3,"sources":["C:/Users/ACTIVANTS/Downloads/CircuitBreakShow-master/CircuitBreakShow-master/src/SecondaryComponents/Desktop/_SearchMovieList.js"],"names":["React","useState","useEffect","Header","Icon","Segment","Grid","Modal","Search","Button","Dimmer","Loader","ReactPlayer","_SearchMovieList","props","open","setOpen","window","innerWidth","defHeight","setHeight","YouTube","setYoutube","setHeightofScreen","innerHeight","addEventListener","removeEventListener","movie","videos","Trailer","results","sort","a","b","size","filter","x","type","Teaser","key","map","close","onCloseModal","padding","backgroundColor","searchInputValue","onSearchHandler","defName","margin","color","marginRight","minHeight","listOfMovies","fontSize","overview","fontFamilty","fontWeight","title","name","textAlign","vote_average","number_of_episodes","number_of_seasons","release_date","first_air_date","runtime","episode_run_time"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Header, Icon, Segment, Grid, Modal, Search, Button, Dimmer, Loader } from 'semantic-ui-react';\nimport ReactPlayer from 'react-player'\n\n\nconst _SearchMovieList = props => {\n    const [open, setOpen] = useState(true);\n    const [defHeight, setHeight] = useState(window.innerWidth);\n    const [YouTube, setYoutube] = useState();\n\n    useEffect(() => {\n        const setHeightofScreen = () => setHeight(window.innerHeight)\n        window.addEventListener('resize', setHeightofScreen)\n\n        return () => {\n            window.removeEventListener('resize', setHeightofScreen)\n        }\n    })\n\n    useEffect(() => {\n\n        if (props.movie.videos) {\n            setOpen(true);\n            const Trailer = props.movie.videos.results.sort((a, b) => b.size - a.size).filter(x => x.type === 'Trailer');\n            const Teaser = props.movie.videos.results.sort((a, b) => b.size - a.size).filter(x => x.type === 'Teaser');\n            let key = '';\n            if (Trailer)\n                key = Trailer.map(x => x.key)\n            else\n                key = Teaser.map(x => x.key)\n\n            setYoutube(`https://www.youtube.com/watch?v=${key}`);\n        }\n\n        return () => {\n            setYoutube();\n        }\n    }, [props.movie])\n\n\n    const close = () => {\n        setYoutube();\n        setOpen(false);\n        props.onCloseModal();\n        \n    }\n\n    return (\n        <React.Fragment>\n            <Modal size={'fullscreen'} dimmer=\"blurring\" open={open} onClose={() => close()}>\n                <Modal.Actions style={{ padding: '0rem', backgroundColor: '#000000' }}>\n                    <Grid padded=\"true\" textAlign=\"center\">\n                        <Grid.Column width={13} >\n                            <Search\n                                value={props.searchInputValue}\n                                showNoResults={false}\n                                className=\"customSearch\"\n                                onSearchChange={props.onSearchHandler}\n                                placeholder={props.defName} />\n                        </Grid.Column>\n                        <Grid.Column width={3}>\n                            <Segment style={{ padding: '10px', margin: '0px' }}>\n                                <Button onClick={() => close()} icon labelPosition='left' style={{ backgroundColor: `#111111` }}>\n                                    <Icon name='checkmark' color='green' />\n                                    <span style={{ color: 'white' }}>Done\n                                            </span>\n                                </Button>\n                            </Segment>\n                        </Grid.Column>\n                    </Grid>\n                </Modal.Actions>\n                <Modal.Content style={{ backgroundColor: 'transparent !important' }}>\n                    <Modal.Description>\n                        <Grid style={{ marginRight: '1rem' }}>\n                            <Grid.Column width={6}>\n                                <Modal.Content scrolling style={{ marginRight: '0rem', backgroundColor: 'transparent !important', minHeight: `${defHeight}px` }}>\n                                    <Modal.Description>\n                                        <Grid padded=\"true\">\n                                            <Grid.Row>\n                                                <Grid.Column textAlign='center'>\n                                                    {props.listOfMovies}\n                                                </Grid.Column>\n                                            </Grid.Row>\n                                        </Grid>\n\n                                    </Modal.Description>\n                                </Modal.Content>\n\n                            </Grid.Column>\n                            <Grid.Column width={10}>\n                                <Segment color='green' padded=\"true\" textAlign=\"center\">\n                                    {YouTube ? <ReactPlayer url={YouTube}\n                                        loop\n                                        width='100%'\n                                        controls\n                                    /> :\n                                        <div>\n                                            <Dimmer active>\n                                                <Loader padded=\"true\" indeterminate style={{ fontSize: '18px' }}>Click Videos to Play</Loader>\n                                            </Dimmer>\n                                            <Icon name=\"youtube\" style={{ fontSize: '20em' }} color=\"red\" />\n                                        </div>\n                                    }\n                                </Segment>\n                                {props.movie.overview ?\n                                    <Grid style={{ marginRight: '1rem' }}>\n                                        <Grid.Row >\n                                            <Grid.Column>\n                                                <Segment verticalalign='middle' style={{ backgroundColor: '#111111' }}>\n                                                    <Header color=\"green\" style={{ fontSize: '2.5em', fontFamilty: '', fontWeight: 'bold', padding: '1rem' }}>\n                                                        {props.movie.title || props.movie.name}\n                                                    </Header>\n                                                </Segment>\n                                            </Grid.Column>\n                                        </Grid.Row>\n                                        <Grid.Row>\n                                            <Grid.Column width={16}>\n                                                <Segment style={{ backgroundColor: '#111111' }}>\n                                                   {props.movie.overview ? \n                                                    <Grid>\n                                                        <Grid.Column width={4}>\n                                                            <Icon name=\"info\" color=\"green\"></Icon> Description\n                                                        </Grid.Column>\n                                                        <Grid.Column width={12} style={{textAlign:'justify'}}>\n                                                            {props.movie.overview}\n                                                        </Grid.Column>\n                                                    </Grid> : \"\" }\n                                                    {props.movie.vote_average ? \n                                                    <Grid>\n                                                        <Grid.Column width={4}>\n                                                            <Icon name=\"star\" color=\"green\"></Icon>  Rating\n                                                        </Grid.Column>\n                                                        <Grid.Column width={12}>\n                                                            {props.movie.vote_average * 10}%{\" \"}\n                                                        </Grid.Column>\n                                                    </Grid> : \"\" }\n                                                    {props.movie.number_of_episodes ?\n                                                    <Grid>\n                                                        <Grid.Column width={4}>\n                                                            <Icon name=\"braille\" color=\"green\"></Icon> Episodes\n                                                        </Grid.Column>\n                                                        <Grid.Column width={12}>\n                                                            {props.movie.number_of_episodes}\n                                                        </Grid.Column>\n                                                    </Grid> : \"\"}\n                                                    {props.movie.number_of_seasons ?\n                                                    <Grid>\n                                                        <Grid.Column width={4}>\n                                                            <Icon name=\"folder open\" color=\"green\"></Icon> Seasons\n                                                        </Grid.Column>\n                                                        <Grid.Column width={12}>\n                                                            {props.movie.number_of_seasons}\n                                                        </Grid.Column>\n                                                    </Grid> : \"\" }\n                                                    {props.movie.release_date || props.movie.first_air_date ? \n                                                    <Grid>\n                                                        <Grid.Column width={4}>\n                                                            <Icon name=\"cog\" color=\"green\"></Icon> Release Date\n                                                        </Grid.Column>\n                                                        <Grid.Column width={12}>\n                                                            {props.movie.release_date || props.movie.first_air_date}\n                                                        </Grid.Column>\n                                                    </Grid> : \"\" }\n                                                    {props.movie.runtime || props.movie.episode_run_time ?\n                                                    <Grid>\n                                                        <Grid.Column width={4}>\n                                                            <Icon name=\"hourglass half\" color=\"green\"></Icon> Runtime\n                                                        </Grid.Column>\n                                                        <Grid.Column width={12}>\n                                                        {props.movie.runtime || props.movie.episode_run_time}\n                                                        </Grid.Column>\n                                                    </Grid> : \"\" }\n                                                    <br/>\n                                                </Segment>\n                                            </Grid.Column>\n                                        </Grid.Row>\n                                    </Grid> : <div></div>}\n                            </Grid.Column>\n                        </Grid>\n                    </Modal.Description>\n                </Modal.Content>\n\n            </Modal>\n        </React.Fragment >\n    )\n}\n\nexport default _SearchMovieList;"]},"metadata":{},"sourceType":"module"}