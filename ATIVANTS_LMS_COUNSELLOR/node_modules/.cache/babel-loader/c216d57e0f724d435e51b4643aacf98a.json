{"ast":null,"code":"var _jsxFileName = \"E:\\\\ShawMovieWebsite\\\\shaw-website\\\\src\\\\MainComponents\\\\DesktopComponent.js\";\nimport GetWidthOfComponent from './GetWidthOfComponent';\nimport React, { Component, useState, useEffect, useRef } from 'react';\nimport _Header from '../SecondaryComponents/Desktop/_Header';\nimport _NavigationItems from '../SecondaryComponents/Desktop/_NavigationItems';\nimport _MovieGenres from '../SecondaryComponents/Desktop/_MovieGenres';\nimport axios from 'axios';\nimport _Movie from '../../src/Store/_Movie';\nimport _SearchMovieList from '../SecondaryComponents/Desktop/_SearchMovieList';\nimport { Responsive, Grid } from 'semantic-ui-react';\nimport _BrowseCategories from '../SecondaryComponents/Desktop/_BrowseCategories';\nimport _MovieGenresList from '../SecondaryComponents/Desktop/_MovieGenresList';\nimport _SearchMovieListDisplay from '../SecondaryComponents/Desktop/_SearchMovieListDisplay';\n\nconst DesktopComponent = ({\n  children\n}) => {\n  const [inputValue, setInputValue] = useState('');\n  const [movieList, setMovieList] = useState([]);\n  useEffect(() => {\n    const url = `https://api.themoviedb.org/3/search/multi?api_key=9ea839ec7891591994ec0f540b4b199f&language=en-US&include_adult=false&query=${inputValue}`;\n    axios.get(url).then(res => {\n      const results = res.data.results;\n      let movieImageUrl;\n      let movieRows = [];\n      results.forEach(movie => {\n        if (movie.poster_path !== null && movie.media_type !== \"person\") {\n          movieImageUrl = \"https://image.tmdb.org/t/p/w500\" + movie.poster_path;\n          const movieComponent = /*#__PURE__*/React.createElement(_SearchMovieListDisplay, {\n            movieDetials: () => selectMovieHandler(movie),\n            key: movie.id,\n            movieImage: movieImageUrl,\n            movie: movie,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 36\n            }\n          });\n          movieRows.push(movieComponent);\n          console.log(movie);\n        }\n      });\n      setMovieList(movieRows);\n    }).catch(error => {\n      console.log(\"errror\", error);\n    });\n    return () => {\n      setMovieList([]);\n      console.log(\"cleaned DC\");\n    };\n  }, [inputValue]);\n\n  const selectMovieHandler = movieID => {\n    alert(movieID);\n  };\n\n  return /*#__PURE__*/React.createElement(Responsive, {\n    getWidth: GetWidthOfComponent,\n    minWidth: Responsive.onlyTablet.minWidth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(_NavigationItems, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(_BrowseCategories, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(_MovieGenres, {\n    onSearchHandler: e => setInputValue(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), inputValue ? /*#__PURE__*/React.createElement(_SearchMovieList, {\n    listOfMovies: movieList,\n    onSearchHandler: e => setInputValue(e.target.value),\n    searchInputValue: inputValue,\n    onCloseModal: () => setInputValue(''),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }) : \" \", /*#__PURE__*/React.createElement(_MovieGenresList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }), children);\n};\n\nexport default DesktopComponent;","map":{"version":3,"sources":["E:/ShawMovieWebsite/shaw-website/src/MainComponents/DesktopComponent.js"],"names":["GetWidthOfComponent","React","Component","useState","useEffect","useRef","_Header","_NavigationItems","_MovieGenres","axios","_Movie","_SearchMovieList","Responsive","Grid","_BrowseCategories","_MovieGenresList","_SearchMovieListDisplay","DesktopComponent","children","inputValue","setInputValue","movieList","setMovieList","url","get","then","res","results","data","movieImageUrl","movieRows","forEach","movie","poster_path","media_type","movieComponent","selectMovieHandler","id","push","console","log","catch","error","movieID","alert","onlyTablet","minWidth","e","target","value"],"mappings":"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","sourcesContent":["import GetWidthOfComponent from './GetWidthOfComponent'\r\nimport React, { Component, useState, useEffect, useRef } from 'react'\r\nimport _Header from '../SecondaryComponents/Desktop/_Header'\r\nimport _NavigationItems from '../SecondaryComponents/Desktop/_NavigationItems'\r\nimport _MovieGenres from '../SecondaryComponents/Desktop/_MovieGenres'\r\nimport axios from 'axios'\r\nimport _Movie from '../../src/Store/_Movie'\r\nimport _SearchMovieList from '../SecondaryComponents/Desktop/_SearchMovieList'\r\n\r\nimport { Responsive, Grid } from 'semantic-ui-react'\r\nimport _BrowseCategories from '../SecondaryComponents/Desktop/_BrowseCategories'\r\nimport _MovieGenresList from '../SecondaryComponents/Desktop/_MovieGenresList'\r\nimport _SearchMovieListDisplay from '../SecondaryComponents/Desktop/_SearchMovieListDisplay'\r\n\r\nconst DesktopComponent = ({ children }) => {\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [movieList, setMovieList] = useState([]);\r\n\r\n  useEffect(() => {\r\n\r\n    const url = `https://api.themoviedb.org/3/search/multi?api_key=9ea839ec7891591994ec0f540b4b199f&language=en-US&include_adult=false&query=${inputValue}`;\r\n    axios.get(url)\r\n      .then(res => {\r\n        const results = res.data.results;\r\n        let movieImageUrl;\r\n        let movieRows = [];\r\n\r\n        results.forEach((movie) => {\r\n          if (movie.poster_path !== null && movie.media_type !== \"person\") {\r\n            movieImageUrl = \"https://image.tmdb.org/t/p/w500\" + movie.poster_path;\r\n\r\n            const movieComponent = <_SearchMovieListDisplay\r\n              movieDetials = {() => selectMovieHandler(movie)}\r\n              key={movie.id}\r\n              movieImage={movieImageUrl}\r\n              movie={movie}\r\n            />\r\n            movieRows.push(movieComponent);\r\n            console.log(movie)\r\n          }\r\n        })\r\n\r\n        setMovieList(movieRows);\r\n\r\n      }).catch(error => {\r\n        console.log(\"errror\", error);\r\n      });\r\n\r\n    return () => {\r\n      setMovieList([]);\r\n      console.log(\"cleaned DC\")\r\n    }\r\n\r\n  }, [inputValue]);\r\n\r\n  const selectMovieHandler = movieID => {\r\n      alert(movieID);\r\n  }\r\n  \r\n  return (\r\n    <Responsive getWidth={GetWidthOfComponent} minWidth={Responsive.onlyTablet.minWidth}>\r\n\r\n      <Grid>\r\n        <_Header />\r\n        <_NavigationItems />\r\n      </Grid>\r\n\r\n      <_BrowseCategories />\r\n\r\n      <_MovieGenres onSearchHandler={e => setInputValue(e.target.value)} />\r\n\r\n      {inputValue ? <_SearchMovieList listOfMovies={movieList} onSearchHandler={e => setInputValue(e.target.value)} searchInputValue={inputValue} onCloseModal={() => setInputValue('')} /> : \" \"}\r\n\r\n      <_MovieGenresList />\r\n\r\n      {children}\r\n\r\n    </Responsive >\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default DesktopComponent;"]},"metadata":{},"sourceType":"module"}