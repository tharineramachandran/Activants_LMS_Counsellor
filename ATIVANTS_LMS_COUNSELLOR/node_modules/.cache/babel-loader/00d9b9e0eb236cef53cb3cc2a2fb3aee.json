{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ACTIVANTS\\\\Desktop\\\\LMS Councellor\\\\Activants_LMS_Counsellor\\\\ATIVANTS_LMS_COUNSELLOR\\\\src\\\\SecondaryComponents\\\\Desktop\\\\RegistrationComponents\\\\_Registration_First.js\";\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Header, Icon, Form, Image, Message, Segment, Grid, Modal, Search, Button, Dimmer, Loader, Divider, List } from 'semantic-ui-react';\nimport { useForm } from \"react-hook-form\";\n\nvar Registration_First = function Registration_First(_ref) {\n  var formData = _ref.formData,\n      setForm = _ref.setForm,\n      navigation = _ref.navigation;\n  var COUNSELLOR_NAME = formData.COUNSELLOR_NAME;\n  console.log(formData);\n\n  var _useForm = useForm({}),\n      handleSubmit = _useForm.handleSubmit,\n      register = _useForm.register,\n      errors = _useForm.errors;\n\n  var onSubmit = function onSubmit(data) {\n    navigation.next();\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    size: \"small\",\n    onSubmit: handleSubmit(onSubmit),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"center\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Segment, {\n    stacked: true,\n    style: {\n      width: '90%',\n      textAlign: 'left'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 37\n    }\n  }, \"User Input\"), /*#__PURE__*/React.createElement(\"input\", {\n    fluid: true,\n    icon: \"user\",\n    iconPosition: \"left\",\n    placeholder: \"Enter your details\",\n    type: \"text\",\n    name: \"COUNSELLOR_NAME\",\n    onChange: setForm,\n    value: COUNSELLOR_NAME,\n    ref: register({\n      validate: function validate(COUNSELLOR_NAME) {\n        return COUNSELLOR_NAME && COUNSELLOR_NAME.length > 3;\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 37\n    }\n  }), errors.firstName && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"customError\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 58\n    }\n  }, \"Username invalid\")), /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 37\n    }\n  }, \"User Input\"), /*#__PURE__*/React.createElement(\"input\", {\n    fluid: true,\n    icon: \"user\",\n    iconPosition: \"left\",\n    placeholder: \"Enter your details\",\n    type: \"text\",\n    name: \"firstName\",\n    onChange: setForm,\n    value: firstName,\n    ref: register({\n      validate: function validate(firstName) {\n        return firstName && firstName.length > 3;\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 37\n    }\n  }), errors.firstName && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"customError\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 59\n    }\n  }, \"Username invalid\"))), /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 37\n    }\n  }, \"User Input\"), /*#__PURE__*/React.createElement(\"input\", {\n    fluid: true,\n    icon: \"user\",\n    iconPosition: \"left\",\n    placeholder: \"Enter your details\",\n    type: \"text\",\n    name: \"firstName\",\n    onChange: setForm,\n    value: firstName,\n    ref: register({\n      validate: function validate(firstName) {\n        return firstName && firstName.length > 3;\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 37\n    }\n  }), errors.firstName && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"customError\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 60\n    }\n  }, \"Username invalid\")), /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 37\n    }\n  }, \"User Input\"), /*#__PURE__*/React.createElement(\"input\", {\n    fluid: true,\n    icon: \"user\",\n    iconPosition: \"left\",\n    placeholder: \"Enter your details\",\n    type: \"text\",\n    name: \"firstName\",\n    onChange: setForm,\n    value: firstName,\n    ref: register({\n      validate: function validate(firstName) {\n        return firstName && firstName.length > 3;\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 37\n    }\n  }), errors.firstName && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"customError\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 59\n    }\n  }, \"Username invalid\"))), /*#__PURE__*/React.createElement(Button, {\n    color: \"teal\",\n    fluid: true,\n    size: \"large\",\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 29\n    }\n  }, \"Next\"))))));\n};\n\nexport default Registration_First;","map":{"version":3,"sources":["C:/Users/ACTIVANTS/Desktop/LMS Councellor/Activants_LMS_Counsellor/ATIVANTS_LMS_COUNSELLOR/src/SecondaryComponents/Desktop/RegistrationComponents/_Registration_First.js"],"names":["React","useState","useEffect","useContext","Header","Icon","Form","Image","Message","Segment","Grid","Modal","Search","Button","Dimmer","Loader","Divider","List","useForm","Registration_First","formData","setForm","navigation","COUNSELLOR_NAME","console","log","handleSubmit","register","errors","onSubmit","data","next","width","textAlign","validate","length","firstName"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport {\n    Header, Icon, Form, Image, Message,\n    Segment, Grid, Modal, Search, Button, Dimmer, Loader, Divider, List\n} from 'semantic-ui-react';\nimport { useForm } from \"react-hook-form\";\n\nconst Registration_First = ({ formData, setForm, navigation }) => {\n\n    const { COUNSELLOR_NAME } = formData;\n    console.log(formData)\n\n    const { handleSubmit, register, errors } = useForm({\n\n    });\n\n    const onSubmit = (data) => {\n        navigation.next()\n    };\n\n\n    return (\n\n        <Grid>\n            <Grid.Column>\n                <Form size='small' onSubmit={handleSubmit(onSubmit)}>\n                    <center>\n                        <Segment stacked style={{ width: '90%', textAlign:'left' }}>\n                            <Form.Group widths='equal'>\n                                <Form.Field  className=\"CustomForm\">\n                                    <label>User Input</label>\n                                    <input\n                                        fluid\n                                        icon='user'\n                                        iconPosition='left'\n                                        placeholder='Enter your details'\n                                        type='text'\n                                        name=\"COUNSELLOR_NAME\"\n                                        onChange={setForm}\n                                        value={COUNSELLOR_NAME}\n                                        ref={register({ validate: COUNSELLOR_NAME => COUNSELLOR_NAME && COUNSELLOR_NAME.length > 3 })}\n                                    />\n                                    {errors.firstName && <p className=\"customError\">Username invalid</p>}\n                                </Form.Field>\n                               \n\n                                <Form.Field  className=\"CustomForm\">\n                                    <label>User Input</label>\n                                    <input\n                                        fluid\n                                        icon='user'\n                                        iconPosition='left'\n                                        placeholder='Enter your details'\n                                        type='text'\n                                        name=\"firstName\"\n                                        onChange={setForm}\n                                        value={firstName}\n                                        ref={register({ validate: firstName => firstName && firstName.length > 3 })}\n                                    />\n                                     {errors.firstName && <p className=\"customError\">Username invalid</p>}\n                                </Form.Field>\n                               \n\n                            </Form.Group>\n\n                            <Form.Group widths='equal'>\n                                <Form.Field  className=\"CustomForm\">\n                                    <label>User Input</label>\n                                    <input\n                                        fluid\n                                        icon='user'\n                                        iconPosition='left'\n                                        placeholder='Enter your details'\n                                        type='text'\n                                        name=\"firstName\"\n                                        onChange={setForm}\n                                        value={firstName}\n                                        ref={register({ validate: firstName => firstName && firstName.length > 3 })}\n                                    />\n                                      {errors.firstName && <p className=\"customError\">Username invalid</p>}\n                                </Form.Field>\n\n                                <Form.Field  className=\"CustomForm\">\n                                    <label>User Input</label>\n                                    <input\n                                        fluid\n                                        icon='user'\n                                        iconPosition='left'\n                                        placeholder='Enter your details'\n                                        type='text'\n                                        name=\"firstName\"\n                                        onChange={setForm}\n                                        value={firstName}\n                                        ref={register({ validate: firstName => firstName && firstName.length > 3 })}\n                                    />\n                                     {errors.firstName && <p className=\"customError\">Username invalid</p>}\n                                </Form.Field>\n                            </Form.Group>\n\n                            <Button\n                                color='teal'\n                                fluid\n                                size='large'\n                                type=\"submit\"\n                            >\n                                Next\n                        </Button>\n\n                        </Segment>\n                    </center>\n                </Form>\n\n            </Grid.Column>\n        </Grid>\n    )\n\n}\n\nexport default Registration_First;"]},"metadata":{},"sourceType":"module"}