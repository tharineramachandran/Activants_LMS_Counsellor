{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\ACTIVANTS\\\\Desktop\\\\LMS Councellor\\\\Activants_LMS_Counsellor\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ACTIVANTS\\\\Desktop\\\\LMS Councellor\\\\Activants_LMS_Counsellor\\\\ATIVANTS_LMS_COUNSELLOR\\\\src\\\\SecondaryComponents\\\\Desktop\\\\RegistrationComponents\\\\__RegistrationForm1.js\";\n\nimport React, { useEffect, useState } from 'react';\nimport { useForm, Error } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport { useStateMachine } from \"little-state-machine\";\nimport __updateAction from '../RegistrationComponents/__updateAction';\nimport { Header, Icon, Form, Image, Message, Segment, Grid, Modal, Search, Button, Dimmer, Loader, Divider, List } from 'semantic-ui-react';\n\nvar __RegistrationForm1 = function __RegistrationForm1() {\n  var _useStateMachine = useStateMachine(__updateAction),\n      state = _useStateMachine.state,\n      action = _useStateMachine.action;\n\n  var _useState = useState(window.innerWidth),\n      _useState2 = _slicedToArray(_useState, 2),\n      defHeight = _useState2[0],\n      setHeight = _useState2[1];\n\n  var _useForm = useForm({\n    defaultValues: state.yourDetails\n  }),\n      handleSubmit = _useForm.handleSubmit,\n      register = _useForm.register,\n      errors = _useForm.errors;\n\n  var _useHistory = useHistory(),\n      push = _useHistory.push;\n\n  var onSubmit = function onSubmit(data) {\n    action(data);\n    push(\"/__RegistrationForm2\");\n  };\n\n  useEffect(function () {\n    var setHeightofScreen = function setHeightofScreen() {\n      return setHeight(window.innerHeight);\n    };\n\n    window.addEventListener('resize', setHeightofScreen);\n    return function () {\n      window.removeEventListener('resize', setHeightofScreen);\n    };\n  });\n  return /*#__PURE__*/React.createElement(Grid, {\n    textAlign: \"left\",\n    verticalAlign: \"middle\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    size: \"small\",\n    onSubmit: handleSubmit(onSubmit),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Segment, {\n    stacked: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 33\n    }\n  }, \"User Input\"), /*#__PURE__*/React.createElement(\"input\", {\n    fluid: true,\n    icon: \"user\",\n    iconPosition: \"left\",\n    placeholder: \"Enter your details\",\n    type: \"text\",\n    name: \"firstName\",\n    ref: register({\n      validate: function validate(firstName) {\n        return firstName && firstName.length > 3;\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 33\n    }\n  })), errors.firstName && /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 50\n    }\n  }, \"Username invalid\"), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 33\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    fluid: true,\n    icon: \"user\",\n    iconPosition: \"left\",\n    placeholder: \"Enter your details\",\n    type: \"text\",\n    name: \"firstName\",\n    ref: register({\n      validate: function validate(firstName) {\n        return firstName && firstName.length > 3;\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 33\n    }\n  })), errors.firstName && /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 50\n    }\n  }, \"Username invalid\")), /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 33\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    fluid: true,\n    icon: \"user\",\n    iconPosition: \"left\",\n    placeholder: \"Enter your details\",\n    type: \"text\",\n    name: \"firstName\",\n    ref: register({\n      validate: function validate(firstName) {\n        return firstName && firstName.length > 3;\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 33\n    }\n  })), errors.firstName && /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 50\n    }\n  }, \"Username invalid\"), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 33\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    fluid: true,\n    icon: \"user\",\n    iconPosition: \"left\",\n    placeholder: \"Enter your details\",\n    type: \"text\",\n    name: \"firstName\",\n    ref: register({\n      validate: function validate(firstName) {\n        return firstName && firstName.length > 3;\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 33\n    }\n  })), errors.firstName && /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 50\n    }\n  }, \"Username invalid\")), /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 33\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    fluid: true,\n    icon: \"user\",\n    iconPosition: \"left\",\n    placeholder: \"Enter your details\",\n    type: \"text\",\n    name: \"firstName\",\n    ref: register({\n      validate: function validate(firstName) {\n        return firstName && firstName.length > 3;\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 33\n    }\n  })), errors.firstName && /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 50\n    }\n  }, \"Username invalid\"), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 33\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    fluid: true,\n    icon: \"user\",\n    iconPosition: \"left\",\n    placeholder: \"Enter your details\",\n    type: \"text\",\n    name: \"firstName\",\n    ref: register({\n      validate: function validate(firstName) {\n        return firstName && firstName.length > 3;\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 33\n    }\n  })), errors.firstName && /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 50\n    }\n  }, \"Username invalid\")), /*#__PURE__*/React.createElement(Button, {\n    color: \"teal\",\n    fluid: true,\n    size: \"large\",\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 25\n    }\n  }, \"Next\")))));\n};\n\nexport default __RegistrationForm1;","map":{"version":3,"sources":["C:/Users/ACTIVANTS/Desktop/LMS Councellor/Activants_LMS_Counsellor/ATIVANTS_LMS_COUNSELLOR/src/SecondaryComponents/Desktop/RegistrationComponents/__RegistrationForm1.js"],"names":["React","useEffect","useState","useForm","Error","useHistory","useStateMachine","__updateAction","Header","Icon","Form","Image","Message","Segment","Grid","Modal","Search","Button","Dimmer","Loader","Divider","List","__RegistrationForm1","state","action","window","innerWidth","defHeight","setHeight","defaultValues","yourDetails","handleSubmit","register","errors","push","onSubmit","data","setHeightofScreen","innerHeight","addEventListener","removeEventListener","validate","firstName","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useForm, Error } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useStateMachine } from \"little-state-machine\";\r\nimport __updateAction from '../RegistrationComponents/__updateAction';\r\nimport {\r\n    Header, Icon, Form, Image, Message,\r\n    Segment, Grid, Modal, Search, Button, Dimmer, Loader, Divider, List\r\n} from 'semantic-ui-react';\r\n\r\n\r\nconst __RegistrationForm1 = () => {\r\n\r\n    const { state, action } = useStateMachine(__updateAction);\r\n    const [defHeight, setHeight] = useState(window.innerWidth);\r\n    \r\n    const { handleSubmit, register, errors } = useForm({\r\n        defaultValues: state.yourDetails\r\n    });\r\n\r\n    const { push } = useHistory();\r\n\r\n    const onSubmit = (data) => {\r\n        action(data);\r\n        push(\"/__RegistrationForm2\");\r\n    };\r\n\r\n    useEffect(() => {\r\n        const setHeightofScreen = () => setHeight(window.innerHeight)\r\n        window.addEventListener('resize', setHeightofScreen)\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', setHeightofScreen)\r\n        }\r\n    })\r\n\r\n    return (\r\n        <Grid textAlign='left' verticalAlign='middle'>\r\n            <Grid.Column>\r\n                <Form size='small' onSubmit={handleSubmit(onSubmit)}>\r\n                    <Segment stacked>\r\n\r\n                        <Form.Group widths='equal'>\r\n                            <Form.Field>\r\n                                <label>User Input</label>\r\n                                <input\r\n                                    fluid\r\n                                    icon='user'\r\n                                    iconPosition='left'\r\n                                    placeholder='Enter your details'\r\n                                    type='text'\r\n                                    name=\"firstName\"\r\n                                    ref={register({ validate: firstName => firstName && firstName.length > 3 })}\r\n                                />\r\n                            </Form.Field>\r\n                            {errors.firstName && <p>Username invalid</p>}\r\n\r\n\r\n                            <Form.Field>\r\n                                <label>First Name</label>\r\n\r\n                                <input\r\n                                    fluid\r\n                                    icon='user'\r\n                                    iconPosition='left'\r\n                                    placeholder='Enter your details'\r\n                                    type='text'\r\n                                    name=\"firstName\"\r\n                                    ref={register({ validate: firstName => firstName && firstName.length > 3 })}\r\n                                />\r\n                            </Form.Field>\r\n                            {errors.firstName && <p>Username invalid</p>}\r\n                        </Form.Group>\r\n\r\n                        <Form.Group widths='equal'>\r\n                            <Form.Field>\r\n                                <label>First Name</label>\r\n\r\n                                <input\r\n                                    fluid\r\n                                    icon='user'\r\n                                    iconPosition='left'\r\n                                    placeholder='Enter your details'\r\n                                    type='text'\r\n                                    name=\"firstName\"\r\n                                    ref={register({ validate: firstName => firstName && firstName.length > 3 })}\r\n                                />\r\n                            </Form.Field>\r\n                            {errors.firstName && <p>Username invalid</p>}\r\n\r\n                            <Form.Field>\r\n                                <label>First Name</label>\r\n\r\n                                <input\r\n                                    fluid\r\n                                    icon='user'\r\n                                    iconPosition='left'\r\n                                    placeholder='Enter your details'\r\n                                    type='text'\r\n                                    name=\"firstName\"\r\n                                    ref={register({ validate: firstName => firstName && firstName.length > 3 })}\r\n                                />\r\n                            </Form.Field>\r\n                            {errors.firstName && <p>Username invalid</p>}\r\n                        </Form.Group>\r\n\r\n                        <Form.Group widths='equal'>\r\n                            <Form.Field>\r\n                                <label>First Name</label>\r\n\r\n                                <input\r\n                                    fluid\r\n                                    icon='user'\r\n                                    iconPosition='left'\r\n                                    placeholder='Enter your details'\r\n                                    type='text'\r\n                                    name=\"firstName\"\r\n                                    ref={register({ validate: firstName => firstName && firstName.length > 3 })}\r\n                                />\r\n                            </Form.Field>\r\n                            {errors.firstName && <p>Username invalid</p>}\r\n\r\n                            <Form.Field>\r\n                                <label>First Name</label>\r\n\r\n                                <input\r\n                                    fluid\r\n                                    icon='user'\r\n                                    iconPosition='left'\r\n                                    placeholder='Enter your details'\r\n                                    type='text'\r\n                                    name=\"firstName\"\r\n                                    ref={register({ validate: firstName => firstName && firstName.length > 3 })}\r\n                                />\r\n                            </Form.Field>\r\n                            {errors.firstName && <p>Username invalid</p>}\r\n                        </Form.Group>\r\n\r\n                        <Button\r\n                            color='teal'\r\n                            fluid\r\n                            size='large'\r\n                            type=\"submit\"\r\n                        >\r\n                            Next\r\n                        </Button>\r\n                    </Segment>\r\n\r\n                </Form>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default __RegistrationForm1;\r\n"]},"metadata":{},"sourceType":"module"}