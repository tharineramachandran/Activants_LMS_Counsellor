{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\ACTIVANTS\\\\Desktop\\\\LMS Councellor\\\\Activants_LMS_Counsellor\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ACTIVANTS\\\\Desktop\\\\LMS Councellor\\\\Activants_LMS_Counsellor\\\\ATIVANTS_LMS_COUNSELLOR\\\\src\\\\SecondaryComponents\\\\Desktop\\\\RegistrationComponents\\\\_Registration_Second.js\";\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Header, Icon, Form, Image, Message, Segment, Grid, Modal, Search, Button, Dimmer, Loader, Divider, List, Dropdown, Select } from 'semantic-ui-react';\nimport { useForm } from \"react-hook-form\";\nimport Dropzone from 'react-dropzone';\nimport { useStep } from 'react-hooks-helper';\n\nvar Registration_Second = function Registration_Second(_ref) {\n  var formData = _ref.formData,\n      setForm = _ref.setForm,\n      navigation = _ref.navigation;\n  var COUNSELLOR_PHOTO = formData.COUNSELLOR_PHOTO;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      onDrop = _useState2[0],\n      setOnDrop = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      DisplayErrorImageSize = _useState4[0],\n      setDisplayErrorImageSize = _useState4[1];\n\n  console.log(formData);\n\n  var _useForm = useForm({}),\n      handleSubmit = _useForm.handleSubmit,\n      register = _useForm.register,\n      errors = _useForm.errors;\n\n  var onSubmit = function onSubmit(data) {\n    navigation.next();\n  };\n\n  var handleOnDrop = function handleOnDrop(files, rejectedFiles) {\n    console.log(files);\n    console.log(\"rejected files are\", rejectedFiles);\n\n    if (rejectedFiles && rejectedFiles.length > 0) {\n      var currentRejectedFile = rejectedFiles[0];\n      var currentRejectedFileType = currentRejectedFile.type;\n      var currentRejectedFileSize = currentRejectedFile.size;\n\n      if (currentRejectedFileSize > maxSizeofImage) {\n        setDisplayErrorImageSize(rejectedFiles[0].errors[1].Message);\n      }\n    }\n  };\n\n  var maxSizeofImage = 5e+6; //bytes\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    size: \"small\",\n    onSubmit: handleSubmit(onSubmit),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"center\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Dropzone, {\n    onDrop: handleOnDrop,\n    multiple: false,\n    accept: \"image/*\",\n    maxSize: maxSizeofImage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }, function (_ref2) {\n    var getRootProps = _ref2.getRootProps;\n    return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps(), {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 37\n      }\n    }, \"Drop files here, or click to select files\"));\n  }), /*#__PURE__*/React.createElement(Segment, {\n    stacked: true,\n    style: {\n      width: '90%',\n      textAlign: 'left'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 37\n    }\n  }, \"Counsellor Photo\"), /*#__PURE__*/React.createElement(\"input\", {\n    fluid: true,\n    icon: \"user\",\n    iconPosition: \"left\",\n    placeholder: \"Enter your details\",\n    type: \"text\",\n    name: \"COUNSELLOR_FIRST_NAME\",\n    onChange: setForm,\n    value: COUNSELLOR_PHOTO,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    color: \"teal\",\n    fluid: true,\n    size: \"large\",\n    onClick: function onClick() {\n      return navigation.previous();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  }, \"Back\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"teal\",\n    fluid: true,\n    size: \"large\",\n    type: \"submit\",\n    onClick: function onClick() {\n      return navigation.next();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 29\n    }\n  }, \"Next\"))))));\n};\n\nexport default Registration_Second;","map":{"version":3,"sources":["C:/Users/ACTIVANTS/Desktop/LMS Councellor/Activants_LMS_Counsellor/ATIVANTS_LMS_COUNSELLOR/src/SecondaryComponents/Desktop/RegistrationComponents/_Registration_Second.js"],"names":["React","useState","useEffect","useContext","Header","Icon","Form","Image","Message","Segment","Grid","Modal","Search","Button","Dimmer","Loader","Divider","List","Dropdown","Select","useForm","Dropzone","useStep","Registration_Second","formData","setForm","navigation","COUNSELLOR_PHOTO","onDrop","setOnDrop","DisplayErrorImageSize","setDisplayErrorImageSize","console","log","handleSubmit","register","errors","onSubmit","data","next","handleOnDrop","files","rejectedFiles","length","currentRejectedFile","currentRejectedFileType","type","currentRejectedFileSize","size","maxSizeofImage","getRootProps","width","textAlign","previous"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport {\r\n    Header, Icon, Form, Image, Message,\r\n    Segment, Grid, Modal, Search, Button, Dimmer, Loader, Divider, List, Dropdown, Select\r\n} from 'semantic-ui-react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport Dropzone from 'react-dropzone';\r\nimport { useStep } from 'react-hooks-helper';\r\n\r\nconst Registration_Second = ({ formData, setForm, navigation }) => {\r\n\r\n    const { COUNSELLOR_PHOTO } = formData;\r\n    const [onDrop, setOnDrop] = useState();\r\n    const [DisplayErrorImageSize, setDisplayErrorImageSize] = useState();\r\n\r\n    console.log(formData)\r\n\r\n    const { handleSubmit, register, errors } = useForm({\r\n\r\n    });\r\n\r\n    const onSubmit = (data) => {\r\n        navigation.next()\r\n    };\r\n\r\n    const handleOnDrop = (files, rejectedFiles) => {\r\n        console.log(files)\r\n        console.log(\"rejected files are\" , rejectedFiles)\r\n        if(rejectedFiles && rejectedFiles.length > 0)\r\n        {\r\n            const currentRejectedFile = rejectedFiles[0]\r\n            const currentRejectedFileType =  currentRejectedFile.type\r\n            const currentRejectedFileSize = currentRejectedFile.size\r\n            if(currentRejectedFileSize > maxSizeofImage)\r\n            {\r\n                setDisplayErrorImageSize(rejectedFiles[0].errors[1].Message)\r\n            }\r\n        }\r\n    }\r\n\r\n    const maxSizeofImage = 5e+6; //bytes\r\n\r\n    return (\r\n\r\n        <Grid>\r\n            <Grid.Column>\r\n                <Form size='small' onSubmit={handleSubmit(onSubmit)}>\r\n                    <center>\r\n\r\n                        <Dropzone onDrop={handleOnDrop} multiple={false} accept=\"image/*\" maxSize={maxSizeofImage}>\r\n                            {({ getRootProps }) => (\r\n                                <div {...getRootProps()}>\r\n                                    <p>Drop files here, or click to select files</p>\r\n                                </div>\r\n                            )}\r\n                        </Dropzone>\r\n\r\n                        <Segment stacked style={{ width: '90%', textAlign: 'left' }}>\r\n                            <Form.Group widths='equal'>\r\n                                <Form.Field className=\"CustomForm\">\r\n                                    <label>Counsellor Photo</label>\r\n                                    <input\r\n                                        fluid\r\n                                        icon='user'\r\n                                        iconPosition='left'\r\n                                        placeholder='Enter your details'\r\n                                        type='text'\r\n                                        name=\"COUNSELLOR_FIRST_NAME\"\r\n                                        onChange={setForm}\r\n                                        value={COUNSELLOR_PHOTO}\r\n                                    />\r\n                                </Form.Field>\r\n\r\n                            </Form.Group>\r\n\r\n\r\n                            <Button\r\n                                color='teal'\r\n                                fluid\r\n                                size='large'\r\n                                onClick={() => navigation.previous()}\r\n                            >\r\n                                Back\r\n                    </Button>\r\n\r\n                            <Button\r\n                                color='teal'\r\n                                fluid\r\n                                size='large'\r\n                                type=\"submit\"\r\n                                onClick={() => navigation.next()}\r\n                            >\r\n                                Next\r\n                    </Button>\r\n\r\n                        </Segment>\r\n                    </center>\r\n                </Form>\r\n\r\n            </Grid.Column>\r\n        </Grid >\r\n    )\r\n\r\n}\r\n\r\nexport default Registration_Second;"]},"metadata":{},"sourceType":"module"}