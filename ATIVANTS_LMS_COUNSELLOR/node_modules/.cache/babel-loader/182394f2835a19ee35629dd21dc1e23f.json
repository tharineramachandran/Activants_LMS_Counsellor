{"ast":null,"code":"var _jsxFileName = \"E:\\\\ShawMovieWebsite\\\\shaw-website\\\\src\\\\SecondaryComponents\\\\Desktop\\\\_SearchMovieList.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Header, Icon, Segment, Grid, Modal, Search, Button, Embed, Image, Rating, Divider } from 'semantic-ui-react';\nimport _HeaderMovieCast from './_HeaderMovieCast';\nimport ReactPlayer from 'react-player';\n\nconst _SearchMovieList = props => {\n  const [open, setOpen] = useState(true);\n  const [defHeight, setHeight] = useState(window.innerWidth);\n  const [YouTube, setYoutube] = useState('');\n  useEffect(() => {\n    const setHeightofScreen = () => setHeight(window.innerHeight);\n\n    window.addEventListener('resize', setHeightofScreen);\n    return () => {\n      window.removeEventListener('resize', setHeightofScreen);\n    };\n  });\n  useEffect(() => {\n    if (props.movie.videos) {\n      const Trailer = props.movie.videos.results.sort((a, b) => a.size - b.size).filter(x => x.type === 'Trailer');\n      console.log(Trailer);\n      const Teaser = props.movie.videos.results.sort((a, b) => a.size - b.size).filter(x => x.type === 'Teaser');\n      console.log(Teaser);\n      let key = 'ybji16u608U';\n\n      if (Trailer) {\n        console.log(\"True for trailer\");\n        key = Trailer.forEach(x => x.key);\n        console.log(key);\n      } else {\n        key = Teaser.forEach(x => x.key);\n      }\n\n      setYoutube(`https://www.youtube.com/watch?v=${key}`);\n    }\n\n    return () => {\n      setYoutube('');\n    };\n  }, [props.movie]);\n\n  const close = () => {\n    props.onCloseModal();\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    size: 'fullscreen',\n    dimmer: \"blurring\",\n    open: open,\n    onClose: () => close(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Actions, {\n    style: {\n      padding: '0rem',\n      backgroundColor: '#000000'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    padded: true,\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 13,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    value: props.searchInputValue,\n    showNoResults: false,\n    className: \"customSearch\",\n    onSearchChange: props.onSearchHandler,\n    placeholder: \"Search...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Segment, {\n    color: \"#000000\",\n    style: {\n      padding: '10px',\n      margin: '0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => close(),\n    icon: true,\n    labelPosition: \"left\",\n    style: {\n      backgroundColor: `#111111`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"checkmark\",\n    color: \"green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 37\n    }\n  }, \"Done\")))))), /*#__PURE__*/React.createElement(Modal.Content, {\n    style: {\n      backgroundColor: 'transparent !important'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Description, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Content, {\n    scrolling: true,\n    style: {\n      backgroundColor: 'transparent !important',\n      minHeight: `${defHeight}px`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Description, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    padded: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 49\n    }\n  }, props.listOfMovies)))))), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Segment, {\n    color: \"black\",\n    padded: true,\n    style: {\n      borderTop: '0px solid green !important;'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(ReactPlayer, {\n    url: YouTube,\n    loop: true,\n    width: \"100%\",\n    controls: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Segment, {\n    verticalAlign: \"middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    color: \"green\",\n    style: {\n      fontSize: '2em',\n      fontFamilty: '',\n      fontWeight: 'bold',\n      padding: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 49\n    }\n  }, props.movie.title || props.movie.name))), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Segment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 45\n    }\n  }, props.movie.overview), /*#__PURE__*/React.createElement(Segment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 45\n    }\n  }, \"Rating: \", props.movie.vote_average * 10, \"%\", \" \", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 49\n    }\n  }, props.movie.number_of_episodes ? \" Episodes: \" + props.movie.number_of_episodes : \"\", props.movie.number_of_seasons ? \" Seasons: \" + props.movie.number_of_seasons : \"\"), \"Release date: \", props.movie.release_date || props.movie.first_air_date, \"  Runtime: \", props.movie.runtime || props.movie.episode_run_time, \"m\"), /*#__PURE__*/React.createElement(Segment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    icon: true,\n    labelPosition: \"left\",\n    style: {\n      backgroundColor: `#111111`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"dollar\",\n    color: \"green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 53\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 53\n    }\n  }, \"Buy\")), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 49\n    }\n  })))))))))));\n};\n\nexport default _SearchMovieList;","map":{"version":3,"sources":["E:/ShawMovieWebsite/shaw-website/src/SecondaryComponents/Desktop/_SearchMovieList.js"],"names":["React","useState","useEffect","Header","Icon","Segment","Grid","Modal","Search","Button","Embed","Image","Rating","Divider","_HeaderMovieCast","ReactPlayer","_SearchMovieList","props","open","setOpen","defHeight","setHeight","window","innerWidth","YouTube","setYoutube","setHeightofScreen","innerHeight","addEventListener","removeEventListener","movie","videos","Trailer","results","sort","a","b","size","filter","x","type","console","log","Teaser","key","forEach","close","onCloseModal","padding","backgroundColor","searchInputValue","onSearchHandler","margin","color","minHeight","listOfMovies","borderTop","fontSize","fontFamilty","fontWeight","title","name","overview","vote_average","number_of_episodes","number_of_seasons","release_date","first_air_date","runtime","episode_run_time"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Header, Icon, Segment, Grid, Modal, Search, Button, Embed, Image, Rating, Divider } from 'semantic-ui-react';\r\nimport _HeaderMovieCast from './_HeaderMovieCast';\r\nimport ReactPlayer from 'react-player'\r\n\r\n\r\nconst _SearchMovieList = props => {\r\n    const [open, setOpen] = useState(true);\r\n    const [defHeight, setHeight] = useState(window.innerWidth);\r\n    const [YouTube, setYoutube] = useState('');\r\n\r\n    useEffect(() => {\r\n        const setHeightofScreen = () => setHeight(window.innerHeight)\r\n        window.addEventListener('resize', setHeightofScreen)\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', setHeightofScreen)\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n\r\n        if (props.movie.videos) {\r\n\r\n            const Trailer = props.movie.videos.results.sort((a, b) => a.size - b.size).filter(x => x.type === 'Trailer');\r\n            console.log(Trailer);\r\n            const Teaser = props.movie.videos.results.sort((a, b) => a.size - b.size).filter(x => x.type === 'Teaser');\r\n            console.log(Teaser);\r\n            let key = 'ybji16u608U';\r\n            if(Trailer)\r\n            {\r\n                console.log(\"True for trailer\")\r\n                key = Trailer.forEach(x => x.key)  \r\n                console.log(key) \r\n            }\r\n            else\r\n            {\r\n                key = Teaser.forEach(x => x.key)\r\n            }\r\n\r\n            setYoutube(`https://www.youtube.com/watch?v=${key}`);\r\n        }\r\n\r\n\r\n        return () => {\r\n            setYoutube('');\r\n        }\r\n    }, [props.movie])\r\n\r\n\r\n    const close = () => {\r\n        props.onCloseModal();\r\n        setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Modal size={'fullscreen'} dimmer=\"blurring\" open={open} onClose={() => close()}>\r\n                <Modal.Actions style={{ padding: '0rem', backgroundColor: '#000000' }}>\r\n                    <Grid padded textAlign=\"center\">\r\n                        <Grid.Column width={13} >\r\n                            <Search\r\n                                value={props.searchInputValue}\r\n                                showNoResults={false}\r\n                                className=\"customSearch\"\r\n                                onSearchChange={props.onSearchHandler}\r\n                                placeholder=\"Search...\" />\r\n                        </Grid.Column>\r\n                        <Grid.Column width={3}>\r\n                            <Segment color='#000000' style={{ padding: '10px', margin: '0px' }}>\r\n                                <Button onClick={() => close()} icon labelPosition='left' style={{ backgroundColor: `#111111` }}>\r\n                                    <Icon name='checkmark' color='green' />\r\n                                    <span style={{ color: 'white' }}>Done\r\n                                            </span>\r\n                                </Button>\r\n                            </Segment>\r\n                        </Grid.Column>\r\n                    </Grid>\r\n                </Modal.Actions>\r\n                <Modal.Content style={{ backgroundColor: 'transparent !important' }}>\r\n                    <Modal.Description>\r\n                        <Grid>\r\n                            <Grid.Column width={6}>\r\n                                <Modal.Content scrolling style={{ backgroundColor: 'transparent !important', minHeight: `${defHeight}px` }}>\r\n                                    <Modal.Description>\r\n                                        <Grid padded>\r\n                                            <Grid.Row>\r\n                                                <Grid.Column textAlign='center'>\r\n                                                    {props.listOfMovies}\r\n                                                </Grid.Column>\r\n                                            </Grid.Row>\r\n                                        </Grid>\r\n\r\n                                    </Modal.Description>\r\n                                </Modal.Content>\r\n\r\n                            </Grid.Column>\r\n                            <Grid.Column width={10}>\r\n\r\n                                <Segment color='black' padded style={{ borderTop: '0px solid green !important;' }}>\r\n                                    <ReactPlayer url={YouTube}\r\n                                        loop\r\n                                        width='100%'\r\n                                        controls\r\n                                    />\r\n                                </Segment>\r\n                                <Grid>\r\n                                    <Grid.Row>\r\n                                        <Grid.Column width={4}>\r\n                                            <Segment verticalAlign='middle'>\r\n                                                <Header color=\"green\" style={{ fontSize: '2em', fontFamilty: '', fontWeight: 'bold', padding: '1rem' }}>\r\n                                                    {props.movie.title || props.movie.name}\r\n                                                </Header>\r\n                                            </Segment>\r\n\r\n                                        </Grid.Column >\r\n                                        <Grid.Column width={12}>\r\n                                            <Segment>\r\n                                                {props.movie.overview}\r\n                                            </Segment>\r\n                                            <Segment>\r\n                                                Rating: {props.movie.vote_average * 10}%{\" \"}\r\n                                                <p>\r\n                                                    {props.movie.number_of_episodes ? \" Episodes: \" + props.movie.number_of_episodes : \"\"}\r\n                                                    {props.movie.number_of_seasons ? \" Seasons: \" + props.movie.number_of_seasons : \"\"}\r\n                                                </p>\r\n                                                Release date: {props.movie.release_date || props.movie.first_air_date}  Runtime: {props.movie.runtime || props.movie.episode_run_time}m\r\n\r\n                                            </Segment>\r\n                                            <Segment>\r\n                                                <Button icon labelPosition='left' style={{ backgroundColor: `#111111` }}>\r\n                                                    <Icon name='dollar' color='green' />\r\n                                                    <span style={{ color: 'white' }}>Buy\r\n                                            </span>\r\n                                                </Button>\r\n                                                <Divider />\r\n                                            </Segment>\r\n                                        </Grid.Column>\r\n                                    </Grid.Row>\r\n                                </Grid>\r\n                            </Grid.Column>\r\n                        </Grid>\r\n                    </Modal.Description>\r\n                </Modal.Content>\r\n\r\n            </Modal>\r\n        </React.Fragment >\r\n    )\r\n}\r\n\r\nexport default _SearchMovieList;"]},"metadata":{},"sourceType":"module"}