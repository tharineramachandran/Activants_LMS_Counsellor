{"ast":null,"code":"var _jsxFileName = \"E:\\\\ShawMovieWebsite\\\\shaw-website\\\\src\\\\HeaderSegement\\\\HeaderPart.jsx\";\nimport React, { useState } from 'react';\nimport { Grid, Image, Segment, Header, Feed } from 'semantic-ui-react';\nimport MovieInfo from '../HeaderSegement/Explore/MovieInfo';\nimport vk from \"../Images/vk.png\";\nimport got from '../Images/got.png';\nimport ghost from '../Images/ghost.png';\n\nconst HeaderPart = () => {\n  const [change, setChange] = useState(vk);\n\n  const Change = () => {\n    if (change == vk) setChange(ghost);else setChange(vk);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    columns: \"2\",\n    inverted: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Row, {\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }, \"sds\"), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 11,\n    className: \"headerImageBoxShadow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    className: \"headerImage\",\n    src: change,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(MovieInfo, {\n    url: \"https://www.youtube.com/watch?v=3PK2tIyENVA&t=2s\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 27\n    }\n  }))), /*#__PURE__*/React.createElement(Grid.Row, {\n    textAlign: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Feed, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Feed.Event, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Feed.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://react.semantic-ui.com/images/avatar/small/elliot.jpg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 37\n    }\n  }))))), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 5,\n    className: \"headerImageBoxShadow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(MovieInfo, {\n    url: \"https://www.youtube.com/watch?v=3PK2tIyENVA&t=2s\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => Change(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"change\"));\n};\n\nexport default HeaderPart;","map":{"version":3,"sources":["E:/ShawMovieWebsite/shaw-website/src/HeaderSegement/HeaderPart.jsx"],"names":["React","useState","Grid","Image","Segment","Header","Feed","MovieInfo","vk","got","ghost","HeaderPart","change","setChange","Change"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,OAAtB,EAA+BC,MAA/B,EAAuCC,IAAvC,QAAmD,mBAAnD;AACA,OAAOC,SAAP,MAAsB,qCAAtB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;AAIA,MAAMC,UAAU,GAAG,MAAM;AACrB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAACO,EAAD,CAApC;;AAEA,QAAMM,MAAM,GAAG,MAAM;AACjB,QAAIF,MAAM,IAAIJ,EAAd,EACIK,SAAS,CAACH,KAAD,CAAT,CADJ,KAGIG,SAAS,CAACL,EAAD,CAAT;AACP,GALD;;AAOA,sBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAC,GAAd;AAAkB,IAAA,QAAQ,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,GAAN;AAAU,IAAA,SAAS,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,eAII,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,EAApB;AAAwB,IAAA,SAAS,EAAC,sBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,aAAjB;AACI,IAAA,GAAG,EAAEI,MADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAIM,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAC,kDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJN,CAJJ,CADJ,eAYI,oBAAC,IAAD,CAAM,GAAN;AAAU,IAAA,SAAS,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAC,8DAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,CADJ,CADJ,eAUI,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,CAApB;AAAuB,IAAA,SAAS,EAAC,sBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAC,kDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAVJ,CAZJ,CADJ,eA4BI;AAAQ,IAAA,OAAO,EAAE,MAAME,MAAM,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA5BJ,CADJ;AAkCH,CA5CD;;AA8CA,eAAeH,UAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { Grid, Image, Segment, Header, Feed } from 'semantic-ui-react';\r\nimport MovieInfo from '../HeaderSegement/Explore/MovieInfo';\r\nimport vk from \"../Images/vk.png\";\r\nimport got from '../Images/got.png';\r\nimport ghost from '../Images/ghost.png';\r\n\r\n\r\n\r\nconst HeaderPart = () => {\r\n    const [change, setChange] = useState(vk);\r\n\r\n    const Change = () => {\r\n        if (change == vk)\r\n            setChange(ghost)\r\n        else\r\n            setChange(vk)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid columns=\"2\" inverted>\r\n                <Grid.Row textAlign='center'>\r\n                    <Grid.Column width={5}>\r\n                        sds\r\n                    </Grid.Column>\r\n                    <Grid.Column width={11} className=\"headerImageBoxShadow\">\r\n                        <Image className=\"headerImage\"\r\n                            src={change}\r\n                        />\r\n                          <MovieInfo url=\"https://www.youtube.com/watch?v=3PK2tIyENVA&t=2s\" />\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n                <Grid.Row textAlign='right'>\r\n                    <Grid.Column width={5}>\r\n                        <Feed>\r\n                            <Feed.Event>\r\n                                <Feed.Label>\r\n                                    <img src='https://react.semantic-ui.com/images/avatar/small/elliot.jpg' />\r\n                                </Feed.Label>\r\n                            </Feed.Event>\r\n                        </Feed>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={5} className=\"headerImageBoxShadow\">\r\n                        <MovieInfo url=\"https://www.youtube.com/watch?v=3PK2tIyENVA&t=2s\" />\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>\r\n            <button onClick={() => Change()}>\r\n                change\r\n            </button>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default HeaderPart;"]},"metadata":{},"sourceType":"module"}