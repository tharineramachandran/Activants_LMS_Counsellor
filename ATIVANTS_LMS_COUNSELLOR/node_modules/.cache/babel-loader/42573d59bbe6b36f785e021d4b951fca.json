{"ast":null,"code":"var _jsxFileName = \"E:\\\\ShawMovieWebsite\\\\shaw-website\\\\src\\\\NetflixRemastered\\\\containers\\\\Layout.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport Navbar from './Navbar';\nimport MainContent from './MainContent';\nimport Movie from '../components/Movie/Movie';\nimport Modal from '../components/UI/Modal';\nimport MovieDetails from '../components/Movie/MovieDetails';\n\nclass Layout extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      /** Toggles the movie list when the user starts typing. */\n      toggleMovieList: true,\n\n      /** An array that will hold all of our movie Components. */\n      MovieList: [],\n\n      /** Toggles the modal when a movie is clicked. */\n      toggleModal: false,\n\n      /** Holds the movie information for a single movie. */\n      movieOverview: {}\n    };\n\n    this.makeAipCall = searchItem => {\n      const url = `https://api.themoviedb.org/3/search/multi?api_key=9ea839ec7891591994ec0f540b4b199f&language=en-US&include_adult=false&query=${searchItem}`;\n      axios.get(url).then(res => {\n        const results = res.data.results;\n        let movieImageUrl;\n        /** Will hold all our movies Components */\n\n        let movieRows = [];\n        /** Loop through all the movies */\n\n        results.forEach(movie => {\n          /** Manually build our image url and set it on the Movie component. */\n          if (movie.poster_path !== null && movie.media_type !== \"person\") {\n            movieImageUrl = \"https://image.tmdb.org/t/p/w500\" + movie.poster_path;\n            /** Set the movie object to our Movie component */\n\n            const movieComponent = /*#__PURE__*/React.createElement(Movie, {\n              movieDetails: () => this.selectMovieHandler(movie),\n              key: movie.id,\n              movieImage: movieImageUrl,\n              movie: movie,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 36\n              }\n            });\n            /** Push our movie component to our movieRows array */\n\n            movieRows.push(movieComponent);\n          }\n        });\n        /** Set our MovieList array to the movieRows array */\n\n        this.setState({\n          MovieList: movieRows\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.onSearchHandler = event => {\n      /** Display the movie list. */\n      this.setState({\n        toggleMovieList: false\n      });\n      const userInput = event.target.value;\n      /** Pass in the user input to make the API call. */\n\n      this.makeAipCall(userInput);\n      /** If the input is empty don't display the movie list. */\n\n      if (userInput === \"\") {\n        this.setState({\n          toggleMovieList: true\n        });\n      }\n    };\n\n    this.selectMovieHandler = movie => {\n      this.setState({\n        toggleModal: true\n      });\n      let url;\n      /** Make the appropriate API call to get the details for a single movie or tv show. */\n\n      if (movie.media_type === \"movie\") {\n        const movieId = movie.id;\n        url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=224ce27b38a3805ecf6f6c36eb3ba9d0`;\n      } else if (movie.media_type === \"tv\") {\n        const tvId = movie.id;\n        url = `https://api.themoviedb.org/3/tv/${tvId}?api_key=224ce27b38a3805ecf6f6c36eb3ba9d0`;\n      }\n\n      axios.get(url).then(res => {\n        const movieData = res.data;\n        this.setState({\n          movieOverview: movieData\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState({\n        toggleModal: false\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      showMovies: this.onSearchHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }), this.state.toggleMovieList ? /*#__PURE__*/React.createElement(MainContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 40\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 58\n      }\n    }, this.state.MovieList), /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.toggleModal,\n      modalClosed: this.closeModal,\n      movie: this.state.movieOverview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MovieDetails, {\n      movie: this.state.movieOverview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default Layout;","map":{"version":3,"sources":["E:/ShawMovieWebsite/shaw-website/src/NetflixRemastered/containers/Layout.js"],"names":["React","Component","axios","Navbar","MainContent","Movie","Modal","MovieDetails","Layout","state","toggleMovieList","MovieList","toggleModal","movieOverview","makeAipCall","searchItem","url","get","then","res","results","data","movieImageUrl","movieRows","forEach","movie","poster_path","media_type","movieComponent","selectMovieHandler","id","push","setState","catch","error","console","log","onSearchHandler","event","userInput","target","value","movieId","tvId","movieData","closeModal","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from \"axios\";\n\nimport Navbar from './Navbar';\nimport MainContent from './MainContent';\nimport Movie from '../components/Movie/Movie';\nimport Modal from '../components/UI/Modal';\nimport MovieDetails from '../components/Movie/MovieDetails';\n\nclass Layout extends Component {\n\n  state = {\n    /** Toggles the movie list when the user starts typing. */\n    toggleMovieList: true,\n    /** An array that will hold all of our movie Components. */\n    MovieList: [],\n    /** Toggles the modal when a movie is clicked. */\n    toggleModal: false,\n    /** Holds the movie information for a single movie. */\n    movieOverview: {},\n  }\n\n  /** Make API call as soon as the user starts typing.  */\n  makeAipCall = (searchItem) => {\n    const url = `https://api.themoviedb.org/3/search/multi?api_key=9ea839ec7891591994ec0f540b4b199f&language=en-US&include_adult=false&query=${searchItem}`;\n\n    axios.get(url)\n      .then(res => {\n        const results = res.data.results;\n        let movieImageUrl;\n        /** Will hold all our movies Components */\n        let movieRows = [];\n\n        /** Loop through all the movies */\n        results.forEach((movie) => {\n          /** Manually build our image url and set it on the Movie component. */\n          if (movie.poster_path !== null && movie.media_type !== \"person\") {\n            movieImageUrl = \"https://image.tmdb.org/t/p/w500\" + movie.poster_path;\n\n            /** Set the movie object to our Movie component */\n            const movieComponent = <Movie\n              movieDetails={() => this.selectMovieHandler(movie)}\n              key={movie.id}\n              movieImage={movieImageUrl}\n              movie={movie} />\n\n            /** Push our movie component to our movieRows array */\n            movieRows.push(movieComponent);\n          }\n        })\n        /** Set our MovieList array to the movieRows array */\n        this.setState({ MovieList: movieRows });\n      }).catch(error => {\n        console.log(error);\n      });\n  }\n\n  /** Get the user input  */\n  onSearchHandler = (event) => {\n    /** Display the movie list. */\n    this.setState({\n      toggleMovieList: false\n    });\n\n    const userInput = event.target.value;\n    /** Pass in the user input to make the API call. */\n    this.makeAipCall(userInput);\n\n    /** If the input is empty don't display the movie list. */\n    if (userInput === \"\") {\n      this.setState({\n        toggleMovieList: true\n      });\n    }\n  }\n\n  /* Get the appropriate details for a specific movie that was clicked */\n  selectMovieHandler = (movie) => {\n    this.setState({ toggleModal: true });\n\n    let url;\n    /** Make the appropriate API call to get the details for a single movie or tv show. */\n    if (movie.media_type === \"movie\") {\n      const movieId = movie.id;\n      url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=224ce27b38a3805ecf6f6c36eb3ba9d0`;\n\n    } else if (movie.media_type === \"tv\") {\n      const tvId = movie.id\n      url = `https://api.themoviedb.org/3/tv/${tvId}?api_key=224ce27b38a3805ecf6f6c36eb3ba9d0`;\n    }\n\n    axios.get(url)\n      .then(res => {\n        const movieData = res.data;\n\n        this.setState({ movieOverview: movieData });\n      }).catch(error => {\n        console.log(error);\n      });\n\n  }\n\n  closeModal = () => {\n    this.setState({ toggleModal: false });\n  }\n\n  render() {\n\n    return (\n      <div>\n        <Navbar showMovies={this.onSearchHandler} />\n        {\n          this.state.toggleMovieList ? <MainContent /> : <div\n            className=\"search-container\">{this.state.MovieList}</div>\n        }\n\n        <Modal show={this.state.toggleModal}\n          modalClosed={this.closeModal}\n          movie={this.state.movieOverview}>\n\n          <MovieDetails movie={this.state.movieOverview} />\n        </Modal>\n      </div>\n\n    );\n  }\n\n}\n\nexport default Layout; "]},"metadata":{},"sourceType":"module"}