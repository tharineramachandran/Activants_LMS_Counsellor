{"ast":null,"code":"var _jsxFileName = \"E:\\\\ShawMovieWebsite\\\\shaw-website\\\\src\\\\Store\\\\_Redux.js\";\nimport React, { useReducer, useEffect } from 'react';\nimport _AxiosInstance from '../Store/_AxiosInstance';\nimport DisplayAllGeresOfMovies from '../Containers/DisplayAllGeresOfMovies';\nimport { Grid, Image } from 'semantic-ui-react';\nconst initState = {\n  movieList: [],\n  movieOverview: {},\n  classNameForImage: '',\n  ImageClassName: ''\n};\n\nconst reducder = (prevState, action) => {\n  switch (action.type) {\n    case 'FETCH_TRENDING':\n      return {\n        movieList: action.payload.data.results,\n        classNameForImage: 'scrollmenuImage',\n        ImageClassName: 'sizeOfContainerMovieImage'\n      };\n\n    case 'FETCH_HORROW':\n      return {\n        movieList: action.payload.data.results,\n        classNameForImage: 'scrollmenuImageBigger',\n        ImageClassName: 'sizeOfContainerMovieImageBigger'\n      };\n\n    default:\n      return prevState;\n  }\n};\n\nconst _Redux = props => {\n  const [stateTrending, dispatchTrending] = useReducer(reducder, initState);\n  let movies;\n  useEffect(() => {\n    _AxiosInstance.get('/trending/all/week?api_key=028e8ea4ca7d9164d085c9238979098b&language=en-US').then(data => {\n      dispatchTrending({\n        type: props.FetchType,\n        payload: data\n      });\n    }).catch(err => {});\n  }, []);\n\n  if (stateTrending.movieList) {\n    movies = getMovieRows(stateTrending.movieList, stateTrending.ImageClassName);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: \"GridRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    className: \"GridColumn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: stateTrending.classNameForImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"center\", {\n    className: \"customImageDisplay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 29\n    }\n  }, movies)))));\n};\n\nconst getMovieRows = (movies, ImageClass) => {\n  const movieRow = movies.map(movie => {\n    let movieImageUrl = 'https://image.tmdb.org/t/p/w500/' + movie.backdrop_path;\n\n    if (movie.poster_path && movie.backdrop_path !== null) {\n      const movieComponent = /*#__PURE__*/React.createElement(DisplayAllGeresOfMovies //movieDetials = {selectedMovie(movie)}\n      , {\n        ImgClass: ImageClass,\n        key: movie.id,\n        movie: movie,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }\n      });\n      return movieComponent;\n    }\n  });\n  return movieRow;\n};\n\nexport default _Redux;","map":{"version":3,"sources":["E:/ShawMovieWebsite/shaw-website/src/Store/_Redux.js"],"names":["React","useReducer","useEffect","_AxiosInstance","DisplayAllGeresOfMovies","Grid","Image","initState","movieList","movieOverview","classNameForImage","ImageClassName","reducder","prevState","action","type","payload","data","results","_Redux","props","stateTrending","dispatchTrending","movies","get","then","FetchType","catch","err","getMovieRows","ImageClass","movieRow","map","movie","movieImageUrl","backdrop_path","poster_path","movieComponent","id"],"mappings":"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","sourcesContent":["import React, { useReducer, useEffect } from 'react';\r\nimport _AxiosInstance from '../Store/_AxiosInstance'\r\nimport DisplayAllGeresOfMovies from '../Containers/DisplayAllGeresOfMovies';\r\nimport { Grid, Image } from 'semantic-ui-react'\r\n\r\nconst initState = {\r\n    movieList: [],\r\n    movieOverview: {},\r\n    classNameForImage: '',\r\n    ImageClassName : ''\r\n}\r\n\r\nconst reducder = (prevState, action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_TRENDING':\r\n            return {\r\n                movieList: action.payload.data.results,\r\n                classNameForImage : 'scrollmenuImage',\r\n                ImageClassName : 'sizeOfContainerMovieImage'\r\n            };\r\n\r\n        case 'FETCH_HORROW':\r\n            return {\r\n                movieList: action.payload.data.results,\r\n                classNameForImage : 'scrollmenuImageBigger',\r\n                ImageClassName : 'sizeOfContainerMovieImageBigger'\r\n            };\r\n\r\n        default:\r\n            return prevState;\r\n    }\r\n}\r\n\r\nconst _Redux = props => {\r\n\r\n    const [stateTrending, dispatchTrending] = useReducer(reducder, initState);\r\n    let movies;\r\n\r\n    useEffect(() => {\r\n        _AxiosInstance.get('/trending/all/week?api_key=028e8ea4ca7d9164d085c9238979098b&language=en-US')\r\n            .then(data => {\r\n                dispatchTrending({ type: props.FetchType, payload: data })\r\n            })\r\n            .catch(err => {\r\n\r\n            })\r\n      },[]);\r\n\r\n    if (stateTrending.movieList) {\r\n        movies = getMovieRows(stateTrending.movieList, stateTrending.ImageClassName);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid className=\"GridRow\">\r\n                <Grid.Column className=\"GridColumn\">\r\n                    <div className={stateTrending.classNameForImage}>\r\n                        {\r\n                            <center className=\"customImageDisplay\">\r\n                                {movies}\r\n                            </center>\r\n                        }\r\n                    </div>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </React.Fragment>\r\n\r\n    )\r\n}\r\n\r\nconst getMovieRows = (movies, ImageClass) => {\r\n    const movieRow = movies.map((movie) => {\r\n        let movieImageUrl = 'https://image.tmdb.org/t/p/w500/' + movie.backdrop_path;\r\n\r\n        if (movie.poster_path && movie.backdrop_path !== null) {\r\n            const movieComponent = (\r\n                <DisplayAllGeresOfMovies\r\n                    //movieDetials = {selectedMovie(movie)}\r\n                    ImgClass={ImageClass}\r\n                    key={movie.id}\r\n                    movie={movie}\r\n                />\r\n            );\r\n\r\n            return movieComponent;\r\n        }\r\n    });\r\n\r\n\r\n    return movieRow;\r\n}\r\n\r\nexport default _Redux;"]},"metadata":{},"sourceType":"module"}