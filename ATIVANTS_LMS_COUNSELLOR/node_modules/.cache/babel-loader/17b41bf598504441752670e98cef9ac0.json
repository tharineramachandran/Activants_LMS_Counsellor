{"ast":null,"code":"var _jsxFileName = \"E:\\\\ShawMovieWebsite\\\\shaw-website\\\\src\\\\Store\\\\_Redux.js\";\nimport React, { useReducer, useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst _Redux = () => {\n  const [toggleMovieList, setToggleMovieList] = useState(true);\n  const [MovieList, setMovieList] = useState([]);\n  const [toggleModal, setToggleModal] = useState(false);\n  const [movieOverview, setMovieOverview] = useState({});\n\n  const selectMovieHandler = movie => {\n    setToggleModal(true);\n    let url;\n\n    if (movie.media_type === \"movie\") {\n      const movieId = movie.id;\n      url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=224ce27b38a3805ecf6f6c36eb3ba9d0`;\n    } else if (movie.media_type === \"tv\") {\n      const tvId = movie.id;\n      url = `https://api.themoviedb.org/3/tv/${tvId}?api_key=224ce27b38a3805ecf6f6c36eb3ba9d0`;\n    }\n\n    axios.get(url).then(res => {\n      const movieData = res.data;\n      setMovieOverview(movieData);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const makeAipCall = searchItem => {\n    const url = `https://api.themoviedb.org/3/search/multi?api_key=9ea839ec7891591994ec0f540b4b199f&language=en-US&include_adult=false&query=${searchItem}`;\n    axios.get(url).then(res => {\n      const results = res.data.results;\n      let movieImageUrl;\n      let movieRows = [];\n      results.forEach(movie => {\n        if (movie.poster_path !== null && movie.media_type !== \"person\") {\n          movieImageUrl = \"https://image.tmdb.org/t/p/w500\" + movie.poster_path;\n          const movieComponent = /*#__PURE__*/React.createElement(_Movie, {\n            movieDetails: () => selectMovieHandler(movie),\n            key: movie.id,\n            movieImage: movieImageUrl,\n            movie: movie,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 48\n            }\n          });\n          movieRows.push(movieComponent);\n        }\n      });\n      setMovieList(movieRows);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const onSearchHandler = event => {\n    const userInput = event.target.value;\n    makeAipCall(userInput);\n  };\n\n  const closeModal = () => {\n    setToggleModal(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: onSearchHandler,\n    type: \"text\",\n    placeholder: \"Title, genres, people\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(MovieListShow, {\n    mMovieList: MovieList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    show: toggleModal,\n    modalClosed: closeModal,\n    movie: movieOverview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MovieDetails, {\n    movie: movieOverview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  })));\n};\n\nconst MovieListShow = props => {\n  console.log(\"MovieListShow clled\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, props.mMovieList);\n};\n\nconst _Movie = props => {\n  console.log(\"_Movie movielist\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: props.movieDetails,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: props.movieImage,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  })));\n};\n\nconst Modal = props => {\n  const backgroundStyle = {\n    backgroundSize: \"cover\",\n    backgroundImage: `url(https://image.tmdb.org/t/p/original/${props.movie.backdrop_path || props.movie.poster_path})`\n  };\n  console.log(\"Modal movielist\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: backgroundStyle,\n    className: props.show ? \"modal show\" : \"modal hide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nconst MovieDetails = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"modal__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, props.movie.title || props.movie.name), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"modal__info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"modal__rating\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, \"Rating: \", props.movie.vote_average * 10, \"%\", \" \"), \"Release date: \", props.movie.release_date || props.movie.first_air_date, \"  Runtime: \", props.movie.runtime || props.movie.episode_run_time, \"m\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"modal__episode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, props.movie.number_of_episodes ? \" Episodes: \" + props.movie.number_of_episodes : \"\", props.movie.number_of_seasons ? \" Seasons: \" + props.movie.number_of_seasons : \"\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"modal__overview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, props.movie.overview), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"modal__btn modal__btn--red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, \"Play\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"modal__btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, \"My List\"));\n};\n\nexport default _Redux;","map":{"version":3,"sources":["E:/ShawMovieWebsite/shaw-website/src/Store/_Redux.js"],"names":["React","useReducer","useEffect","useState","axios","_Redux","toggleMovieList","setToggleMovieList","MovieList","setMovieList","toggleModal","setToggleModal","movieOverview","setMovieOverview","selectMovieHandler","movie","url","media_type","movieId","id","tvId","get","then","res","movieData","data","catch","error","console","log","makeAipCall","searchItem","results","movieImageUrl","movieRows","forEach","poster_path","movieComponent","push","onSearchHandler","event","userInput","target","value","closeModal","MovieListShow","props","mMovieList","_Movie","movieDetails","movieImage","Modal","backgroundStyle","backgroundSize","backgroundImage","backdrop_path","show","children","MovieDetails","title","name","vote_average","release_date","first_air_date","runtime","episode_run_time","number_of_episodes","number_of_seasons","overview"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAEjB,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCJ,QAAQ,CAAC,IAAD,CAAtD;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,EAAD,CAAlD;;AAEA,QAAMW,kBAAkB,GAAIC,KAAD,IAAW;AAClCJ,IAAAA,cAAc,CAAC,IAAD,CAAd;AAEA,QAAIK,GAAJ;;AACA,QAAID,KAAK,CAACE,UAAN,KAAqB,OAAzB,EAAkC;AAC9B,YAAMC,OAAO,GAAGH,KAAK,CAACI,EAAtB;AACAH,MAAAA,GAAG,GAAI,sCAAqCE,OAAQ,2CAApD;AAEH,KAJD,MAIO,IAAIH,KAAK,CAACE,UAAN,KAAqB,IAAzB,EAA+B;AAClC,YAAMG,IAAI,GAAGL,KAAK,CAACI,EAAnB;AACAH,MAAAA,GAAG,GAAI,mCAAkCI,IAAK,2CAA9C;AACH;;AAEDhB,IAAAA,KAAK,CAACiB,GAAN,CAAUL,GAAV,EACKM,IADL,CACUC,GAAG,IAAI;AACT,YAAMC,SAAS,GAAGD,GAAG,CAACE,IAAtB;AACAZ,MAAAA,gBAAgB,CAACW,SAAD,CAAhB;AAEH,KALL,EAKOE,KALP,CAKaC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAPL;AASH,GAtBD;;AA0BA,QAAMG,WAAW,GAAIC,UAAD,IAAgB;AAChC,UAAMf,GAAG,GAAI,+HAA8He,UAAW,EAAtJ;AAEA3B,IAAAA,KAAK,CAACiB,GAAN,CAAUL,GAAV,EACKM,IADL,CACUC,GAAG,IAAI;AACT,YAAMS,OAAO,GAAGT,GAAG,CAACE,IAAJ,CAASO,OAAzB;AACA,UAAIC,aAAJ;AACA,UAAIC,SAAS,GAAG,EAAhB;AAEAF,MAAAA,OAAO,CAACG,OAAR,CAAiBpB,KAAD,IAAW;AACvB,YAAIA,KAAK,CAACqB,WAAN,KAAsB,IAAtB,IAA8BrB,KAAK,CAACE,UAAN,KAAqB,QAAvD,EAAiE;AAC7DgB,UAAAA,aAAa,GAAG,oCAAoClB,KAAK,CAACqB,WAA1D;AAEA,gBAAMC,cAAc,gBAAG,oBAAC,MAAD;AACnB,YAAA,YAAY,EAAE,MAAMvB,kBAAkB,CAACC,KAAD,CADnB;AAEnB,YAAA,GAAG,EAAEA,KAAK,CAACI,EAFQ;AAGnB,YAAA,UAAU,EAAEc,aAHO;AAInB,YAAA,KAAK,EAAElB,KAJY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAvB;AAMAmB,UAAAA,SAAS,CAACI,IAAV,CAAeD,cAAf;AACH;AACJ,OAZD;AAaA5B,MAAAA,YAAY,CAACyB,SAAD,CAAZ;AAEH,KArBL,EAqBOR,KArBP,CAqBaC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAvBL;AAwBH,GA3BD;;AA6BA,QAAMY,eAAe,GAAIC,KAAD,IAAW;AAE/B,UAAMC,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAA/B;AACAb,IAAAA,WAAW,CAACW,SAAD,CAAX;AACH,GAJD;;AAMA,QAAMG,UAAU,GAAG,MAAM;AACrBjC,IAAAA,cAAc,CAAC,KAAD,CAAd;AACH,GAFD;;AAMA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,QAAQ,EAAE4B,eADd;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,WAAW,EAAC,uBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAMI,oBAAC,aAAD;AAAe,IAAA,UAAU,EAAE/B,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,eAQI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEE,WAAb;AACI,IAAA,WAAW,EAAEkC,UADjB;AAEI,IAAA,KAAK,EAAEhC,aAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEA,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CARJ,CADJ;AAiBH,CA3FD;;AA6FA,MAAMiC,aAAa,GAAIC,KAAD,IAAU;AAC7BlB,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACC,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMiB,KAAK,CAACC,UAAZ,CADJ;AAIH,CAND;;AAQA,MAAMC,MAAM,GAAIF,KAAD,IAAW;AACtBlB,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAK,IAAA,OAAO,EAAEiB,KAAK,CAACG,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAK,IAAA,GAAG,EAAEH,KAAK,CAACI,UAAhB;AAA4B,IAAA,GAAG,EAAC,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADH,CADA;AAMD,CARH;;AAUA,MAAMC,KAAK,GAAIL,KAAD,IAAW;AACrB,QAAMM,eAAe,GAAG;AACpBC,IAAAA,cAAc,EAAE,OADI;AAEpBC,IAAAA,eAAe,EAAG,2CAA0CR,KAAK,CAAC/B,KAAN,CAAYwC,aAAZ,IAA6BT,KAAK,CAAC/B,KAAN,CAAYqB,WAAY;AAF7F,GAAxB;AAIAR,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,sBACI;AACI,IAAA,KAAK,EAAEuB,eADX;AAEI,IAAA,SAAS,EAAGN,KAAK,CAACU,IAAN,GAAa,YAAb,GAA4B,YAF5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGKV,KAAK,CAACW,QAHX,CADJ;AAOH,CAbD;;AAgBA,MAAMC,YAAY,GAAGZ,KAAK,IAAI;AAC1B,sBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,CAAC/B,KAAN,CAAY4C,KAAZ,IAAqBb,KAAK,CAAC/B,KAAN,CAAY6C,IADtC,CADJ,eAII;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACad,KAAK,CAAC/B,KAAN,CAAY8C,YAAZ,GAA2B,EADxC,OAC6C,GAD7C,CADJ,oBAIef,KAAK,CAAC/B,KAAN,CAAY+C,YAAZ,IAA4BhB,KAAK,CAAC/B,KAAN,CAAYgD,cAJvD,iBAIkFjB,KAAK,CAAC/B,KAAN,CAAYiD,OAAZ,IAAuBlB,KAAK,CAAC/B,KAAN,CAAYkD,gBAJrH,MAJJ,eAUI;AAAG,IAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKnB,KAAK,CAAC/B,KAAN,CAAYmD,kBAAZ,GAAiC,gBAAgBpB,KAAK,CAAC/B,KAAN,CAAYmD,kBAA7D,GAAkF,EADvF,EAEKpB,KAAK,CAAC/B,KAAN,CAAYoD,iBAAZ,GAAgC,eAAerB,KAAK,CAAC/B,KAAN,CAAYoD,iBAA3D,GAA+E,EAFpF,CAVJ,eAcI;AAAG,IAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCrB,KAAK,CAAC/B,KAAN,CAAYqD,QAA5C,CAdJ,eAeI;AAAQ,IAAA,SAAS,EAAC,4BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfJ,eAmBI;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAnBJ,CADJ;AA0BH,CA3BD;;AA6BA,eAAe/D,MAAf","sourcesContent":["import React, { useReducer, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst _Redux = () => {\r\n\r\n    const [toggleMovieList, setToggleMovieList] = useState(true);\r\n    const [MovieList, setMovieList] = useState([]);\r\n    const [toggleModal, setToggleModal] = useState(false);\r\n    const [movieOverview, setMovieOverview] = useState({});\r\n\r\n    const selectMovieHandler = (movie) => {\r\n        setToggleModal(true);\r\n\r\n        let url;\r\n        if (movie.media_type === \"movie\") {\r\n            const movieId = movie.id;\r\n            url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=224ce27b38a3805ecf6f6c36eb3ba9d0`;\r\n\r\n        } else if (movie.media_type === \"tv\") {\r\n            const tvId = movie.id\r\n            url = `https://api.themoviedb.org/3/tv/${tvId}?api_key=224ce27b38a3805ecf6f6c36eb3ba9d0`;\r\n        }\r\n\r\n        axios.get(url)\r\n            .then(res => {\r\n                const movieData = res.data;\r\n                setMovieOverview(movieData);\r\n\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n\r\n\r\n    const makeAipCall = (searchItem) => {\r\n        const url = `https://api.themoviedb.org/3/search/multi?api_key=9ea839ec7891591994ec0f540b4b199f&language=en-US&include_adult=false&query=${searchItem}`;\r\n\r\n        axios.get(url)\r\n            .then(res => {\r\n                const results = res.data.results;\r\n                let movieImageUrl;\r\n                let movieRows = [];\r\n\r\n                results.forEach((movie) => {\r\n                    if (movie.poster_path !== null && movie.media_type !== \"person\") {\r\n                        movieImageUrl = \"https://image.tmdb.org/t/p/w500\" + movie.poster_path;\r\n\r\n                        const movieComponent = <_Movie\r\n                            movieDetails={() => selectMovieHandler(movie)}\r\n                            key={movie.id}\r\n                            movieImage={movieImageUrl}\r\n                            movie={movie} />\r\n\r\n                        movieRows.push(movieComponent);\r\n                    }\r\n                })\r\n                setMovieList(movieRows);\r\n\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    const onSearchHandler = (event) => {\r\n\r\n        const userInput = event.target.value;\r\n        makeAipCall(userInput);\r\n    }\r\n   \r\n    const closeModal = () => {\r\n        setToggleModal(false);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                onChange={onSearchHandler}\r\n                type=\"text\"\r\n                placeholder=\"Title, genres, people\" />\r\n            \r\n            <MovieListShow mMovieList={MovieList} />\r\n               \r\n            <Modal show={toggleModal}\r\n                modalClosed={closeModal}\r\n                movie={movieOverview}>\r\n\r\n                <MovieDetails movie={movieOverview} />\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst MovieListShow = (props) =>{\r\n   console.log(\"MovieListShow clled\")\r\n    return(\r\n        <div>{props.mMovieList}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst _Movie = (props) => {\r\n    console.log(\"_Movie movielist\")\r\n    return(\r\n    <div>\r\n       <div onClick={props.movieDetails}>\r\n          <img src={props.movieImage} alt=\"\"/>\r\n       </div>\r\n    </div>\r\n )}\r\n\r\nconst Modal = (props) => {\r\n    const backgroundStyle = {\r\n        backgroundSize: \"cover\",\r\n        backgroundImage: `url(https://image.tmdb.org/t/p/original/${props.movie.backdrop_path || props.movie.poster_path})`,\r\n    }\r\n    console.log(\"Modal movielist\")\r\n    return (\r\n        <div\r\n            style={backgroundStyle}\r\n            className={(props.show ? \"modal show\" : \"modal hide\")}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst MovieDetails = props => {\r\n    return (\r\n        <div className=\"modal__container\">\r\n            <h1 className=\"modal__title\">\r\n                {props.movie.title || props.movie.name}\r\n            </h1>\r\n            <p className=\"modal__info\">\r\n                <span className=\"modal__rating\">\r\n                    Rating: {props.movie.vote_average * 10}%{\" \"}\r\n                </span>\r\n            Release date: {props.movie.release_date || props.movie.first_air_date}  Runtime: {props.movie.runtime || props.movie.episode_run_time}m\r\n          </p>\r\n            <p className=\"modal__episode\">\r\n                {props.movie.number_of_episodes ? \" Episodes: \" + props.movie.number_of_episodes : \"\"}\r\n                {props.movie.number_of_seasons ? \" Seasons: \" + props.movie.number_of_seasons : \"\"}\r\n            </p>\r\n            <p className=\"modal__overview\">{props.movie.overview}</p>\r\n            <button className=\"modal__btn modal__btn--red\">\r\n               \r\n            Play\r\n          </button>\r\n            <button className=\"modal__btn\">\r\n             \r\n            My List\r\n          </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default _Redux;"]},"metadata":{},"sourceType":"module"}