{"ast":null,"code":"import _slicedToArray from \"E:\\\\CircuitBreakerShow\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\CircuitBreakerShow\\\\src\\\\SecondaryComponents\\\\Desktop\\\\_NavigationItems.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Container, Menu, Responsive, Segment, Visibility, Grid, Divider, Image, Header, Search, Icon, Dropdown, Label } from 'semantic-ui-react';\nimport _HeaderMovieCast from './_HeaderMovieCast';\nimport axios from 'axios';\nimport _Header from '../Desktop/_Header';\n\nvar _NavigationItems = function _NavigationItems() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      movieList = _useState2[0],\n      setMovieList = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      movieOverview = _useState4[0],\n      setMovieOverview = _useState4[1];\n\n  var _useState5 = useState({\n    bgImg: '',\n    post: ''\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      Image = _useState6[0],\n      setImage = _useState6[1];\n\n  useEffect(function () {\n    var url = 'https://api.themoviedb.org/3/trending/movie/week?api_key=028e8ea4ca7d9164d085c9238979098b&include_adult=false';\n    axios.get(url).then(function (res) {\n      var results = res.data.results.slice(0, 5);\n      var movieImageUrll;\n      var postImageUrl;\n      var movieRows = [];\n      movieImageUrll = \"https://image.tmdb.org/t/p/w500\" + results[0].backdrop_path;\n      postImageUrl = \"https://image.tmdb.org/t/p/w500\" + results[0].poster_path;\n      setImage({\n        bgImg: movieImageUrll,\n        post: postImageUrl\n      });\n      results.forEach(function (movie) {\n        var movieImageUrl;\n        movieImageUrl = \"https://image.tmdb.org/t/p/w500\" + movie.backdrop_path;\n\n        if (movie.poster_path !== null && movie.media_type !== \"person\") {\n          var movieComponent = /*#__PURE__*/React.createElement(_HeaderMovieCast, {\n            movieDetials: function movieDetials() {\n              return selectMovieHandler(movie);\n            },\n            key: movie.id,\n            movieImage: movieImageUrl,\n            movie: movie,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 48\n            }\n          });\n          movieRows.push(movieComponent);\n        }\n      });\n      setMovieList(movieRows);\n    }).catch(function (error) {\n      console.log(\"errror\", error);\n    });\n    return function () {\n      setMovieList([]);\n      console.log(\"cleaned DC\");\n    };\n  }, []);\n\n  var selectMovieHandler = function selectMovieHandler(movie) {\n    var url;\n    var urlVideo;\n    var details = {};\n\n    if (movie.media_type === \"movie\") {\n      var movieId = movie.id;\n      console.log(movieId);\n      url = \"https://api.themoviedb.org/3/movie/\".concat(movieId, \"?api_key=028e8ea4ca7d9164d085c9238979098b&append_to_response=videos\");\n    } else if (movie.media_type === \"tv\") {\n      var tvId = movie.id;\n      url = \"https://api.themoviedb.org/3/tv/\".concat(tvId, \"?api_key=028e8ea4ca7d9164d085c9238979098b&append_to_response=videos\");\n    }\n\n    axios.get(url).then(function (res) {\n      var movieData = res.data;\n      setMovieOverview(movieData);\n      var movieImageUrl = \"https://image.tmdb.org/t/p/w500\" + res.data.backdrop_path;\n      var moviePoster = \"https://image.tmdb.org/t/p/w500\" + res.data.poster_path;\n      setImage({\n        bgImg: movieImageUrl,\n        post: moviePoster\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_Header, {\n    backImages: Image.bgImg,\n    moviePost: Image.post,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Grid.Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 16,\n    textAlign: \"center\",\n    className: \"scrollmenuImageBigger\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, movieList)));\n};\n\nexport default _NavigationItems;","map":{"version":3,"sources":["E:/CircuitBreakerShow/src/SecondaryComponents/Desktop/_NavigationItems.js"],"names":["React","useState","useEffect","Button","Container","Menu","Responsive","Segment","Visibility","Grid","Divider","Image","Header","Search","Icon","Dropdown","Label","_HeaderMovieCast","axios","_Header","_NavigationItems","movieList","setMovieList","movieOverview","setMovieOverview","bgImg","post","setImage","url","get","then","res","results","data","slice","movieImageUrll","postImageUrl","movieRows","backdrop_path","poster_path","forEach","movie","movieImageUrl","media_type","movieComponent","selectMovieHandler","id","push","catch","error","console","log","urlVideo","details","movieId","tvId","movieData","moviePoster"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Button, Container, Menu, Responsive, Segment,\r\n    Visibility, Grid, Divider, Image, Header, Search, Icon, Dropdown, Label\r\n} from 'semantic-ui-react'\r\n\r\nimport _HeaderMovieCast from './_HeaderMovieCast';\r\nimport axios from 'axios';\r\nimport _Header from '../Desktop/_Header'\r\n\r\n\r\nconst _NavigationItems = () => {\r\n    const [movieList, setMovieList] = useState([]);\r\n    const [movieOverview, setMovieOverview] = useState({});\r\n    const [Image, setImage] = useState({bgImg:'', post:''});\r\n\r\n    useEffect(() => {\r\n\r\n        const url = 'https://api.themoviedb.org/3/trending/movie/week?api_key=028e8ea4ca7d9164d085c9238979098b&include_adult=false';\r\n        axios.get(url)\r\n            .then(res => {\r\n                const results = res.data.results.slice(0, 5);\r\n                let movieImageUrll;\r\n                let postImageUrl;\r\n                let movieRows = [];\r\n\r\n                movieImageUrll = \"https://image.tmdb.org/t/p/w500\" + results[0].backdrop_path;\r\n                postImageUrl = \"https://image.tmdb.org/t/p/w500\" + results[0].poster_path;\r\n                setImage({bgImg:movieImageUrll, post:postImageUrl});\r\n\r\n                results.forEach((movie) => {\r\n                    let movieImageUrl;\r\n                    movieImageUrl = \"https://image.tmdb.org/t/p/w500\" + movie.backdrop_path;\r\n                    if (movie.poster_path !== null && movie.media_type !== \"person\") {\r\n                        const movieComponent = <_HeaderMovieCast\r\n                            movieDetials={() => selectMovieHandler(movie)}\r\n                            key={movie.id}\r\n                            movieImage={movieImageUrl}\r\n                            movie={movie}\r\n                        />\r\n                        movieRows.push(movieComponent);\r\n                    }\r\n                })\r\n\r\n                setMovieList(movieRows);\r\n\r\n            }).catch(error => {\r\n                console.log(\"errror\", error);\r\n            });\r\n\r\n        return () => {\r\n            setMovieList([]);\r\n            console.log(\"cleaned DC\")\r\n        }\r\n\r\n    }, []);\r\n\r\n    const selectMovieHandler = movie => {\r\n        let url;\r\n        let urlVideo;\r\n        let details = {};\r\n        if (movie.media_type === \"movie\") {\r\n            const movieId = movie.id;\r\n            console.log(movieId)\r\n            url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=028e8ea4ca7d9164d085c9238979098b&append_to_response=videos`;\r\n\r\n        } else if (movie.media_type === \"tv\") {\r\n            const tvId = movie.id\r\n            url = `https://api.themoviedb.org/3/tv/${tvId}?api_key=028e8ea4ca7d9164d085c9238979098b&append_to_response=videos`;\r\n        }\r\n\r\n        axios.get(url)\r\n            .then(res => {\r\n                const movieData = res.data;\r\n                setMovieOverview(movieData);\r\n                let movieImageUrl = \"https://image.tmdb.org/t/p/w500\" + res.data.backdrop_path;\r\n                let moviePoster = \"https://image.tmdb.org/t/p/w500\" + res.data.poster_path;\r\n                setImage({bgImg:movieImageUrl, post:moviePoster});\r\n\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <_Header backImages={Image.bgImg} moviePost={Image.post}/>\r\n            <Grid.Row>\r\n                <Grid.Column width={16} textAlign=\"center\" className=\"scrollmenuImageBigger\">\r\n                    {movieList}\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default _NavigationItems;"]},"metadata":{},"sourceType":"module"}