{"ast":null,"code":"import _slicedToArray from \"E:\\\\CircuitBreakerShow\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\CircuitBreakerShow\\\\src\\\\SecondaryComponents\\\\Desktop\\\\_NavigationItems.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Container, Menu, Responsive, Segment, Visibility, Grid, Divider, Image, Header, Search, Icon, Dropdown, Label } from 'semantic-ui-react';\nimport _HeaderMovieCast from './_HeaderMovieCast';\nimport _HeaderMovieDetails from '../Desktop/_HeaderMovieDetails';\nimport axios from 'axios';\nimport _Header from '../Desktop/_Header';\n\nvar _NavigationItems = function _NavigationItems() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      movieList = _useState2[0],\n      setMovieList = _useState2[1];\n\n  var _useState3 = useState({\n    bgImg: '',\n    post: '',\n    name: '',\n    desc: '',\n    youtube: ''\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      Image = _useState4[0],\n      setImage = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      YouTube = _useState6[0],\n      setYoutube = _useState6[1];\n\n  useEffect(function () {\n    var url = 'https://api.themoviedb.org/3/trending/movie/week?api_key=028e8ea4ca7d9164d085c9238979098b&include_adult=false&append_to_response=videos';\n    axios.get(url).then(function (res) {\n      var results = res.data.results;\n      var movieImageUrll;\n      var postImageUrl;\n      var name = '';\n      var movieRows = [];\n      movieImageUrll = \"https://image.tmdb.org/t/p/w500\" + results[0].backdrop_path;\n      postImageUrl = \"https://image.tmdb.org/t/p/w500\" + results[0].poster_path;\n      var Trailer = results[0].videos.sort(function (a, b) {\n        return b.size - a.size;\n      }).filter(function (x) {\n        return x.type === 'Trailer';\n      });\n      var Teaser = results[0].videos.sort(function (a, b) {\n        return b.size - a.size;\n      }).filter(function (x) {\n        return x.type === 'Teaser';\n      });\n      var key = '';\n      if (Trailer) key = Trailer.map(function (x) {\n        return x.key;\n      });else key = Teaser.map(function (x) {\n        return x.key;\n      });\n      setImage({\n        bgImg: movieImageUrll,\n        post: postImageUrl,\n        name: results[0].title || results[0].name,\n        desc: results[0].overview,\n        youtube: \"https://www.youtube.com/watch?v=\".concat(key)\n      });\n      results.forEach(function (movie) {\n        var movieImageUrl;\n        movieImageUrl = \"https://image.tmdb.org/t/p/w500\" + movie.backdrop_path;\n\n        if (movie.poster_path !== null && movie.media_type !== \"person\") {\n          var movieComponent = /*#__PURE__*/React.createElement(_HeaderMovieCast, {\n            movieDetials: function movieDetials() {\n              return selectMovieHandler(movie);\n            },\n            key: movie.id,\n            movieImage: movieImageUrl,\n            movie: movie,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 48\n            }\n          });\n          movieRows.push(movieComponent);\n        }\n      });\n      setMovieList(movieRows);\n    }).catch(function (error) {\n      console.log(\"errror\", error);\n    });\n    return function () {\n      setMovieList([]);\n      console.log(\"cleaned DC\");\n    };\n  }, []);\n\n  var selectMovieHandler = function selectMovieHandler(movie) {\n    var url;\n    var urlVideo;\n    var details = {};\n\n    if (movie.media_type === \"movie\") {\n      var movieId = movie.id;\n      console.log(movieId);\n      url = \"https://api.themoviedb.org/3/movie/\".concat(movieId, \"?api_key=028e8ea4ca7d9164d085c9238979098b&append_to_response=videos\");\n    } else if (movie.media_type === \"tv\") {\n      var tvId = movie.id;\n      url = \"https://api.themoviedb.org/3/tv/\".concat(tvId, \"?api_key=028e8ea4ca7d9164d085c9238979098b&append_to_response=videos\");\n    }\n\n    axios.get(url).then(function (res) {\n      var movieImageUrl = \"https://image.tmdb.org/t/p/w500\" + res.data.backdrop_path;\n      var moviePoster = \"https://image.tmdb.org/t/p/w500\" + res.data.poster_path;\n      var desc = res.data.overview;\n      setImage({\n        bgImg: movieImageUrl,\n        post: moviePoster,\n        desc: res.data.overview,\n        name: res.data.title || res.data.name\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_Header, {\n    Imagess: Image,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    style: {\n      display: 'contents'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, \"\\xA0\"), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(_HeaderMovieDetails, {\n    url: Image.youtube,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Grid.Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, \"\\xA0\"), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 14,\n    textAlign: \"center\",\n    className: \"scrollmenuImageBigger\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, movieList), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, \"\\xA0\")));\n};\n\nexport default _NavigationItems;","map":{"version":3,"sources":["E:/CircuitBreakerShow/src/SecondaryComponents/Desktop/_NavigationItems.js"],"names":["React","useState","useEffect","Button","Container","Menu","Responsive","Segment","Visibility","Grid","Divider","Image","Header","Search","Icon","Dropdown","Label","_HeaderMovieCast","_HeaderMovieDetails","axios","_Header","_NavigationItems","movieList","setMovieList","bgImg","post","name","desc","youtube","setImage","YouTube","setYoutube","url","get","then","res","results","data","movieImageUrll","postImageUrl","movieRows","backdrop_path","poster_path","Trailer","videos","sort","a","b","size","filter","x","type","Teaser","key","map","title","overview","forEach","movie","movieImageUrl","media_type","movieComponent","selectMovieHandler","id","push","catch","error","console","log","urlVideo","details","movieId","tvId","moviePoster","display"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Button, Container, Menu, Responsive, Segment,\r\n    Visibility, Grid, Divider, Image, Header, Search, Icon, Dropdown, Label\r\n} from 'semantic-ui-react'\r\n\r\nimport _HeaderMovieCast from './_HeaderMovieCast';\r\nimport _HeaderMovieDetails from '../Desktop/_HeaderMovieDetails';\r\nimport axios from 'axios';\r\nimport _Header from '../Desktop/_Header'\r\n\r\n\r\nconst _NavigationItems = () => {\r\n    const [movieList, setMovieList] = useState([]);\r\n    const [Image, setImage] = useState({ bgImg: '', post: '', name: '', desc: '', youtube: '' });\r\n    const [YouTube, setYoutube] = useState('');\r\n\r\n    useEffect(() => {\r\n\r\n        const url = 'https://api.themoviedb.org/3/trending/movie/week?api_key=028e8ea4ca7d9164d085c9238979098b&include_adult=false&append_to_response=videos';\r\n        axios.get(url)\r\n            .then(res => {\r\n                const results = res.data.results;\r\n                let movieImageUrll;\r\n                let postImageUrl;\r\n                let name = '';\r\n                let movieRows = [];\r\n\r\n                movieImageUrll = \"https://image.tmdb.org/t/p/w500\" + results[0].backdrop_path;\r\n                postImageUrl = \"https://image.tmdb.org/t/p/w500\" + results[0].poster_path;\r\n                const Trailer = results[0].videos.sort((a, b) => b.size - a.size).filter(x => x.type === 'Trailer');\r\n                const Teaser = results[0].videos.sort((a, b) => b.size - a.size).filter(x => x.type === 'Teaser');\r\n                let key = '';\r\n                if (Trailer)\r\n                    key = Trailer.map(x => x.key)\r\n                else\r\n                    key = Teaser.map(x => x.key)\r\n\r\n                setImage({\r\n                    bgImg: movieImageUrll,\r\n                    post: postImageUrl,\r\n                    name: results[0].title || results[0].name,\r\n                    desc: results[0].overview,\r\n                    youtube:`https://www.youtube.com/watch?v=${key}`\r\n                });\r\n\r\n                results.forEach((movie) => {\r\n                    let movieImageUrl;\r\n                    movieImageUrl = \"https://image.tmdb.org/t/p/w500\" + movie.backdrop_path;\r\n                    if (movie.poster_path !== null && movie.media_type !== \"person\") {\r\n                        const movieComponent = <_HeaderMovieCast\r\n                            movieDetials={() => selectMovieHandler(movie)}\r\n                            key={movie.id}\r\n                            movieImage={movieImageUrl}\r\n                            movie={movie}\r\n                        />\r\n                        movieRows.push(movieComponent);\r\n                    }\r\n                })\r\n\r\n                setMovieList(movieRows);\r\n\r\n            }).catch(error => {\r\n                console.log(\"errror\", error);\r\n            });\r\n\r\n        return () => {\r\n            setMovieList([]);\r\n            console.log(\"cleaned DC\")\r\n        }\r\n\r\n    }, []);\r\n\r\n    const selectMovieHandler = movie => {\r\n        let url;\r\n        let urlVideo;\r\n        let details = {};\r\n        if (movie.media_type === \"movie\") {\r\n            const movieId = movie.id;\r\n            console.log(movieId)\r\n            url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=028e8ea4ca7d9164d085c9238979098b&append_to_response=videos`;\r\n\r\n        } else if (movie.media_type === \"tv\") {\r\n            const tvId = movie.id\r\n            url = `https://api.themoviedb.org/3/tv/${tvId}?api_key=028e8ea4ca7d9164d085c9238979098b&append_to_response=videos`;\r\n        }\r\n\r\n        axios.get(url)\r\n            .then(res => {\r\n                let movieImageUrl = \"https://image.tmdb.org/t/p/w500\" + res.data.backdrop_path;\r\n                let moviePoster = \"https://image.tmdb.org/t/p/w500\" + res.data.poster_path;\r\n                let desc = res.data.overview;\r\n\r\n                setImage({ bgImg: movieImageUrl, post: moviePoster, desc: res.data.overview, name: res.data.title || res.data.name });\r\n\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <_Header Imagess={Image} />\r\n            <Grid style={{ display: 'contents' }}>\r\n                <Grid.Column width={4}>\r\n                    &nbsp;\r\n                    </Grid.Column>\r\n                <Grid.Column width={12}>\r\n                    <_HeaderMovieDetails url={Image.youtube} />\r\n                </Grid.Column>\r\n            </Grid>\r\n            <Grid.Row>\r\n                <Grid.Column width={1}>&nbsp;</Grid.Column>\r\n                <Grid.Column width={14} textAlign=\"center\" className=\"scrollmenuImageBigger\">\r\n                    {movieList}\r\n                </Grid.Column>\r\n                <Grid.Column width={1}>&nbsp;</Grid.Column>\r\n            </Grid.Row>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default _NavigationItems;"]},"metadata":{},"sourceType":"module"}