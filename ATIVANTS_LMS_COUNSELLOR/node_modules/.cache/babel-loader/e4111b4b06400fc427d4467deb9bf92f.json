{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useClockEvents;\n\nvar _react = require(\"react\");\n\nvar _constants = require(\"../helpers/constants\");\n\nvar _dom = require(\"../helpers/dom\");\n\nvar _math = require(\"../helpers/math\");\n\nvar atan2 = Math.atan2;\n/*\n\tsolely responsible for transforming click events into\n\tangles (which are later converted into time depending\n\ton current mode and other restrictions)\n*/\n\nfunction useClockEvents(clock, handleChange) {\n  var wrapper = (0, _react.useRef)(null);\n  var calcOffsetCache = (0, _react.useRef)(null);\n  var dragCount = (0, _react.useRef)(0);\n  var cleanup = (0, _react.useCallback)(_removeHandlers, []);\n  var disableMouse = (0, _react.useRef)(false); // mouse events\n\n  function handleMouseDown(e) {\n    if (disableMouse.current) {\n      return;\n    }\n\n    dragCount.current = 0; // add listeners\n\n    document.addEventListener('mousemove', handleMouseDrag, false);\n    document.addEventListener('mouseup', handleStopDrag, false);\n    wrapper.current && wrapper.current.addEventListener('mouseleave', handleStopDrag, false);\n\n    if (clock.current) {\n      calcOffsetCache.current = (0, _dom.calcOffset)(clock.current);\n    } // move hand\n    // @ts-ignore\n\n\n    handleMouseDrag(e);\n  }\n\n  function handleMouseDrag(e) {\n    if (calcOffsetCache.current) {\n      var _calcOffsetCache$curr = calcOffsetCache.current(e.clientX, e.clientY),\n          offsetX = _calcOffsetCache$curr.offsetX,\n          offsetY = _calcOffsetCache$curr.offsetY;\n\n      calculatePoint(offsetX, offsetY, false);\n    }\n\n    dragCount.current++;\n\n    if (dragCount.current === 1 && clock.current) {\n      clock.current.style.cursor = '-webkit-grabbing';\n      clock.current.style.cursor = 'grabbing';\n    }\n\n    e.preventDefault();\n    return false;\n  } // touch events\n\n\n  function handleTouchStart() {\n    // disables mouse events during touch events\n    disableMouse.current = true;\n    dragCount.current = 0; // add listeners\n\n    document.addEventListener('touchmove', touchDragHandler, false);\n    document.addEventListener('touchend', handleStopDrag, false);\n    document.addEventListener('touchcancel', handleStopDrag, false);\n\n    if (clock.current) {\n      calcOffsetCache.current = (0, _dom.calcOffset)(clock.current);\n    }\n  }\n\n  function touchDragHandler(e) {\n    if (calcOffsetCache.current) {\n      var touch = e.targetTouches[0];\n\n      var _calcOffsetCache$curr2 = calcOffsetCache.current(touch.clientX, touch.clientY),\n          offsetX = _calcOffsetCache$curr2.offsetX,\n          offsetY = _calcOffsetCache$curr2.offsetY;\n\n      calculatePoint(offsetX, offsetY, false);\n    }\n\n    dragCount.current++;\n    e.preventDefault();\n    return false;\n  } // stop mouse + touch events\n\n\n  function handleStopDrag(e) {\n    _removeHandlers();\n\n    if (e == null || clock.current == null) {\n      return;\n    }\n\n    if (isMouseEventEnd(e)) {\n      _handleMouseUp(e);\n    } else if (isTouchEventEnd(e)) {\n      _handleTouchEnd(e);\n    }\n\n    function isMouseEventEnd(e) {\n      return e.type === 'mouseup';\n    }\n\n    function isTouchEventEnd(e) {\n      return e.type === 'touchcancel' || e.type === 'touchend';\n    }\n  }\n\n  function _removeHandlers() {\n    document.removeEventListener('mousemove', handleMouseDrag, false);\n    document.removeEventListener('mouseup', handleStopDrag, false);\n    wrapper.current && wrapper.current.removeEventListener('mouseleave', handleStopDrag, false);\n    document.removeEventListener('touchmove', touchDragHandler, false);\n    document.removeEventListener('touchend', handleStopDrag, false);\n    document.removeEventListener('touchcancel', handleStopDrag, false);\n  } // handle mouse + touch changes\n\n\n  function _handleMouseUp(e) {\n    if (!clock.current) {\n      return;\n    }\n\n    clock.current.style.cursor = '';\n\n    var _ref = calcOffsetCache.current(e.clientX, e.clientY),\n        offsetX = _ref.offsetX,\n        offsetY = _ref.offsetY;\n\n    calculatePoint(offsetX, offsetY, true);\n  }\n\n  function _handleTouchEnd(e) {\n    var touch = e.targetTouches[0] || e.changedTouches[0];\n\n    if (touch && calcOffsetCache.current) {\n      var _calcOffsetCache$curr3 = calcOffsetCache.current(touch.clientX, touch.clientY),\n          offsetX = _calcOffsetCache$curr3.offsetX,\n          offsetY = _calcOffsetCache$curr3.offsetY;\n\n      calculatePoint(offsetX, offsetY, true);\n    }\n\n    setTimeout(function () {\n      disableMouse.current = false;\n    }, 10);\n  }\n\n  function calculatePoint(offsetX, offsetY, // determines if change is due to mouseup/touchend in order to\n  // automatically change unit (eg: hour -> minute) if enabled\n  // prevents changing unit if dragging along clock\n  canAutoChangeUnit) {\n    // if user just clicks/taps a number (drag count < 2), then just assume it's a rough tap\n    // and force a rounded/coarse number (ie: 1, 2, 3, 4 is tapped, assume 0 or 5)\n    var wasTapped = dragCount.current < 2;\n    var x = offsetX - _constants.CLOCK_RADIUS;\n    var y = -offsetY + _constants.CLOCK_RADIUS;\n    var a = atan2(y, x);\n    var d = 90 - (0, _math.deg)(a);\n\n    if (d < 0) {\n      d = 360 + d;\n    } // ensure touch doesn't bleed outside of clock radius\n\n\n    if (!(0, _math.isWithinRadius)(x, y, _constants.CLOCK_RADIUS) && wasTapped) {\n      return false;\n    }\n\n    var isInnerClick = (0, _math.isWithinRadius)(x, y, _constants.INNER_NUMBER_RADIUS); // update time on main\n\n    handleChange(d, {\n      canAutoChangeUnit: canAutoChangeUnit,\n      wasTapped: wasTapped,\n      isInnerClick: isInnerClick\n    });\n  } // clean up\n\n\n  (0, _react.useEffect)(function () {\n    return cleanup;\n  }, [cleanup]);\n  return {\n    bind: {\n      onMouseDown: handleMouseDown,\n      onTouchStart: handleTouchStart,\n      ref: wrapper\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/ACTIVANTS/Desktop/LMS Councellor/Activants_LMS_Counsellor/ATIVANTS_LMS_COUNSELLOR/node_modules/react-timekeeper/lib/hooks/clock-events.js"],"names":["Object","defineProperty","exports","value","default","useClockEvents","_react","require","_constants","_dom","_math","atan2","Math","clock","handleChange","wrapper","useRef","calcOffsetCache","dragCount","cleanup","useCallback","_removeHandlers","disableMouse","handleMouseDown","e","current","document","addEventListener","handleMouseDrag","handleStopDrag","calcOffset","_calcOffsetCache$curr","clientX","clientY","offsetX","offsetY","calculatePoint","style","cursor","preventDefault","handleTouchStart","touchDragHandler","touch","targetTouches","_calcOffsetCache$curr2","isMouseEventEnd","_handleMouseUp","isTouchEventEnd","_handleTouchEnd","type","removeEventListener","_ref","changedTouches","_calcOffsetCache$curr3","setTimeout","canAutoChangeUnit","wasTapped","x","CLOCK_RADIUS","y","a","d","deg","isWithinRadius","isInnerClick","INNER_NUMBER_RADIUS","useEffect","bind","onMouseDown","onTouchStart","ref"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useClockEvents;\n\nvar _react = require(\"react\");\n\nvar _constants = require(\"../helpers/constants\");\n\nvar _dom = require(\"../helpers/dom\");\n\nvar _math = require(\"../helpers/math\");\n\nconst atan2 = Math.atan2;\n\n/*\n\tsolely responsible for transforming click events into\n\tangles (which are later converted into time depending\n\ton current mode and other restrictions)\n*/\nfunction useClockEvents(clock, handleChange) {\n  const wrapper = (0, _react.useRef)(null);\n  const calcOffsetCache = (0, _react.useRef)(null);\n  const dragCount = (0, _react.useRef)(0);\n  const cleanup = (0, _react.useCallback)(_removeHandlers, []);\n  const disableMouse = (0, _react.useRef)(false); // mouse events\n\n  function handleMouseDown(e) {\n    if (disableMouse.current) {\n      return;\n    }\n\n    dragCount.current = 0; // add listeners\n\n    document.addEventListener('mousemove', handleMouseDrag, false);\n    document.addEventListener('mouseup', handleStopDrag, false);\n    wrapper.current && wrapper.current.addEventListener('mouseleave', handleStopDrag, false);\n\n    if (clock.current) {\n      calcOffsetCache.current = (0, _dom.calcOffset)(clock.current);\n    } // move hand\n    // @ts-ignore\n\n\n    handleMouseDrag(e);\n  }\n\n  function handleMouseDrag(e) {\n    if (calcOffsetCache.current) {\n      const _calcOffsetCache$curr = calcOffsetCache.current(e.clientX, e.clientY),\n            offsetX = _calcOffsetCache$curr.offsetX,\n            offsetY = _calcOffsetCache$curr.offsetY;\n\n      calculatePoint(offsetX, offsetY, false);\n    }\n\n    dragCount.current++;\n\n    if (dragCount.current === 1 && clock.current) {\n      clock.current.style.cursor = '-webkit-grabbing';\n      clock.current.style.cursor = 'grabbing';\n    }\n\n    e.preventDefault();\n    return false;\n  } // touch events\n\n\n  function handleTouchStart() {\n    // disables mouse events during touch events\n    disableMouse.current = true;\n    dragCount.current = 0; // add listeners\n\n    document.addEventListener('touchmove', touchDragHandler, false);\n    document.addEventListener('touchend', handleStopDrag, false);\n    document.addEventListener('touchcancel', handleStopDrag, false);\n\n    if (clock.current) {\n      calcOffsetCache.current = (0, _dom.calcOffset)(clock.current);\n    }\n  }\n\n  function touchDragHandler(e) {\n    if (calcOffsetCache.current) {\n      const touch = e.targetTouches[0];\n\n      const _calcOffsetCache$curr2 = calcOffsetCache.current(touch.clientX, touch.clientY),\n            offsetX = _calcOffsetCache$curr2.offsetX,\n            offsetY = _calcOffsetCache$curr2.offsetY;\n\n      calculatePoint(offsetX, offsetY, false);\n    }\n\n    dragCount.current++;\n    e.preventDefault();\n    return false;\n  } // stop mouse + touch events\n\n\n  function handleStopDrag(e) {\n    _removeHandlers();\n\n    if (e == null || clock.current == null) {\n      return;\n    }\n\n    if (isMouseEventEnd(e)) {\n      _handleMouseUp(e);\n    } else if (isTouchEventEnd(e)) {\n      _handleTouchEnd(e);\n    }\n\n    function isMouseEventEnd(e) {\n      return e.type === 'mouseup';\n    }\n\n    function isTouchEventEnd(e) {\n      return e.type === 'touchcancel' || e.type === 'touchend';\n    }\n  }\n\n  function _removeHandlers() {\n    document.removeEventListener('mousemove', handleMouseDrag, false);\n    document.removeEventListener('mouseup', handleStopDrag, false);\n    wrapper.current && wrapper.current.removeEventListener('mouseleave', handleStopDrag, false);\n    document.removeEventListener('touchmove', touchDragHandler, false);\n    document.removeEventListener('touchend', handleStopDrag, false);\n    document.removeEventListener('touchcancel', handleStopDrag, false);\n  } // handle mouse + touch changes\n\n\n  function _handleMouseUp(e) {\n    if (!clock.current) {\n      return;\n    }\n\n    clock.current.style.cursor = '';\n\n    const _ref = calcOffsetCache.current(e.clientX, e.clientY),\n          offsetX = _ref.offsetX,\n          offsetY = _ref.offsetY;\n\n    calculatePoint(offsetX, offsetY, true);\n  }\n\n  function _handleTouchEnd(e) {\n    const touch = e.targetTouches[0] || e.changedTouches[0];\n\n    if (touch && calcOffsetCache.current) {\n      const _calcOffsetCache$curr3 = calcOffsetCache.current(touch.clientX, touch.clientY),\n            offsetX = _calcOffsetCache$curr3.offsetX,\n            offsetY = _calcOffsetCache$curr3.offsetY;\n\n      calculatePoint(offsetX, offsetY, true);\n    }\n\n    setTimeout(() => {\n      disableMouse.current = false;\n    }, 10);\n  }\n\n  function calculatePoint(offsetX, offsetY, // determines if change is due to mouseup/touchend in order to\n  // automatically change unit (eg: hour -> minute) if enabled\n  // prevents changing unit if dragging along clock\n  canAutoChangeUnit) {\n    // if user just clicks/taps a number (drag count < 2), then just assume it's a rough tap\n    // and force a rounded/coarse number (ie: 1, 2, 3, 4 is tapped, assume 0 or 5)\n    const wasTapped = dragCount.current < 2;\n    const x = offsetX - _constants.CLOCK_RADIUS;\n    const y = -offsetY + _constants.CLOCK_RADIUS;\n    const a = atan2(y, x);\n    let d = 90 - (0, _math.deg)(a);\n\n    if (d < 0) {\n      d = 360 + d;\n    } // ensure touch doesn't bleed outside of clock radius\n\n\n    if (!(0, _math.isWithinRadius)(x, y, _constants.CLOCK_RADIUS) && wasTapped) {\n      return false;\n    }\n\n    const isInnerClick = (0, _math.isWithinRadius)(x, y, _constants.INNER_NUMBER_RADIUS); // update time on main\n\n    handleChange(d, {\n      canAutoChangeUnit,\n      wasTapped,\n      isInnerClick\n    });\n  } // clean up\n\n\n  (0, _react.useEffect)(() => {\n    return cleanup;\n  }, [cleanup]);\n  return {\n    bind: {\n      onMouseDown: handleMouseDown,\n      onTouchStart: handleTouchStart,\n      ref: wrapper\n    }\n  };\n}"]},"metadata":{},"sourceType":"script"}