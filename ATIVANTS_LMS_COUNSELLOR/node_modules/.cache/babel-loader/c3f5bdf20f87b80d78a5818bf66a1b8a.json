{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ACTIVANTS\\\\Desktop\\\\LMS Councellor\\\\Activants_LMS_Counsellor\\\\ATIVANTS_LMS_COUNSELLOR\\\\src\\\\SecondaryComponents\\\\Desktop\\\\RegistrationComponents\\\\_Registration_First.js\";\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Header, Icon, Form, Image, Message, Segment, Grid, Modal, Search, Button, Dimmer, Loader, Divider, List, Dropdown, Select } from 'semantic-ui-react';\nimport { useForm } from \"react-hook-form\";\n\nvar Registration_First = function Registration_First(_ref) {\n  var formData = _ref.formData,\n      setForm = _ref.setForm,\n      navigation = _ref.navigation;\n  var COUNSELLOR_FIRST_NAME = formData.COUNSELLOR_FIRST_NAME,\n      COUNSELLOR_LAST_NAME = formData.COUNSELLOR_LAST_NAME,\n      COUNSELLOR_EMAIL = formData.COUNSELLOR_EMAIL,\n      COUNSELLOR_PHONE_NUMBER = formData.COUNSELLOR_PHONE_NUMBER,\n      COUNSELLOR_COUNTRY_CODE = formData.COUNSELLOR_COUNTRY_CODE,\n      COUNSELLOR_COUNSELLING_SUBJECT_CODE = formData.COUNSELLOR_COUNSELLING_SUBJECT_CODE,\n      COUNSELLOR_COUNSELLING_LEVEL_CODE = formData.COUNSELLOR_COUNSELLING_LEVEL_CODE,\n      COUNSELLOR_HOURLY_RATE = formData.COUNSELLOR_HOURLY_RATE,\n      COUNSELLOR_QUALIFICATION_CODE = formData.COUNSELLOR_QUALIFICATION_CODE,\n      COUNSELLOR_INSTITUTION_TYPE_CODE = formData.COUNSELLOR_INSTITUTION_TYPE_CODE;\n  console.log(formData);\n\n  var _useForm = useForm({}),\n      handleSubmit = _useForm.handleSubmit,\n      register = _useForm.register,\n      errors = _useForm.errors;\n\n  var onSubmit = function onSubmit(data) {\n    navigation.next();\n  };\n\n  var Counsellor_Countries = [{\n    title: \"What kind of traveler are you?\",\n    name: [\"Adrenaline Addicts\", \"Culture Lovers\", \"Aquatic adventures\", \"Beach enthusiasts\"],\n    code: [0, 1, 2, 3]\n  }];\n  var Counsellor_Subject = [{\n    title: \"Choose subject?\",\n    name: [\"Adrenaline Addicts\", \"Culture Lovers\", \"Aquatic adventures\", \"Beach enthusiasts\"],\n    code: [0, 1, 2, 3]\n  }];\n  var Counselling_Level = [{\n    title: \"Choose Level?\",\n    name: [\"Adrenaline Addicts\", \"Culture Lovers\", \"Aquatic adventures\", \"Beach enthusiasts\"],\n    code: [0, 1, 2, 3]\n  }];\n  var Counsellor_Qualification = [{\n    title: \"Choose Qualification\",\n    name: [\"Adrenaline Addicts\", \"Culture Lovers\", \"Aquatic adventures\", \"Beach enthusiasts\"],\n    code: [0, 1, 2, 3]\n  }];\n  var Counsellor_Institute = [{\n    title: \"Choose Institute\",\n    name: [\"Adrenaline Addicts\", \"Culture Lovers\", \"Aquatic adventures\", \"Beach enthusiasts\"],\n    code: [0, 1, 2, 3]\n  }];\n  return /*#__PURE__*/React.createElement(Grid, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    size: \"small\",\n    onSubmit: handleSubmit(onSubmit),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"center\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"teal\",\n    fluid: true,\n    size: \"large\",\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }, \"Next\"), /*#__PURE__*/React.createElement(Segment, {\n    style: {\n      width: '80%',\n      textAlign: 'left'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"user\",\n    className: \"customIconsAlign\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 37\n    }\n  }), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"First Name\",\n    type: \"text\",\n    name: \"COUNSELLOR_FIRST_NAME\",\n    onChange: setForm,\n    value: COUNSELLOR_FIRST_NAME,\n    ref: register({\n      validate: function validate(COUNSELLOR_FIRST_NAME) {\n        return COUNSELLOR_FIRST_NAME && COUNSELLOR_FIRST_NAME.length > 3;\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 37\n    }\n  }), errors.COUNSELLOR_FIRST_NAME && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"customError\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 70\n    }\n  }, \"Username invalid\")), /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"user\",\n    className: \"customIconsAlign\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 37\n    }\n  }), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n    fluid: true,\n    icon: \"user\",\n    iconPosition: \"left\",\n    placeholder: \"Last Name\",\n    type: \"text\",\n    name: \"COUNSELLOR_LAST_NAME\",\n    onChange: setForm,\n    value: COUNSELLOR_LAST_NAME,\n    ref: register({\n      validate: function validate(COUNSELLOR_LAST_NAME) {\n        return COUNSELLOR_LAST_NAME && COUNSELLOR_LAST_NAME.length > 3;\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 37\n    }\n  }), errors.COUNSELLOR_LAST_NAME && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"customError\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 69\n    }\n  }, \"Username invalid\"))), /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"user\",\n    className: \"customIconsAlign\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 37\n    }\n  }), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n    fluid: true,\n    icon: \"user\",\n    iconPosition: \"left\",\n    placeholder: \"Email\",\n    type: \"text\",\n    name: \"COUNSELLOR_EMAIL\",\n    onChange: setForm,\n    value: COUNSELLOR_EMAIL,\n    ref: register({\n      validate: function validate(COUNSELLOR_EMAIL) {\n        return COUNSELLOR_EMAIL && COUNSELLOR_EMAIL.length > 3;\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 37\n    }\n  }), errors.COUNSELLOR_EMAIL && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"customError\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 65\n    }\n  }, \"Username invalid\")), /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"user\",\n    className: \"customIconsAlign\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 37\n    }\n  }), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n    fluid: true,\n    placeholder: \"Phone number\",\n    type: \"text\",\n    name: \"COUNSELLOR_PHONE_NUMBER\",\n    onChange: setForm,\n    value: COUNSELLOR_PHONE_NUMBER,\n    ref: register({\n      validate: function validate(COUNSELLOR_PHONE_NUMBER) {\n        return COUNSELLOR_PHONE_NUMBER && COUNSELLOR_PHONE_NUMBER.length > 3;\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 37\n    }\n  }), errors.COUNSELLOR_PHONE_NUMBER && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"customError\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 72\n    }\n  }, \"Username invalid\"))), /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"user\",\n    className: \"customIconsAlign\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 37\n    }\n  }), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"select\", {\n    name: \"COUNSELLOR_COUNTRY_CODE\",\n    value: COUNSELLOR_COUNTRY_CODE,\n    onChange: setForm,\n    placeholder: \"Select country of origin\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 37\n    }\n  }, Counsellor_Countries.map(function (countries) {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      disabled: true,\n      selected: true,\n      hidden: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 57\n      }\n    }, countries.title), countries.name.map(function (name, code) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: code,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 96\n        }\n      }, name);\n    }));\n  })))), /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"user\",\n    className: \"customIconsAlign\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 33\n    }\n  }), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"select\", {\n    name: \"COUNSELLOR_COUNSELLING_SUBJECT_CODE\",\n    value: COUNSELLOR_COUNSELLING_SUBJECT_CODE,\n    onChange: setForm,\n    placeholder: \"choose subject\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 37\n    }\n  }, Counsellor_Subject.map(function (subjects) {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      disabled: true,\n      selected: true,\n      hidden: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 57\n      }\n    }, subjects.title), subjects.name.map(function (name, code) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: code,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 95\n        }\n      }, name);\n    }));\n  }))), /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"user\",\n    className: \"customIconsAlign\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 37\n    }\n  }), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"select\", {\n    name: \"COUNSELLOR_COUNSELLING_LEVEL_CODE\",\n    value: COUNSELLOR_COUNSELLING_LEVEL_CODE,\n    onChange: setForm,\n    placeholder: \"choose subject\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 37\n    }\n  }, Counselling_Level.map(function (level) {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      disabled: true,\n      selected: true,\n      hidden: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 57\n      }\n    }, level.title), level.name.map(function (name, code) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: code,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 92\n        }\n      }, name);\n    }));\n  }))), /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"user\",\n    className: \"customIconsAlign\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 37\n    }\n  }), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n    fluid: true,\n    icon: \"user\",\n    iconPosition: \"left\",\n    placeholder: \"Enter your details\",\n    type: \"text\",\n    name: \"COUNSELLOR_HOURLY_RATE\",\n    onChange: setForm,\n    value: COUNSELLOR_HOURLY_RATE,\n    ref: register,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 37\n    }\n  }, \"$\"))), /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"user\",\n    className: \"customIconsAlign\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 37\n    }\n  }), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"select\", {\n    name: \"COUNSELLOR_QUALIFICATION_CODE\",\n    value: COUNSELLOR_QUALIFICATION_CODE,\n    onChange: setForm,\n    placeholder: \"choose subject\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 37\n    }\n  }, Counsellor_Qualification.map(function (qualification) {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      disabled: true,\n      selected: true,\n      hidden: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 57\n      }\n    }, qualification.title), qualification.name.map(function (name, code) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: code,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 100\n        }\n      }, name);\n    }));\n  }))), /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"user\",\n    className: \"customIconsAlign\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 37\n    }\n  }), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"select\", {\n    name: \"COUNSELLOR_INSTITUTION_TYPE_CODE\",\n    value: COUNSELLOR_INSTITUTION_TYPE_CODE,\n    onChange: setForm,\n    placeholder: \"choose subject\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 37\n    }\n  }, Counsellor_Institute.map(function (Institute) {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      disabled: true,\n      selected: true,\n      hidden: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 57\n      }\n    }, Institute.title), Institute.name.map(function (name, code) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: code,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 96\n        }\n      }, name);\n    }));\n  })))))))));\n};\n\nexport default Registration_First;","map":{"version":3,"sources":["C:/Users/ACTIVANTS/Desktop/LMS Councellor/Activants_LMS_Counsellor/ATIVANTS_LMS_COUNSELLOR/src/SecondaryComponents/Desktop/RegistrationComponents/_Registration_First.js"],"names":["React","useState","useEffect","useContext","Header","Icon","Form","Image","Message","Segment","Grid","Modal","Search","Button","Dimmer","Loader","Divider","List","Dropdown","Select","useForm","Registration_First","formData","setForm","navigation","COUNSELLOR_FIRST_NAME","COUNSELLOR_LAST_NAME","COUNSELLOR_EMAIL","COUNSELLOR_PHONE_NUMBER","COUNSELLOR_COUNTRY_CODE","COUNSELLOR_COUNSELLING_SUBJECT_CODE","COUNSELLOR_COUNSELLING_LEVEL_CODE","COUNSELLOR_HOURLY_RATE","COUNSELLOR_QUALIFICATION_CODE","COUNSELLOR_INSTITUTION_TYPE_CODE","console","log","handleSubmit","register","errors","onSubmit","data","next","Counsellor_Countries","title","name","code","Counsellor_Subject","Counselling_Level","Counsellor_Qualification","Counsellor_Institute","width","textAlign","validate","length","map","countries","subjects","level","qualification","Institute"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SACIC,MADJ,EACYC,IADZ,EACkBC,IADlB,EACwBC,KADxB,EAC+BC,OAD/B,EAEIC,OAFJ,EAEaC,IAFb,EAEmBC,KAFnB,EAE0BC,MAF1B,EAEkCC,MAFlC,EAE0CC,MAF1C,EAEkDC,MAFlD,EAE0DC,OAF1D,EAEmEC,IAFnE,EAEyEC,QAFzE,EAEmFC,MAFnF,QAGO,mBAHP;AAIA,SAASC,OAAT,QAAwB,iBAAxB;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,OAAuC;AAAA,MAApCC,QAAoC,QAApCA,QAAoC;AAAA,MAA1BC,OAA0B,QAA1BA,OAA0B;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AAAA,MAI1DC,qBAJ0D,GAe1DH,QAf0D,CAI1DG,qBAJ0D;AAAA,MAK1DC,oBAL0D,GAe1DJ,QAf0D,CAK1DI,oBAL0D;AAAA,MAM1DC,gBAN0D,GAe1DL,QAf0D,CAM1DK,gBAN0D;AAAA,MAO1DC,uBAP0D,GAe1DN,QAf0D,CAO1DM,uBAP0D;AAAA,MAQ1DC,uBAR0D,GAe1DP,QAf0D,CAQ1DO,uBAR0D;AAAA,MAS1DC,mCAT0D,GAe1DR,QAf0D,CAS1DQ,mCAT0D;AAAA,MAU1DC,iCAV0D,GAe1DT,QAf0D,CAU1DS,iCAV0D;AAAA,MAW1DC,sBAX0D,GAe1DV,QAf0D,CAW1DU,sBAX0D;AAAA,MAY1DC,6BAZ0D,GAe1DX,QAf0D,CAY1DW,6BAZ0D;AAAA,MAa1DC,gCAb0D,GAe1DZ,QAf0D,CAa1DY,gCAb0D;AAgB9DC,EAAAA,OAAO,CAACC,GAAR,CAAYd,QAAZ;;AAhB8D,iBAkBnBF,OAAO,CAAC,EAAD,CAlBY;AAAA,MAkBtDiB,YAlBsD,YAkBtDA,YAlBsD;AAAA,MAkBxCC,QAlBwC,YAkBxCA,QAlBwC;AAAA,MAkB9BC,MAlB8B,YAkB9BA,MAlB8B;;AAsB9D,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAU;AACvBjB,IAAAA,UAAU,CAACkB,IAAX;AACH,GAFD;;AAIA,MAAMC,oBAAoB,GAAG,CACzB;AACIC,IAAAA,KAAK,EAAE,gCADX;AAEIC,IAAAA,IAAI,EAAE,CACF,oBADE,EACoB,gBADpB,EACsC,oBADtC,EAC4D,mBAD5D,CAFV;AAKIC,IAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV;AALV,GADyB,CAA7B;AAUA,MAAMC,kBAAkB,GAAG,CACvB;AACIH,IAAAA,KAAK,EAAE,iBADX;AAEIC,IAAAA,IAAI,EAAE,CACF,oBADE,EACoB,gBADpB,EACsC,oBADtC,EAC4D,mBAD5D,CAFV;AAKIC,IAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV;AALV,GADuB,CAA3B;AAUA,MAAME,iBAAiB,GAAG,CACtB;AACIJ,IAAAA,KAAK,EAAE,eADX;AAEIC,IAAAA,IAAI,EAAE,CACF,oBADE,EACoB,gBADpB,EACsC,oBADtC,EAC4D,mBAD5D,CAFV;AAKIC,IAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV;AALV,GADsB,CAA1B;AAUA,MAAMG,wBAAwB,GAAG,CAC7B;AACIL,IAAAA,KAAK,EAAE,sBADX;AAEIC,IAAAA,IAAI,EAAE,CACF,oBADE,EACoB,gBADpB,EACsC,oBADtC,EAC4D,mBAD5D,CAFV;AAKIC,IAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV;AALV,GAD6B,CAAjC;AAUA,MAAMI,oBAAoB,GAAG,CACzB;AACIN,IAAAA,KAAK,EAAE,kBADX;AAEIC,IAAAA,IAAI,EAAE,CACF,oBADE,EACoB,gBADpB,EACsC,oBADtC,EAC4D,mBAD5D,CAFV;AAKIC,IAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV;AALV,GADyB,CAA7B;AAWA,sBAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,OAAX;AAAmB,IAAA,QAAQ,EAAET,YAAY,CAACG,QAAD,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,MAAD;AACI,IAAA,KAAK,EAAC,MADV;AAEI,IAAA,KAAK,MAFT;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,IAAI,EAAC,QAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAUI,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAE;AAAEW,MAAAA,KAAK,EAAE,KAAT;AAAgBC,MAAAA,SAAS,EAAE;AAA3B,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,MAAM,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,MAAX;AAAkB,IAAA,SAAS,EAAC,kBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,+BAGI;AACI,IAAA,WAAW,EAAC,YADhB;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,IAAI,EAAC,uBAHT;AAII,IAAA,QAAQ,EAAE7B,OAJd;AAKI,IAAA,KAAK,EAAEE,qBALX;AAMI,IAAA,GAAG,EAAEa,QAAQ,CAAC;AAAEe,MAAAA,QAAQ,EAAE,kBAAA5B,qBAAqB;AAAA,eAAIA,qBAAqB,IAAIA,qBAAqB,CAAC6B,MAAtB,GAA+B,CAA5D;AAAA;AAAjC,KAAD,CANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAWKf,MAAM,CAACd,qBAAP,iBAAgC;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAXrC,CADJ,eAgBI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,MAAX;AAAkB,IAAA,SAAS,EAAC,kBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,+BAGI;AACI,IAAA,KAAK,MADT;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,YAAY,EAAC,MAHjB;AAII,IAAA,WAAW,EAAC,WAJhB;AAKI,IAAA,IAAI,EAAC,MALT;AAMI,IAAA,IAAI,EAAC,sBANT;AAOI,IAAA,QAAQ,EAAEF,OAPd;AAQI,IAAA,KAAK,EAAEG,oBARX;AASI,IAAA,GAAG,EAAEY,QAAQ,CAAC;AAAEe,MAAAA,QAAQ,EAAE,kBAAA3B,oBAAoB;AAAA,eAAIA,oBAAoB,IAAIA,oBAAoB,CAAC4B,MAArB,GAA8B,CAA1D;AAAA;AAAhC,KAAD,CATjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAcKf,MAAM,CAACb,oBAAP,iBAA+B;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAdpC,CAhBJ,CADJ,eAqCI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,MAAM,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,MAAX;AAAkB,IAAA,SAAS,EAAC,kBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,+BAGI;AACI,IAAA,KAAK,MADT;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,YAAY,EAAC,MAHjB;AAII,IAAA,WAAW,EAAC,OAJhB;AAKI,IAAA,IAAI,EAAC,MALT;AAMI,IAAA,IAAI,EAAC,kBANT;AAOI,IAAA,QAAQ,EAAEH,OAPd;AAQI,IAAA,KAAK,EAAEI,gBARX;AASI,IAAA,GAAG,EAAEW,QAAQ,CAAC;AAAEe,MAAAA,QAAQ,EAAE,kBAAA1B,gBAAgB;AAAA,eAAIA,gBAAgB,IAAIA,gBAAgB,CAAC2B,MAAjB,GAA0B,CAAlD;AAAA;AAA5B,KAAD,CATjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAcKf,MAAM,CAACZ,gBAAP,iBAA2B;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAdhC,CADJ,eAkBI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,MAAX;AAAkB,IAAA,SAAS,EAAC,kBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,+BAGI;AACI,IAAA,KAAK,MADT;AAEI,IAAA,WAAW,EAAC,cAFhB;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,IAAI,EAAC,yBAJT;AAKI,IAAA,QAAQ,EAAEJ,OALd;AAMI,IAAA,KAAK,EAAEK,uBANX;AAOI,IAAA,GAAG,EAAEU,QAAQ,CAAC;AAAEe,MAAAA,QAAQ,EAAE,kBAAAzB,uBAAuB;AAAA,eAAIA,uBAAuB,IAAIA,uBAAuB,CAAC0B,MAAxB,GAAiC,CAAhE;AAAA;AAAnC,KAAD,CAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAYKf,MAAM,CAACX,uBAAP,iBAAkC;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAZvC,CAlBJ,CArCJ,eAyEI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,MAAM,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,MAAX;AAAkB,IAAA,SAAS,EAAC,kBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,+BAGI;AAAQ,IAAA,IAAI,EAAC,yBAAb;AAAuC,IAAA,KAAK,EAAEC,uBAA9C;AAAuE,IAAA,QAAQ,EAAEN,OAAjF;AAA0F,IAAA,WAAW,EAAC,0BAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQoB,oBAAoB,CAACY,GAArB,CAAyB,UAACC,SAAD,EAAe;AACpC,wBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,QAAQ,MAAzB;AAA0B,MAAA,MAAM,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCA,SAAS,CAACZ,KAA5C,CADJ,EAGQY,SAAS,CAACX,IAAV,CAAeU,GAAf,CAAmB,UAACV,IAAD,EAAOC,IAAP;AAAA,0BAAgB;AAAQ,QAAA,KAAK,EAAEA,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsBD,IAAtB,CAAhB;AAAA,KAAnB,CAHR,CADJ;AASH,GAVD,CAFR,CAHJ,CADJ,CAzEJ,eAgGI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,MAAM,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,MAAX;AAAkB,IAAA,SAAS,EAAC,kBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,+BAGI;AAAQ,IAAA,IAAI,EAAC,qCAAb;AAAmD,IAAA,KAAK,EAAEf,mCAA1D;AAA+F,IAAA,QAAQ,EAAEP,OAAzG;AAAkH,IAAA,WAAW,EAAC,gBAA9H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQwB,kBAAkB,CAACQ,GAAnB,CAAuB,UAACE,QAAD,EAAc;AACjC,wBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,QAAQ,MAAzB;AAA0B,MAAA,MAAM,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCA,QAAQ,CAACb,KAA3C,CADJ,EAGQa,QAAQ,CAACZ,IAAT,CAAcU,GAAd,CAAkB,UAACV,IAAD,EAAOC,IAAP;AAAA,0BAAgB;AAAQ,QAAA,KAAK,EAAEA,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsBD,IAAtB,CAAhB;AAAA,KAAlB,CAHR,CADJ;AASH,GAVD,CAFR,CAHJ,CADJ,eAqBI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,MAAX;AAAkB,IAAA,SAAS,EAAC,kBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,+BAGI;AAAQ,IAAA,IAAI,EAAC,mCAAb;AAAiD,IAAA,KAAK,EAAEd,iCAAxD;AAA2F,IAAA,QAAQ,EAAER,OAArG;AAA8G,IAAA,WAAW,EAAC,gBAA1H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQyB,iBAAiB,CAACO,GAAlB,CAAsB,UAACG,KAAD,EAAW;AAC7B,wBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,QAAQ,MAAzB;AAA0B,MAAA,MAAM,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCA,KAAK,CAACd,KAAxC,CADJ,EAGQc,KAAK,CAACb,IAAN,CAAWU,GAAX,CAAe,UAACV,IAAD,EAAOC,IAAP;AAAA,0BAAgB;AAAQ,QAAA,KAAK,EAAEA,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsBD,IAAtB,CAAhB;AAAA,KAAf,CAHR,CADJ;AASH,GAVD,CAFR,CAHJ,CArBJ,eAwCI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,MAAX;AAAkB,IAAA,SAAS,EAAC,kBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,+BAGI;AACI,IAAA,KAAK,MADT;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,YAAY,EAAC,MAHjB;AAII,IAAA,WAAW,EAAC,oBAJhB;AAKI,IAAA,IAAI,EAAC,MALT;AAMI,IAAA,IAAI,EAAC,wBANT;AAOI,IAAA,QAAQ,EAAEtB,OAPd;AAQI,IAAA,KAAK,EAAES,sBARX;AASI,IAAA,GAAG,EAAEM,QATT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAdJ,CAxCJ,CAhGJ,eA4JI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,MAAM,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,MAAX;AAAkB,IAAA,SAAS,EAAC,kBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,+BAGI;AAAQ,IAAA,IAAI,EAAC,+BAAb;AAA6C,IAAA,KAAK,EAAEL,6BAApD;AAAmF,IAAA,QAAQ,EAAEV,OAA7F;AAAsG,IAAA,WAAW,EAAC,gBAAlH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQ0B,wBAAwB,CAACM,GAAzB,CAA6B,UAACI,aAAD,EAAmB;AAC5C,wBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,QAAQ,MAAzB;AAA0B,MAAA,MAAM,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCA,aAAa,CAACf,KAAhD,CADJ,EAGQe,aAAa,CAACd,IAAd,CAAmBU,GAAnB,CAAuB,UAACV,IAAD,EAAOC,IAAP;AAAA,0BAAgB;AAAQ,QAAA,KAAK,EAAEA,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsBD,IAAtB,CAAhB;AAAA,KAAvB,CAHR,CADJ;AASH,GAVD,CAFR,CAHJ,CADJ,eAsBI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,MAAX;AAAkB,IAAA,SAAS,EAAC,kBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,+BAGI;AAAQ,IAAA,IAAI,EAAC,kCAAb;AAAgD,IAAA,KAAK,EAAEX,gCAAvD;AAAyF,IAAA,QAAQ,EAAEX,OAAnG;AAA4G,IAAA,WAAW,EAAC,gBAAxH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQ2B,oBAAoB,CAACK,GAArB,CAAyB,UAACK,SAAD,EAAe;AACpC,wBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,QAAQ,MAAzB;AAA0B,MAAA,MAAM,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCA,SAAS,CAAChB,KAA5C,CADJ,EAGQgB,SAAS,CAACf,IAAV,CAAeU,GAAf,CAAmB,UAACV,IAAD,EAAOC,IAAP;AAAA,0BAAgB;AAAQ,QAAA,KAAK,EAAEA,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsBD,IAAtB,CAAhB;AAAA,KAAnB,CAHR,CADJ;AASH,GAVD,CAFR,CAHJ,CAtBJ,CA5JJ,CAVJ,CADJ,CADJ,CADJ,CAFJ;AAkOH,CA/SD;;AAiTA,eAAexB,kBAAf","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport {\n    Header, Icon, Form, Image, Message,\n    Segment, Grid, Modal, Search, Button, Dimmer, Loader, Divider, List, Dropdown, Select\n} from 'semantic-ui-react';\nimport { useForm } from \"react-hook-form\";\n\nconst Registration_First = ({ formData, setForm, navigation }) => {\n\n    const {\n        //FIRST REGISTRATION PAGE\n        COUNSELLOR_FIRST_NAME,\n        COUNSELLOR_LAST_NAME,\n        COUNSELLOR_EMAIL,\n        COUNSELLOR_PHONE_NUMBER,\n        COUNSELLOR_COUNTRY_CODE,\n        COUNSELLOR_COUNSELLING_SUBJECT_CODE,\n        COUNSELLOR_COUNSELLING_LEVEL_CODE,\n        COUNSELLOR_HOURLY_RATE,\n        COUNSELLOR_QUALIFICATION_CODE,\n        COUNSELLOR_INSTITUTION_TYPE_CODE\n\n    } = formData;\n    console.log(formData)\n\n    const { handleSubmit, register, errors } = useForm({\n\n    });\n\n    const onSubmit = (data) => {\n        navigation.next()\n    };\n\n    const Counsellor_Countries = [\n        {\n            title: \"What kind of traveler are you?\",\n            name: [\n                \"Adrenaline Addicts\", \"Culture Lovers\", \"Aquatic adventures\", \"Beach enthusiasts\"\n            ],\n            code: [0, 1, 2, 3]\n        }\n    ]\n\n    const Counsellor_Subject = [\n        {\n            title: \"Choose subject?\",\n            name: [\n                \"Adrenaline Addicts\", \"Culture Lovers\", \"Aquatic adventures\", \"Beach enthusiasts\"\n            ],\n            code: [0, 1, 2, 3]\n        }\n    ]\n\n    const Counselling_Level = [\n        {\n            title: \"Choose Level?\",\n            name: [\n                \"Adrenaline Addicts\", \"Culture Lovers\", \"Aquatic adventures\", \"Beach enthusiasts\"\n            ],\n            code: [0, 1, 2, 3]\n        }\n    ]\n\n    const Counsellor_Qualification = [\n        {\n            title: \"Choose Qualification\",\n            name: [\n                \"Adrenaline Addicts\", \"Culture Lovers\", \"Aquatic adventures\", \"Beach enthusiasts\"\n            ],\n            code: [0, 1, 2, 3]\n        }\n    ]\n\n    const Counsellor_Institute = [\n        {\n            title: \"Choose Institute\",\n            name: [\n                \"Adrenaline Addicts\", \"Culture Lovers\", \"Aquatic adventures\", \"Beach enthusiasts\"\n            ],\n            code: [0, 1, 2, 3]\n        }\n    ]\n\n\n    return (\n\n        <Grid>\n            <Grid.Column>\n                <Form size='small' onSubmit={handleSubmit(onSubmit)}>\n                    <center>\n\n                        <Button\n                            color='teal'\n                            fluid\n                            size='large'\n                            type=\"submit\"\n                        >\n                            Next\n                        </Button>\n                        <Segment style={{ width: '80%', textAlign: 'left' }}>\n                            <Form.Group widths='equal'>\n                                <Form.Field className=\"CustomForm\">\n                                    <Icon name=\"user\" className=\"customIconsAlign\" />\n                                    &nbsp;&nbsp;&nbsp;\n                                    <input\n                                        placeholder='First Name'\n                                        type='text'\n                                        name=\"COUNSELLOR_FIRST_NAME\"\n                                        onChange={setForm}\n                                        value={COUNSELLOR_FIRST_NAME}\n                                        ref={register({ validate: COUNSELLOR_FIRST_NAME => COUNSELLOR_FIRST_NAME && COUNSELLOR_FIRST_NAME.length > 3 })}\n                                    />\n                                    {errors.COUNSELLOR_FIRST_NAME && <p className=\"customError\">Username invalid</p>}\n                                </Form.Field>\n\n\n                                <Form.Field className=\"CustomForm\">\n                                    <Icon name=\"user\" className=\"customIconsAlign\" />\n                                &nbsp;&nbsp;&nbsp;\n                                    <input\n                                        fluid\n                                        icon='user'\n                                        iconPosition='left'\n                                        placeholder='Last Name'\n                                        type='text'\n                                        name=\"COUNSELLOR_LAST_NAME\"\n                                        onChange={setForm}\n                                        value={COUNSELLOR_LAST_NAME}\n                                        ref={register({ validate: COUNSELLOR_LAST_NAME => COUNSELLOR_LAST_NAME && COUNSELLOR_LAST_NAME.length > 3 })}\n                                    />\n                                    {errors.COUNSELLOR_LAST_NAME && <p className=\"customError\">Username invalid</p>}\n                                </Form.Field>\n\n\n                            </Form.Group>\n\n                            <Form.Group widths='equal'>\n                                <Form.Field className=\"CustomForm\">\n                                    <Icon name=\"user\" className=\"customIconsAlign\" />\n                                &nbsp;&nbsp;&nbsp;\n                                    <input\n                                        fluid\n                                        icon='user'\n                                        iconPosition='left'\n                                        placeholder='Email'\n                                        type='text'\n                                        name=\"COUNSELLOR_EMAIL\"\n                                        onChange={setForm}\n                                        value={COUNSELLOR_EMAIL}\n                                        ref={register({ validate: COUNSELLOR_EMAIL => COUNSELLOR_EMAIL && COUNSELLOR_EMAIL.length > 3 })}\n                                    />\n                                    {errors.COUNSELLOR_EMAIL && <p className=\"customError\">Username invalid</p>}\n                                </Form.Field>\n\n                                <Form.Field className=\"CustomForm\">\n                                    <Icon name=\"user\" className=\"customIconsAlign\" />\n                                    &nbsp;&nbsp;&nbsp;\n                                    <input\n                                        fluid\n                                        placeholder='Phone number'\n                                        type='text'\n                                        name=\"COUNSELLOR_PHONE_NUMBER\"\n                                        onChange={setForm}\n                                        value={COUNSELLOR_PHONE_NUMBER}\n                                        ref={register({ validate: COUNSELLOR_PHONE_NUMBER => COUNSELLOR_PHONE_NUMBER && COUNSELLOR_PHONE_NUMBER.length > 3 })}\n                                    />\n                                    {errors.COUNSELLOR_PHONE_NUMBER && <p className=\"customError\">Username invalid</p>}\n                                </Form.Field>\n\n                            </Form.Group>\n\n\n                            <Form.Group widths='equal'>\n                                <Form.Field className=\"CustomForm\">\n                                    <Icon name=\"user\" className=\"customIconsAlign\" />\n                                     &nbsp;&nbsp;&nbsp;\n                                    <select name=\"COUNSELLOR_COUNTRY_CODE\" value={COUNSELLOR_COUNTRY_CODE} onChange={setForm} placeholder=\"Select country of origin\">\n                                        {\n                                            Counsellor_Countries.map((countries) => {\n                                                return (\n                                                    <React.Fragment>\n                                                        <option disabled selected hidden>{countries.title}</option>\n                                                        {\n                                                            countries.name.map((name, code) => <option value={code}>{name}</option>)\n                                                        }\n                                                    </React.Fragment>\n                                                )\n\n                                            })\n                                        }\n                                    </select>\n                                </Form.Field>\n\n                            </Form.Group>\n\n                            <Form.Group widths='equal'>\n                                <Form.Field className=\"CustomForm\">\n                                <Icon name=\"user\" className=\"customIconsAlign\" />\n                                &nbsp;&nbsp;&nbsp;\n                                    <select name=\"COUNSELLOR_COUNSELLING_SUBJECT_CODE\" value={COUNSELLOR_COUNSELLING_SUBJECT_CODE} onChange={setForm} placeholder=\"choose subject\">\n                                        {\n                                            Counsellor_Subject.map((subjects) => {\n                                                return (\n                                                    <React.Fragment>\n                                                        <option disabled selected hidden>{subjects.title}</option>\n                                                        {\n                                                            subjects.name.map((name, code) => <option value={code}>{name}</option>)\n                                                        }\n                                                    </React.Fragment>\n                                                )\n\n                                            })\n                                        }\n                                    </select>\n                                </Form.Field>\n\n                                <Form.Field className=\"CustomForm\">\n                                    <Icon name=\"user\" className=\"customIconsAlign\" />\n                                &nbsp;&nbsp;&nbsp;\n                                    <select name=\"COUNSELLOR_COUNSELLING_LEVEL_CODE\" value={COUNSELLOR_COUNSELLING_LEVEL_CODE} onChange={setForm} placeholder=\"choose subject\">\n                                        {\n                                            Counselling_Level.map((level) => {\n                                                return (\n                                                    <React.Fragment>\n                                                        <option disabled selected hidden>{level.title}</option>\n                                                        {\n                                                            level.name.map((name, code) => <option value={code}>{name}</option>)\n                                                        }\n                                                    </React.Fragment>\n                                                )\n\n                                            })\n                                        }\n                                    </select>\n                                </Form.Field>\n                                <Form.Field className=\"CustomForm\">\n                                    <Icon name=\"user\" className=\"customIconsAlign\" />\n                                    &nbsp;&nbsp;&nbsp;\n                                    <input\n                                        fluid\n                                        icon='user'\n                                        iconPosition='left'\n                                        placeholder='Enter your details'\n                                        type='text'\n                                        name=\"COUNSELLOR_HOURLY_RATE\"\n                                        onChange={setForm}\n                                        value={COUNSELLOR_HOURLY_RATE}\n                                        ref={register}\n                                    />\n                                    <label>$</label>\n                                    {/* {errors.COUNSELLOR_HOURLY_RATE && <p className=\"customError\">Username invalid</p>} */}\n                                </Form.Field>\n\n                            </Form.Group>\n\n                            <Form.Group widths='equal'>\n                                <Form.Field className=\"CustomForm\">\n                                    <Icon name=\"user\" className=\"customIconsAlign\" />\n                                    &nbsp;&nbsp;&nbsp;\n                                    <select name=\"COUNSELLOR_QUALIFICATION_CODE\" value={COUNSELLOR_QUALIFICATION_CODE} onChange={setForm} placeholder=\"choose subject\">\n                                        {\n                                            Counsellor_Qualification.map((qualification) => {\n                                                return (\n                                                    <React.Fragment>\n                                                        <option disabled selected hidden>{qualification.title}</option>\n                                                        {\n                                                            qualification.name.map((name, code) => <option value={code}>{name}</option>)\n                                                        }\n                                                    </React.Fragment>\n                                                )\n\n                                            })\n                                        }\n                                    </select>\n                                </Form.Field>\n\n\n                                <Form.Field className=\"CustomForm\">\n                                    <Icon name=\"user\" className=\"customIconsAlign\" />\n                                    &nbsp;&nbsp;&nbsp;\n                                    <select name=\"COUNSELLOR_INSTITUTION_TYPE_CODE\" value={COUNSELLOR_INSTITUTION_TYPE_CODE} onChange={setForm} placeholder=\"choose subject\">\n                                        {\n                                            Counsellor_Institute.map((Institute) => {\n                                                return (\n                                                    <React.Fragment>\n                                                        <option disabled selected hidden>{Institute.title}</option>\n                                                        {\n                                                            Institute.name.map((name, code) => <option value={code}>{name}</option>)\n                                                        }\n                                                    </React.Fragment>\n                                                )\n\n                                            })\n                                        }\n                                    </select>\n                                </Form.Field>\n\n\n                            </Form.Group>\n\n\n\n                        </Segment>\n                    </center>\n                </Form>\n\n            </Grid.Column>\n        </Grid >\n    )\n\n}\n\nexport default Registration_First;"]},"metadata":{},"sourceType":"module"}