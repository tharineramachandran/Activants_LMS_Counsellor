{"ast":null,"code":"var _jsxFileName = \"E:\\\\ShawMovieWebsite\\\\shaw-website\\\\src\\\\Store\\\\_Redux.js\";\nimport React, { useReducer, useEffect } from 'react';\nimport axios from 'axios';\nconst initStateListOfMovies = {\n  toggleMovieList: true,\n  MovieList: [],\n  toggleModal: false,\n  movieOverview: {}\n};\n\nconst reducer = (prevState, action) => {\n  switch (action.type) {\n    case \"success\":\n      return { ...prevState,\n        listOfMovies: action.payload\n      };\n  }\n};\n\nconst _Redux = () => {\n  const [newState, dispatch] = useReducer(reducer, initStateListOfMovies);\n  useEffect(() => {\n    axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=224ce27b38a3805ecf6f6c36eb3ba9d0&with_genres=28`).then(x => {\n      dispatch({\n        type: 'success',\n        payload: x.results\n      });\n    }).catch(err => {});\n  }, []);\n\n  onSearchHandler = event => {\n    this.setState({\n      toggleMovieList: false\n    });\n    const userInput = event.target.value;\n    this.makeAipCall(userInput);\n\n    if (userInput === \"\") {\n      this.setState({\n        toggleMovieList: true\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: onSearchHandler,\n    type: \"text\",\n    placeholder: \"Title, genres, people\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default _Redux;","map":{"version":3,"sources":["E:/ShawMovieWebsite/shaw-website/src/Store/_Redux.js"],"names":["React","useReducer","useEffect","axios","initStateListOfMovies","toggleMovieList","MovieList","toggleModal","movieOverview","reducer","prevState","action","type","listOfMovies","payload","_Redux","newState","dispatch","get","then","x","results","catch","err","onSearchHandler","event","setState","userInput","target","value","makeAipCall"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,MAAMC,qBAAqB,GAAG;AAC1BC,EAAAA,eAAe,EAAE,IADS;AAE1BC,EAAAA,SAAS,EAAE,EAFe;AAG1BC,EAAAA,WAAW,EAAE,KAHa;AAI1BC,EAAAA,aAAa,EAAE;AAJW,CAA9B;;AAOA,MAAMC,OAAO,GAAG,CAACC,SAAD,EAAYC,MAAZ,KAAuB;AAEnC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,SAAL;AACI,aACI,EACI,GAAGF,SADP;AAEIG,QAAAA,YAAY,EAAEF,MAAM,CAACG;AAFzB,OADJ;AAFR;AASH,CAXD;;AAcA,MAAMC,MAAM,GAAG,MAAM;AAEjB,QAAM,CAACC,QAAD,EAAWC,QAAX,IAAuBhB,UAAU,CAACQ,OAAD,EAAUL,qBAAV,CAAvC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,KAAK,CAACe,GAAN,CAAW,qGAAX,EACKC,IADL,CACUC,CAAC,IAAI;AACPH,MAAAA,QAAQ,CAAC;AAAEL,QAAAA,IAAI,EAAE,SAAR;AAAmBE,QAAAA,OAAO,EAAEM,CAAC,CAACC;AAA9B,OAAD,CAAR;AACH,KAHL,EAIKC,KAJL,CAIWC,GAAG,IAAI,CAEb,CANL;AAOH,GARQ,EAQN,EARM,CAAT;;AAUAC,EAAAA,eAAe,GAAIC,KAAD,IAAW;AACzB,SAAKC,QAAL,CAAc;AACVrB,MAAAA,eAAe,EAAE;AADP,KAAd;AAIA,UAAMsB,SAAS,GAAGF,KAAK,CAACG,MAAN,CAAaC,KAA/B;AACA,SAAKC,WAAL,CAAiBH,SAAjB;;AAEA,QAAIA,SAAS,KAAK,EAAlB,EAAsB;AAClB,WAAKD,QAAL,CAAc;AACVrB,QAAAA,eAAe,EAAE;AADP,OAAd;AAGH;AACJ,GAbD;;AAgBA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,QAAQ,EAAEmB,eADd;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,WAAW,EAAC,uBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAQH,CAtCD;;AAwCA,eAAeT,MAAf","sourcesContent":["import React, { useReducer, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nconst initStateListOfMovies = {\r\n    toggleMovieList: true,\r\n    MovieList: [],\r\n    toggleModal: false,\r\n    movieOverview: {},\r\n}\r\n\r\nconst reducer = (prevState, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"success\":\r\n            return (\r\n                {\r\n                    ...prevState,\r\n                    listOfMovies: action.payload\r\n                }\r\n            )\r\n    }\r\n}\r\n\r\n\r\nconst _Redux = () => {\r\n\r\n    const [newState, dispatch] = useReducer(reducer, initStateListOfMovies)\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=224ce27b38a3805ecf6f6c36eb3ba9d0&with_genres=28`)\r\n            .then(x => {\r\n                dispatch({ type: 'success', payload: x.results })\r\n            })\r\n            .catch(err => {\r\n\r\n            })\r\n    }, []);\r\n\r\n    onSearchHandler = (event) => {\r\n        this.setState({\r\n            toggleMovieList: false\r\n        });\r\n\r\n        const userInput = event.target.value;\r\n        this.makeAipCall(userInput);\r\n\r\n        if (userInput === \"\") {\r\n            this.setState({\r\n                toggleMovieList: true\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                onChange={onSearchHandler}\r\n                type=\"text\"\r\n                placeholder=\"Title, genres, people\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default _Redux;"]},"metadata":{},"sourceType":"module"}