{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\ACTIVANTS\\\\Desktop\\\\LMS Councellor\\\\Activants_LMS_Counsellor\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ACTIVANTS\\\\Desktop\\\\LMS Councellor\\\\Activants_LMS_Counsellor\\\\ATIVANTS_LMS_COUNSELLOR\\\\src\\\\SecondaryComponents\\\\Desktop\\\\RegistrationComponents\\\\_Registration_First.js\";\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Header, Icon, Form, Image, Message, Segment, Grid, Modal, Search, Button, Dimmer, Loader, Label, Container, Breadcrumb, Divider, Popup, List, Dropdown, Select } from 'semantic-ui-react';\nimport { useForm } from \"react-hook-form\";\n\nvar Registration_First = function Registration_First(_ref) {\n  var formData = _ref.formData,\n      setForm = _ref.setForm,\n      navigation = _ref.navigation,\n      step = _ref.step;\n  var COUNSELLOR_FIRST_NAME = formData.COUNSELLOR_FIRST_NAME,\n      COUNSELLOR_LAST_NAME = formData.COUNSELLOR_LAST_NAME,\n      COUNSELLOR_EMAIL = formData.COUNSELLOR_EMAIL,\n      COUNSELLOR_PHONE_NUMBER = formData.COUNSELLOR_PHONE_NUMBER,\n      COUNSELLOR_COUNTRY_CODE = formData.COUNSELLOR_COUNTRY_CODE,\n      COUNSELLOR_COUNSELLING_SUBJECT_CODE = formData.COUNSELLOR_COUNSELLING_SUBJECT_CODE,\n      COUNSELLOR_COUNSELLING_LEVEL_CODE = formData.COUNSELLOR_COUNSELLING_LEVEL_CODE,\n      COUNSELLOR_HOURLY_RATE = formData.COUNSELLOR_HOURLY_RATE,\n      COUNSELLOR_QUALIFICATION_CODE = formData.COUNSELLOR_QUALIFICATION_CODE,\n      COUNSELLOR_INSTITUTION_TYPE_CODE = formData.COUNSELLOR_INSTITUTION_TYPE_CODE;\n  console.log(formData);\n\n  var _useState = useState('circle'),\n      _useState2 = _slicedToArray(_useState, 2),\n      icon_name = _useState2[0],\n      setIcon_name = _useState2[1];\n\n  var _useForm = useForm({}),\n      handleSubmit = _useForm.handleSubmit,\n      register = _useForm.register,\n      errors = _useForm.errors;\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      coun = _useState4[0],\n      setCount = _useState4[1];\n\n  useEffect(function () {\n    setCount([{\n      id: '01',\n      name: 'Afghanistan'\n    }, {\n      id: '02',\n      name: 'Ã…land Islands'\n    }, {\n      id: '03',\n      name: 'Albania'\n    }]);\n  }, []);\n  var countriesList = countries.length > 0 && coun.map(function (item, i) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: i,\n      value: item.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, item.name);\n  }, _this);\n\n  var onSubmit = function onSubmit(data) {\n    navigation.next();\n  };\n\n  var Counsellor_Countries = [{\n    title: \"What kind of traveler are you?\",\n    name: [\"Adrenaline Addicts\", \"Culture Lovers\", \"Aquatic adventures\", \"Beach enthusiasts\"],\n    code: [0, 1, 2, 3]\n  }];\n  var Counsellor_Subject = [{\n    title: \"Choose subject?\",\n    name: [\"Adrenaline Addicts\", \"Culture Lovers\", \"Aquatic adventures\", \"Beach enthusiasts\"],\n    code: [0, 1, 2, 3]\n  }];\n  var Counselling_Level = [{\n    title: \"Choose Level?\",\n    name: [\"Adrenaline Addicts\", \"Culture Lovers\", \"Aquatic adventures\", \"Beach enthusiasts\"],\n    code: [0, 1, 2, 3]\n  }];\n  var Counsellor_Qualification = [{\n    title: \"Choose Qualification\",\n    name: [\"Adrenaline Addicts\", \"Culture Lovers\", \"Aquatic adventures\", \"Beach enthusiasts\"],\n    code: [0, 1, 2, 3]\n  }];\n  var Counsellor_Institute = [{\n    title: \"Choose Institute\",\n    name: [\"Adrenaline Addicts\", \"Culture Lovers\", \"Aquatic adventures\", \"Beach enthusiasts\"],\n    code: [0, 1, 2, 3]\n  }]; //   .console.log(step);\n\n  console.log(navigation);\n  useEffect(function () {\n    if (step.id == 'Counsellor_details') setIcon_name('circle');else setIcon_name('circle outline');\n  }, []);\n  return /*#__PURE__*/React.createElement(Grid, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit(onSubmit),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"center\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Segment, {\n    inverted: true,\n    color: \"teal\",\n    size: \"mini\",\n    style: {\n      width: '85%',\n      textAlign: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      float: 'left',\n      marginLeft: '2rem'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 37\n    }\n  }, \"Registation for Counsellor\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      float: 'right',\n      padding: '1rem;'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    as: \"a\",\n    onClick: function onClick() {\n      return navigation.next();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"hand point right outline\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 41\n    }\n  }), \"Next\"))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    style: {\n      padding: '1rem 2rem',\n      textAlign: 'left'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: 'transparent'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    horizontal: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(List.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    as: \"a\",\n    circular: true,\n    onClick: function onClick() {\n      return navigation.go(0);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: icon_name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 49\n    }\n  }), \"Personal Details\\xA0\"), /*#__PURE__*/React.createElement(Label, {\n    as: \"a\",\n    className: \"activeBreadCrumb\",\n    circular: true,\n    onClick: function onClick() {\n      return navigation.go(1);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"circle outline\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 49\n    }\n  }), \"Profile Photo\\xA0\"), /*#__PURE__*/React.createElement(Label, {\n    as: \"a\",\n    className: \"activeBreadCrumb\",\n    circular: true,\n    onClick: function onClick() {\n      return navigation.go(2);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"circle outline\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 49\n    }\n  }), \"Description\\xA0\"), /*#__PURE__*/React.createElement(Label, {\n    as: \"a\",\n    className: \"activeBreadCrumb\",\n    circular: true,\n    onClick: function onClick() {\n      return navigation.go(3);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"circle outline\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 49\n    }\n  }), \"Video\\xA0\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"center\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Segment, {\n    style: {\n      width: '95%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"center\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      textAlign: 'left'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    as: \"a\",\n    color: \"blue\",\n    ribbon: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 49\n    }\n  }, \"Personal Details\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"user\",\n    className: \"customIconsAlign\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 53\n    }\n  }), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"First Name\",\n    type: \"text\",\n    name: \"COUNSELLOR_FIRST_NAME\",\n    onChange: setForm,\n    value: COUNSELLOR_FIRST_NAME // ref={register({ validate: COUNSELLOR_FIRST_NAME => COUNSELLOR_FIRST_NAME && COUNSELLOR_FIRST_NAME.length > 3 })}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 37\n    }\n  }), errors.COUNSELLOR_FIRST_NAME && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"customError\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 86\n    }\n  }, \"Username invalid\")), /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"user\",\n    className: \"customIconsAlign\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 53\n    }\n  }), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n    fluid: true,\n    icon: \"user\",\n    iconPosition: \"left\",\n    placeholder: \"Last Name\",\n    type: \"text\",\n    name: \"COUNSELLOR_LAST_NAME\",\n    onChange: setForm,\n    value: COUNSELLOR_LAST_NAME // ref={register({ validate: COUNSELLOR_LAST_NAME => COUNSELLOR_LAST_NAME && COUNSELLOR_LAST_NAME.length > 3 })}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 37\n    }\n  }), errors.COUNSELLOR_LAST_NAME && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"customError\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 85\n    }\n  }, \"Username invalid\"))), /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"user\",\n    className: \"customIconsAlign\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 53\n    }\n  }), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n    fluid: true,\n    icon: \"user\",\n    iconPosition: \"left\",\n    placeholder: \"Email\",\n    type: \"text\",\n    name: \"COUNSELLOR_EMAIL\",\n    onChange: setForm,\n    value: COUNSELLOR_EMAIL // ref={register({ validate: COUNSELLOR_EMAIL => COUNSELLOR_EMAIL && COUNSELLOR_EMAIL.length > 3 })}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 37\n    }\n  }), errors.COUNSELLOR_EMAIL && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"customError\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 81\n    }\n  }, \"Username invalid\")), /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"user\",\n    className: \"customIconsAlign\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 53\n    }\n  }), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n    fluid: true,\n    placeholder: \"Phone number\",\n    type: \"text\",\n    name: \"COUNSELLOR_PHONE_NUMBER\",\n    onChange: setForm,\n    value: COUNSELLOR_PHONE_NUMBER // ref={register({ validate: COUNSELLOR_PHONE_NUMBER => COUNSELLOR_PHONE_NUMBER && COUNSELLOR_PHONE_NUMBER.length > 3 })}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 57\n    }\n  }), errors.COUNSELLOR_PHONE_NUMBER && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"customError\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 88\n    }\n  }, \"Username invalid\"))), /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"user\",\n    className: \"customIconsAlign\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 53\n    }\n  }), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"select\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 57\n    }\n  }, countriesList), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"COUNSELLOR_COUNTRY_CODE\",\n    value: COUNSELLOR_COUNTRY_CODE,\n    onChange: setForm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 53\n    }\n  }, Counsellor_Countries.map(function (countries) {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      selected: true,\n      disabled: true,\n      vaue: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 73\n      }\n    }, countries.title), countries.name.map(function (name, code) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: code,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 112\n        }\n      }, name);\n    }));\n  }))), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 49\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      textAlign: 'left'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    as: \"a\",\n    color: \"blue\",\n    ribbon: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 49\n    }\n  }, \"Educational details\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"user\",\n    className: \"customIconsAlign\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 53\n    }\n  }), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"select\", {\n    name: \"COUNSELLOR_QUALIFICATION_CODE\",\n    value: COUNSELLOR_QUALIFICATION_CODE,\n    onChange: setForm,\n    placeholder: \"choose subject\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 37\n    }\n  }, Counsellor_Qualification.map(function (qualification) {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      disabled: true,\n      selected: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 73\n      }\n    }, qualification.title), qualification.name.map(function (name, code) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: code,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 116\n        }\n      }, name);\n    }));\n  }))), /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"user\",\n    className: \"customIconsAlign\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 53\n    }\n  }), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"select\", {\n    name: \"COUNSELLOR_INSTITUTION_TYPE_CODE\",\n    value: COUNSELLOR_INSTITUTION_TYPE_CODE,\n    onChange: setForm,\n    placeholder: \"choose subject\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 37\n    }\n  }, Counsellor_Institute.map(function (Institute) {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      disabled: true,\n      selected: true,\n      hidden: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 73\n      }\n    }, Institute.title), Institute.name.map(function (name, code) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: code,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 112\n        }\n      }, name);\n    }));\n  })))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      textAlign: 'left'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    as: \"a\",\n    color: \"blue\",\n    ribbon: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 49\n    }\n  }, \"Counselling details\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"user\",\n    className: \"customIconsAlign\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 53\n    }\n  }), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"select\", {\n    name: \"COUNSELLOR_COUNSELLING_SUBJECT_CODE\",\n    value: COUNSELLOR_COUNSELLING_SUBJECT_CODE,\n    onChange: setForm,\n    placeholder: \"choose subject\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 37\n    }\n  }, Counsellor_Subject.map(function (subjects) {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      disabled: true,\n      selected: true,\n      hidden: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 73\n      }\n    }, subjects.title), subjects.name.map(function (name, code) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: code,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 111\n        }\n      }, name);\n    }));\n  }))), /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"user\",\n    className: \"customIconsAlign\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 53\n    }\n  }), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"select\", {\n    name: \"COUNSELLOR_COUNSELLING_LEVEL_CODE\",\n    value: COUNSELLOR_COUNSELLING_LEVEL_CODE,\n    onChange: setForm,\n    placeholder: \"choose subject\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 37\n    }\n  }, Counselling_Level.map(function (level) {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      disabled: true,\n      selected: true,\n      hidden: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 73\n      }\n    }, level.title), level.name.map(function (name, code) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: code,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 108\n        }\n      }, name);\n    }));\n  }))), /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"user\",\n    className: \"customIconsAlign\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 53\n    }\n  }), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n    fluid: true,\n    icon: \"user\",\n    iconPosition: \"left\",\n    placeholder: \"Enter your details\",\n    type: \"text\",\n    name: \"COUNSELLOR_HOURLY_RATE\",\n    onChange: setForm,\n    value: COUNSELLOR_HOURLY_RATE,\n    ref: register,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 37\n    }\n  }), \"$\")))))))))));\n};\n\nexport default Registration_First;","map":{"version":3,"sources":["C:/Users/ACTIVANTS/Desktop/LMS Councellor/Activants_LMS_Counsellor/ATIVANTS_LMS_COUNSELLOR/src/SecondaryComponents/Desktop/RegistrationComponents/_Registration_First.js"],"names":["React","useState","useEffect","useContext","Header","Icon","Form","Image","Message","Segment","Grid","Modal","Search","Button","Dimmer","Loader","Label","Container","Breadcrumb","Divider","Popup","List","Dropdown","Select","useForm","Registration_First","formData","setForm","navigation","step","COUNSELLOR_FIRST_NAME","COUNSELLOR_LAST_NAME","COUNSELLOR_EMAIL","COUNSELLOR_PHONE_NUMBER","COUNSELLOR_COUNTRY_CODE","COUNSELLOR_COUNSELLING_SUBJECT_CODE","COUNSELLOR_COUNSELLING_LEVEL_CODE","COUNSELLOR_HOURLY_RATE","COUNSELLOR_QUALIFICATION_CODE","COUNSELLOR_INSTITUTION_TYPE_CODE","console","log","icon_name","setIcon_name","handleSubmit","register","errors","coun","setCount","id","name","countriesList","countries","length","map","item","i","onSubmit","data","next","Counsellor_Countries","title","code","Counsellor_Subject","Counselling_Level","Counsellor_Qualification","Counsellor_Institute","width","textAlign","float","marginLeft","padding","backgroundColor","go","qualification","Institute","subjects","level"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport {\n    Header, Icon, Form, Image, Message,\n    Segment, Grid, Modal, Search, Button, Dimmer, Loader, Label, Container, Breadcrumb, Divider, Popup, List, Dropdown, Select\n} from 'semantic-ui-react';\nimport { useForm } from \"react-hook-form\";\n\nconst Registration_First = ({ formData, setForm, navigation, step }) => {\n\n    const {\n        //FIRST REGISTRATION PAGE\n        COUNSELLOR_FIRST_NAME,\n        COUNSELLOR_LAST_NAME,\n        COUNSELLOR_EMAIL,\n        COUNSELLOR_PHONE_NUMBER,\n        COUNSELLOR_COUNTRY_CODE,\n        COUNSELLOR_COUNSELLING_SUBJECT_CODE,\n        COUNSELLOR_COUNSELLING_LEVEL_CODE,\n        COUNSELLOR_HOURLY_RATE,\n        COUNSELLOR_QUALIFICATION_CODE,\n        COUNSELLOR_INSTITUTION_TYPE_CODE\n\n    } = formData;\n    console.log(formData)\n\n    const [icon_name, setIcon_name] = useState('circle');\n\n    const { handleSubmit, register, errors } = useForm({});\n    const [coun, setCount] = useState(null);\n\n    useEffect(() => {\n\n        setCount([\n            { id: '01', name: 'Afghanistan' },\n            { id: '02', name: 'Ã…land Islands' },\n            { id: '03', name: 'Albania' }\n        ])\n\n    }, [])\n\n\n    let countriesList = countries.length > 0\n        && coun.map((item, i) => {\n            return (\n                <option key={i} value={item.id}>{item.name}</option>\n            )\n        }, this);\n\n\n    const onSubmit = (data) => {\n        navigation.next()\n    };\n\n    const Counsellor_Countries = [\n        {\n            title: \"What kind of traveler are you?\",\n            name: [\n                \"Adrenaline Addicts\", \"Culture Lovers\", \"Aquatic adventures\", \"Beach enthusiasts\"\n            ],\n            code: [0, 1, 2, 3]\n        }\n    ]\n\n    const Counsellor_Subject = [\n        {\n            title: \"Choose subject?\",\n            name: [\n                \"Adrenaline Addicts\", \"Culture Lovers\", \"Aquatic adventures\", \"Beach enthusiasts\"\n            ],\n            code: [0, 1, 2, 3]\n        }\n    ]\n\n    const Counselling_Level = [\n        {\n            title: \"Choose Level?\",\n            name: [\n                \"Adrenaline Addicts\", \"Culture Lovers\", \"Aquatic adventures\", \"Beach enthusiasts\"\n            ],\n            code: [0, 1, 2, 3]\n        }\n    ]\n\n    const Counsellor_Qualification = [\n        {\n            title: \"Choose Qualification\",\n            name: [\n                \"Adrenaline Addicts\", \"Culture Lovers\", \"Aquatic adventures\", \"Beach enthusiasts\"\n            ],\n            code: [0, 1, 2, 3]\n        }\n    ]\n\n    const Counsellor_Institute = [\n        {\n            title: \"Choose Institute\",\n            name: [\n                \"Adrenaline Addicts\", \"Culture Lovers\", \"Aquatic adventures\", \"Beach enthusiasts\"\n            ],\n            code: [0, 1, 2, 3]\n        }\n    ]\n\n    //   .console.log(step);\n    console.log(navigation);\n\n    useEffect(() => {\n        if (step.id == 'Counsellor_details')\n            setIcon_name('circle')\n        else\n            setIcon_name('circle outline')\n    }, [])\n\n    return (\n\n        <Grid>\n            <Grid.Column>\n                <Form onSubmit={handleSubmit(onSubmit)}>\n                    <center>\n                        <Segment inverted color='teal' size=\"mini\" style={{ width: '85%', textAlign: 'center' }}>\n                            <Container>\n                                <div style={{ float: 'left', marginLeft: '2rem' }}>\n                                    <h4>Registation for Counsellor</h4>\n                                </div>\n                                <div style={{ float: 'right', padding: '1rem;' }}>\n                                    <Label as='a' onClick={() => navigation.next()}>\n                                        <Icon name='hand point right outline' />\n                                  Next\n                                </Label>\n                                </div>\n                            </Container>\n                            <br />\n                            <Container style={{ padding: '1rem 2rem', textAlign: 'left' }}>\n                                <div style={{ backgroundColor: 'transparent' }}>\n                                    <List horizontal >\n                                        <List.Item>\n                                            <Label as='a' circular onClick={() => navigation.go(0)}>\n                                                <Icon name={icon_name} />\n                                                Personal Details&nbsp;\n                                            </Label>\n                                            <Label as='a' className=\"activeBreadCrumb\" circular onClick={() => navigation.go(1)}>\n                                                <Icon name=\"circle outline\" />\n                                                Profile Photo&nbsp;\n                                            </Label>\n                                            <Label as='a' className=\"activeBreadCrumb\" circular onClick={() => navigation.go(2)}>\n                                                <Icon name=\"circle outline\" />\n                                                Description&nbsp;\n                                            </Label>\n                                            <Label as='a' className=\"activeBreadCrumb\" circular onClick={() => navigation.go(3)}>\n                                                <Icon name=\"circle outline\" />\n                                                Video&nbsp;\n                                            </Label>\n                                        </List.Item>\n                                    </List>\n                                </div>\n                            </Container>\n                            <div style={{ width: '100%' }}>\n                                <center>\n                                    <Segment style={{ width: '95%' }}>\n                                        <center>\n                                            <div style={{ width: '100%', textAlign: 'left' }}>\n                                                <Label as='a' color='blue' ribbon>\n                                                    Personal Details\n                                        </Label>\n                                            </div>\n                                            <br />\n                                            <Form.Group widths='equal'>\n\n                                                <Form.Field className=\"CustomForm\">\n                                                    <Icon name=\"user\" className=\"customIconsAlign\" />\n                                    &nbsp;&nbsp;&nbsp;\n                                    <input\n                                                        placeholder='First Name'\n                                                        type='text'\n                                                        name=\"COUNSELLOR_FIRST_NAME\"\n                                                        onChange={setForm}\n                                                        value={COUNSELLOR_FIRST_NAME}\n                                                    // ref={register({ validate: COUNSELLOR_FIRST_NAME => COUNSELLOR_FIRST_NAME && COUNSELLOR_FIRST_NAME.length > 3 })}\n                                                    />\n                                                    {errors.COUNSELLOR_FIRST_NAME && <p className=\"customError\">Username invalid</p>}\n                                                </Form.Field>\n\n\n                                                <Form.Field className=\"CustomForm\">\n                                                    <Icon name=\"user\" className=\"customIconsAlign\" />\n                                &nbsp;&nbsp;&nbsp;\n                                    <input\n                                                        fluid\n                                                        icon='user'\n                                                        iconPosition='left'\n                                                        placeholder='Last Name'\n                                                        type='text'\n                                                        name=\"COUNSELLOR_LAST_NAME\"\n                                                        onChange={setForm}\n                                                        value={COUNSELLOR_LAST_NAME}\n                                                    // ref={register({ validate: COUNSELLOR_LAST_NAME => COUNSELLOR_LAST_NAME && COUNSELLOR_LAST_NAME.length > 3 })}\n                                                    />\n                                                    {errors.COUNSELLOR_LAST_NAME && <p className=\"customError\">Username invalid</p>}\n                                                </Form.Field>\n\n\n                                            </Form.Group>\n\n                                            <Form.Group widths='equal'>\n                                                <Form.Field className=\"CustomForm\">\n                                                    <Icon name=\"user\" className=\"customIconsAlign\" />\n                                &nbsp;&nbsp;&nbsp;\n                                    <input\n                                                        fluid\n                                                        icon='user'\n                                                        iconPosition='left'\n                                                        placeholder='Email'\n                                                        type='text'\n                                                        name=\"COUNSELLOR_EMAIL\"\n                                                        onChange={setForm}\n                                                        value={COUNSELLOR_EMAIL}\n                                                    // ref={register({ validate: COUNSELLOR_EMAIL => COUNSELLOR_EMAIL && COUNSELLOR_EMAIL.length > 3 })}\n                                                    />\n                                                    {errors.COUNSELLOR_EMAIL && <p className=\"customError\">Username invalid</p>}\n                                                </Form.Field>\n\n                                                <Form.Field className=\"CustomForm\">\n                                                    <Icon name=\"user\" className=\"customIconsAlign\" />\n                                                        &nbsp;&nbsp;&nbsp;\n                                                        <input\n                                                        fluid\n                                                        placeholder='Phone number'\n                                                        type='text'\n                                                        name=\"COUNSELLOR_PHONE_NUMBER\"\n                                                        onChange={setForm}\n                                                        value={COUNSELLOR_PHONE_NUMBER}\n                                                    // ref={register({ validate: COUNSELLOR_PHONE_NUMBER => COUNSELLOR_PHONE_NUMBER && COUNSELLOR_PHONE_NUMBER.length > 3 })}\n                                                    />\n                                                    {errors.COUNSELLOR_PHONE_NUMBER && <p className=\"customError\">Username invalid</p>}\n                                                </Form.Field>\n\n                                            </Form.Group>\n\n\n                                            <Form.Group widths='equal'>\n                                                <Form.Field className=\"CustomForm\">\n                                                    <Icon name=\"user\" className=\"customIconsAlign\" />\n                                                        &nbsp;&nbsp;&nbsp;\n                                                        <select>\n                                                        {countriesList}\n                                                    </select>\n\n                                                    <select name=\"COUNSELLOR_COUNTRY_CODE\" value={COUNSELLOR_COUNTRY_CODE} onChange={setForm}>\n                                                        {\n                                                            Counsellor_Countries.map((countries) => {\n                                                                return (\n                                                                    <React.Fragment>\n                                                                        <option selected disabled vaue=\"\">{countries.title}</option>\n                                                                        {\n                                                                            countries.name.map((name, code) => <option value={code}>{name}</option>)\n                                                                        }\n                                                                    </React.Fragment>\n                                                                )\n\n                                                            })\n                                                        }\n                                                    </select>\n                                                </Form.Field>\n\n                                                <Form.Field>\n                                                </Form.Field>\n\n                                            </Form.Group>\n                                            <br />\n                                            <div style={{ width: '100%', textAlign: 'left' }}>\n                                                <Label as='a' color='blue' ribbon>\n                                                    Educational details\n                                   </Label>\n                                            </div>\n                                            <br />\n                                            <Form.Group widths='equal'>\n                                                <Form.Field className=\"CustomForm\">\n                                                    <Icon name=\"user\" className=\"customIconsAlign\" />\n                                    &nbsp;&nbsp;&nbsp;\n                                    <select name=\"COUNSELLOR_QUALIFICATION_CODE\" value={COUNSELLOR_QUALIFICATION_CODE} onChange={setForm} placeholder=\"choose subject\">\n                                                        {\n                                                            Counsellor_Qualification.map((qualification) => {\n                                                                return (\n                                                                    <React.Fragment>\n                                                                        <option disabled selected>{qualification.title}</option>\n                                                                        {\n                                                                            qualification.name.map((name, code) => <option value={code}>{name}</option>)\n                                                                        }\n                                                                    </React.Fragment>\n                                                                )\n\n                                                            })\n                                                        }\n                                                    </select>\n                                                </Form.Field>\n\n\n\n\n                                                <Form.Field className=\"CustomForm\">\n                                                    <Icon name=\"user\" className=\"customIconsAlign\" />\n                                    &nbsp;&nbsp;&nbsp;\n                                    <select name=\"COUNSELLOR_INSTITUTION_TYPE_CODE\" value={COUNSELLOR_INSTITUTION_TYPE_CODE} onChange={setForm} placeholder=\"choose subject\">\n                                                        {\n                                                            Counsellor_Institute.map((Institute) => {\n                                                                return (\n                                                                    <React.Fragment>\n                                                                        <option disabled selected hidden>{Institute.title}</option>\n                                                                        {\n                                                                            Institute.name.map((name, code) => <option value={code}>{name}</option>)\n                                                                        }\n                                                                    </React.Fragment>\n                                                                )\n\n                                                            })\n                                                        }\n                                                    </select>\n                                                </Form.Field>\n\n\n                                            </Form.Group>\n                                            <br />\n                                            <div style={{ width: '100%', textAlign: 'left' }}>\n                                                <Label as='a' color='blue' ribbon>\n                                                    Counselling details\n                            </Label>\n                                            </div>\n                                            <br />\n                                            <Form.Group widths='equal'>\n                                                <Form.Field className=\"CustomForm\">\n                                                    <Icon name=\"user\" className=\"customIconsAlign\" />\n                                &nbsp;&nbsp;&nbsp;\n                                    <select name=\"COUNSELLOR_COUNSELLING_SUBJECT_CODE\" value={COUNSELLOR_COUNSELLING_SUBJECT_CODE} onChange={setForm} placeholder=\"choose subject\">\n                                                        {\n                                                            Counsellor_Subject.map((subjects) => {\n                                                                return (\n                                                                    <React.Fragment>\n                                                                        <option disabled selected hidden>{subjects.title}</option>\n                                                                        {\n                                                                            subjects.name.map((name, code) => <option value={code}>{name}</option>)\n                                                                        }\n                                                                    </React.Fragment>\n                                                                )\n\n                                                            })\n                                                        }\n                                                    </select>\n                                                </Form.Field>\n\n                                                <Form.Field className=\"CustomForm\">\n                                                    <Icon name=\"user\" className=\"customIconsAlign\" />\n                                &nbsp;&nbsp;&nbsp;\n                                    <select name=\"COUNSELLOR_COUNSELLING_LEVEL_CODE\" value={COUNSELLOR_COUNSELLING_LEVEL_CODE} onChange={setForm} placeholder=\"choose subject\">\n                                                        {\n                                                            Counselling_Level.map((level) => {\n                                                                return (\n                                                                    <React.Fragment>\n                                                                        <option disabled selected hidden>{level.title}</option>\n                                                                        {\n                                                                            level.name.map((name, code) => <option value={code}>{name}</option>)\n                                                                        }\n                                                                    </React.Fragment>\n                                                                )\n\n                                                            })\n                                                        }\n                                                    </select>\n                                                </Form.Field>\n                                                <Form.Field className=\"CustomForm\">\n                                                    <Icon name=\"user\" className=\"customIconsAlign\" />\n                                    &nbsp;&nbsp;&nbsp;\n                                    <input\n                                                        fluid\n                                                        icon='user'\n                                                        iconPosition='left'\n                                                        placeholder='Enter your details'\n                                                        type='text'\n                                                        name=\"COUNSELLOR_HOURLY_RATE\"\n                                                        onChange={setForm}\n                                                        value={COUNSELLOR_HOURLY_RATE}\n                                                        ref={register}\n                                                    />\n                                    $\n                                    {/* {errors.COUNSELLOR_HOURLY_RATE && <p className=\"customError\">Username invalid</p>} */}\n                                                </Form.Field>\n\n                                            </Form.Group>\n                                        </center>\n                                    </Segment>\n                                </center>\n                            </div>\n                        </Segment>\n                    </center>\n                </Form>\n\n            </Grid.Column>\n        </Grid >\n    )\n\n}\n\nexport default Registration_First;"]},"metadata":{},"sourceType":"module"}