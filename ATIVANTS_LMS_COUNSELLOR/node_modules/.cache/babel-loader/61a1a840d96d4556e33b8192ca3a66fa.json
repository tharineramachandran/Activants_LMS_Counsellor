{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\ACTIVANTS\\\\Desktop\\\\LMS Councellor\\\\Activants_LMS_Counsellor\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ACTIVANTS\\\\Desktop\\\\LMS Councellor\\\\Activants_LMS_Counsellor\\\\ATIVANTS_LMS_COUNSELLOR\\\\src\\\\SecondaryComponents\\\\Desktop\\\\RegistrationComponents\\\\_Registration_Second.js\";\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Header, Icon, Form, Image, Message, Segment, Grid, Modal, Search, Button, Dimmer, Loader, Divider, List, Dropdown, Select } from 'semantic-ui-react';\nimport { useForm } from \"react-hook-form\";\nimport Dropzone from 'react-dropzone';\nimport { useStep } from 'react-hooks-helper';\nimport ReactCrop from 'react-image-crop';\nimport demoPicture from '../../../Static/Images/demoPicture.png';\n\nvar Registration_Second = function Registration_Second(_ref) {\n  var formData = _ref.formData,\n      setForm = _ref.setForm,\n      navigation = _ref.navigation;\n  var COUNSELLOR_PHOTO = formData.COUNSELLOR_PHOTO;\n\n  var _useState = useState(demoPicture),\n      _useState2 = _slicedToArray(_useState, 2),\n      imgSrcdemo = _useState2[0],\n      setImgSrcDemo = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      imgSrc = _useState4[0],\n      setImgSrc = _useState4[1];\n\n  var _useState5 = useState({\n    aspectRatio: 1 / 1\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      crop = _useState6[0],\n      setCrop = _useState6[1];\n\n  var ImageMaxSize = 1000000000; //bytes\n\n  var acceptedFileTypes = 'image/x-png, image/png, image/jpg, image/jpeg, image/gif';\n  var acceptedFileTypesArray = acceptedFileTypes.split(\",\").map(function (item) {\n    return item.trim();\n  });\n\n  var _useForm = useForm({}),\n      handleSubmit = _useForm.handleSubmit,\n      register = _useForm.register,\n      errors = _useForm.errors;\n\n  var onSubmit = function onSubmit(data) {\n    navigation.next();\n  };\n\n  var verifyFile = function verifyFile(files) {\n    if (files && files.length > 0) {\n      var currentFile = files[0];\n      var currentFileType = currentFile.type;\n      var currentFileSize = currentFile.size;\n\n      if (currentFileSize > ImageMaxSize) {\n        alert(\"this file is not allowed. \" + currentFileSize + \" bytes is too large\");\n        return false;\n      }\n\n      if (!acceptedFileTypesArray.includes(currentFileType)) {\n        alert(\"This file is not allowed. Only images are allowed\");\n        return false;\n      }\n\n      return true;\n    }\n  };\n\n  var handleOnDrop = function handleOnDrop(files, rejectedFiles) {\n    if (rejectedFiles && rejectedFiles.length > 0) {\n      console.log(rejectedFiles);\n      verifyFile(rejectedFiles);\n    }\n\n    if (files && files.length > 0) {\n      var isVerified = verifyFile(files);\n\n      if (isVerified) {\n        console.log(\"accepted\");\n        var currentFile = files[0];\n        var reader = new FileReader();\n        reader.addEventListener(\"load\", function () {\n          console.log(reader.result);\n          setImgSrc(reader.result);\n        }, false);\n        reader.readAsDataURL(currentFile);\n      }\n    }\n  };\n\n  console.log(imgSrc);\n  return /*#__PURE__*/React.createElement(Grid, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    size: \"small\",\n    onSubmit: handleSubmit(onSubmit),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"center\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Segment, {\n    stacked: true,\n    style: {\n      width: '90%',\n      textAlign: 'left'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 29\n    }\n  }, \"Profile Photo\"), /*#__PURE__*/React.createElement(List, {\n    divided: true,\n    relaxed: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(List.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 41\n    }\n  }), \" Upload Photo\"), \" \\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(Button, {\n    color: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 41\n    }\n  }), \" Take Photo\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    columns: 2,\n    padded: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 37\n    }\n  }, imgSrc ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: imgSrc,\n    size: \"medium\",\n    alt: \"preview of uploaded image\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 49\n    }\n  })) : /*#__PURE__*/React.createElement(Dropzone, {\n    onDrop: handleOnDrop,\n    multiple: false,\n    accept: acceptedFileTypes,\n    maxSize: ImageMaxSize,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 45\n    }\n  }, function (_ref2) {\n    var getRootProps = _ref2.getRootProps;\n    return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps(), {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 57\n      }\n    }, \"Drop files here, or click to upload files\"));\n  })), /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 37\n    }\n  }, \"sdfdsfds\"))), /*#__PURE__*/React.createElement(Button, {\n    color: \"teal\",\n    fluid: true,\n    size: \"large\",\n    onClick: function onClick() {\n      return navigation.previous();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 29\n    }\n  }, \"Back\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"teal\",\n    fluid: true,\n    size: \"large\",\n    type: \"submit\",\n    onClick: function onClick() {\n      return navigation.next();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 29\n    }\n  }, \"Next\"))))));\n};\n\nexport default Registration_Second;","map":{"version":3,"sources":["C:/Users/ACTIVANTS/Desktop/LMS Councellor/Activants_LMS_Counsellor/ATIVANTS_LMS_COUNSELLOR/src/SecondaryComponents/Desktop/RegistrationComponents/_Registration_Second.js"],"names":["React","useState","useEffect","useContext","Header","Icon","Form","Image","Message","Segment","Grid","Modal","Search","Button","Dimmer","Loader","Divider","List","Dropdown","Select","useForm","Dropzone","useStep","ReactCrop","demoPicture","Registration_Second","formData","setForm","navigation","COUNSELLOR_PHOTO","imgSrcdemo","setImgSrcDemo","imgSrc","setImgSrc","aspectRatio","crop","setCrop","ImageMaxSize","acceptedFileTypes","acceptedFileTypesArray","split","map","item","trim","handleSubmit","register","errors","onSubmit","data","next","verifyFile","files","length","currentFile","currentFileType","type","currentFileSize","size","alert","includes","handleOnDrop","rejectedFiles","console","log","isVerified","reader","FileReader","addEventListener","result","readAsDataURL","width","textAlign","getRootProps","previous"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport {\r\n    Header, Icon, Form, Image, Message,\r\n    Segment, Grid, Modal, Search, Button, Dimmer, Loader, Divider, List, Dropdown, Select\r\n} from 'semantic-ui-react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport Dropzone from 'react-dropzone';\r\nimport { useStep } from 'react-hooks-helper';\r\nimport ReactCrop from 'react-image-crop';\r\nimport demoPicture from '../../../Static/Images/demoPicture.png'\r\n\r\nconst Registration_Second = ({ formData, setForm, navigation }) => {\r\n\r\n    const { COUNSELLOR_PHOTO } = formData;\r\n\r\n    const [imgSrcdemo, setImgSrcDemo] = useState(demoPicture);\r\n    const [imgSrc, setImgSrc] = useState('');\r\n    const [crop, setCrop] = useState({ aspectRatio: 1 / 1 });\r\n\r\n    const ImageMaxSize = 1000000000; //bytes\r\n    const acceptedFileTypes = 'image/x-png, image/png, image/jpg, image/jpeg, image/gif'\r\n    const acceptedFileTypesArray = acceptedFileTypes.split(\",\").map((item) => {\r\n        return item.trim()\r\n    })\r\n\r\n    const { handleSubmit, register, errors } = useForm({\r\n\r\n    });\r\n\r\n    const onSubmit = (data) => {\r\n        navigation.next()\r\n    };\r\n\r\n\r\n\r\n    const verifyFile = (files) => {\r\n        if (files && files.length > 0) {\r\n            const currentFile = files[0]\r\n            const currentFileType = currentFile.type\r\n            const currentFileSize = currentFile.size\r\n            if (currentFileSize > ImageMaxSize) {\r\n                alert(\"this file is not allowed. \" + currentFileSize + \" bytes is too large\");\r\n                return false;\r\n            }\r\n            if (!acceptedFileTypesArray.includes(currentFileType)) {\r\n                alert(\"This file is not allowed. Only images are allowed\")\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n\r\n    const handleOnDrop = (files, rejectedFiles) => {\r\n        if (rejectedFiles && rejectedFiles.length > 0) {\r\n            console.log(rejectedFiles)\r\n            verifyFile(rejectedFiles)\r\n        }\r\n\r\n        if (files && files.length > 0) {\r\n            const isVerified = verifyFile(files)\r\n            if (isVerified) {\r\n                console.log(\"accepted\")\r\n                const currentFile = files[0]\r\n                const reader = new FileReader()\r\n                reader.addEventListener(\"load\", () => {\r\n                    console.log(reader.result)\r\n                    setImgSrc(reader.result)\r\n                }, false)\r\n\r\n                reader.readAsDataURL(currentFile)\r\n            }\r\n        }\r\n    }\r\n\r\n    console.log(imgSrc);\r\n    return (\r\n\r\n        <Grid>\r\n            <Grid.Column>\r\n                <Form size='small' onSubmit={handleSubmit(onSubmit)}>\r\n                    <center>\r\n                        <Segment stacked style={{ width: '90%', textAlign: 'left' }}>\r\n                            <h1>Profile Photo</h1>\r\n                            <List divided relaxed>\r\n                                <List.Item>\r\n                                    <Button color=''>\r\n                                        <Icon name='' /> Upload Photo\r\n                                    </Button> &nbsp;&nbsp;&nbsp;\r\n\r\n                                        <Button color=''>\r\n                                        <Icon name='' /> Take Photo\r\n                                    </Button>\r\n                                </List.Item>\r\n                            </List>\r\n\r\n                            <div>\r\n                                <Grid columns={2} padded>\r\n                                    <Grid.Column>\r\n                                        {imgSrc ?\r\n                                            <div>\r\n                                                {/* {imgSrc} */}\r\n                                                <Image src={imgSrc} size=\"medium\" alt=\"preview of uploaded image\" />\r\n\r\n                                                {/* <ReactCrop src={imgSrc} crop={crop.aspectRatio} /> */}\r\n                                            </div>\r\n                                            :\r\n                                            <Dropzone onDrop={handleOnDrop} multiple={false} accept={acceptedFileTypes} maxSize={ImageMaxSize}>\r\n                                                {({ getRootProps }) => (\r\n                                                    <div {...getRootProps()}>\r\n                                                        <p>Drop files here, or click to upload files</p>\r\n                                                    </div>\r\n                                                )}\r\n                                            </Dropzone>\r\n                                        }\r\n                                    </Grid.Column>\r\n                                    <Grid.Column>\r\n                                        sdfdsfds\r\n                                    </Grid.Column>\r\n                                </Grid>\r\n                            </div>\r\n\r\n\r\n                            <Button\r\n                                color='teal'\r\n                                fluid\r\n                                size='large'\r\n                                onClick={() => navigation.previous()}\r\n                            >\r\n                                Back\r\n                            </Button>\r\n\r\n                            <Button\r\n                                color='teal'\r\n                                fluid\r\n                                size='large'\r\n                                type=\"submit\"\r\n                                onClick={() => navigation.next()}\r\n                            >\r\n                                Next\r\n                    </Button>\r\n\r\n                        </Segment>\r\n                    </center>\r\n                </Form>\r\n\r\n            </Grid.Column>\r\n        </Grid >\r\n    )\r\n\r\n}\r\n\r\nexport default Registration_Second;"]},"metadata":{},"sourceType":"module"}