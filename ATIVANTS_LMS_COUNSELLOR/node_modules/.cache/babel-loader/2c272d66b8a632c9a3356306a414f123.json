{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ACTIVANTS\\\\Desktop\\\\LMS Councellor\\\\ATIVANTS_LMS_COUNSELLOR\\\\src\\\\SecondaryComponents\\\\Desktop\\\\_NavigationItems.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Grid, Icon } from 'semantic-ui-react';\nimport _HeaderMovieCast from './_HeaderMovieCast';\nimport _HeaderMovieDetails from '../Desktop/_HeaderMovieDetails';\nimport axios from 'axios';\nimport _Header from '../Desktop/_Header';\n\nvar _NavigationItems = function _NavigationItems() {\n  var selectMovieHandler = function selectMovieHandler(movie) {\n    var url;\n    var urlVideo;\n    var details = {};\n\n    if (movie.media_type === \"movie\") {\n      var movieId = movie.id;\n      url = \"https://api.themoviedb.org/3/movie/\".concat(movieId, \"?api_key=028e8ea4ca7d9164d085c9238979098b&append_to_response=videos\");\n    } else if (movie.media_type === \"tv\") {\n      var tvId = movie.id;\n      url = \"https://api.themoviedb.org/3/tv/\".concat(tvId, \"?api_key=028e8ea4ca7d9164d085c9238979098b&append_to_response=videos\");\n    }\n\n    axios.get(url).then(function (res) {\n      var movieImageUrl = \"https://image.tmdb.org/t/p/w500\" + res.data.backdrop_path;\n      var moviePoster = \"https://image.tmdb.org/t/p/w500\" + res.data.poster_path;\n      var desc = res.data.overview;\n      geTYouTube(res.data.id);\n      setImage({\n        bgImg: movieImageUrl,\n        post: moviePoster,\n        desc: res.data.overview,\n        name: res.data.title || res.data.name,\n        relDate: res.data.release_date,\n        rate: res.data.vote_average * 10\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(_Header, {\n    movie: Image,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    style: {\n      display: ''\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \"\\xA0\"), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(_HeaderMovieDetails, {\n    url: YouTube,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    icon: true,\n    labelPosition: \"left\",\n    style: {\n      backgroundColor: \"transparent\",\n      pointerEvents: 'none',\n      border: '1px solid grey'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"calendar check\",\n    color: \"green\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, Image.relDate)), /*#__PURE__*/React.createElement(Button, {\n    icon: true,\n    labelPosition: \"left\",\n    style: {\n      backgroundColor: \"transparent\",\n      pointerEvents: 'none',\n      border: '1px solid grey'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"star\",\n    color: \"green\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }, Image.rate, \"%\")))), /*#__PURE__*/React.createElement(Grid, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, \"\\xA0\"), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 14,\n    textAlign: \"center\",\n    className: \"scrollmenuImageBigger\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, movieList), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, \"\\xA0\")));\n};\n\nexport default _NavigationItems;","map":{"version":3,"sources":["C:/Users/ACTIVANTS/Desktop/LMS Councellor/ATIVANTS_LMS_COUNSELLOR/src/SecondaryComponents/Desktop/_NavigationItems.js"],"names":["React","useState","useEffect","Button","Grid","Icon","_HeaderMovieCast","_HeaderMovieDetails","axios","_Header","_NavigationItems","selectMovieHandler","movie","url","urlVideo","details","media_type","movieId","id","tvId","get","then","res","movieImageUrl","data","backdrop_path","moviePoster","poster_path","desc","overview","geTYouTube","setImage","bgImg","post","name","title","relDate","release_date","rate","vote_average","catch","error","console","log","Image","display","YouTube","backgroundColor","pointerEvents","border","color","movieList"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Grid, Icon } from 'semantic-ui-react'\n\nimport _HeaderMovieCast from './_HeaderMovieCast';\nimport _HeaderMovieDetails from '../Desktop/_HeaderMovieDetails';\nimport axios from 'axios';\nimport _Header from '../Desktop/_Header'\n\n\nconst _NavigationItems = () => {\n\n    const selectMovieHandler = movie => {\n        let url;\n        let urlVideo;\n        let details = {};\n        if (movie.media_type === \"movie\") {\n            const movieId = movie.id;\n            url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=028e8ea4ca7d9164d085c9238979098b&append_to_response=videos`;\n\n        } else if (movie.media_type === \"tv\") {\n            const tvId = movie.id\n            url = `https://api.themoviedb.org/3/tv/${tvId}?api_key=028e8ea4ca7d9164d085c9238979098b&append_to_response=videos`;\n        }\n\n        axios.get(url)\n            .then(res => {\n                let movieImageUrl = \"https://image.tmdb.org/t/p/w500\" + res.data.backdrop_path;\n                let moviePoster = \"https://image.tmdb.org/t/p/w500\" + res.data.poster_path;\n                let desc = res.data.overview;\n                geTYouTube(res.data.id);\n                setImage({\n                    bgImg: movieImageUrl, post: moviePoster, desc: res.data.overview,\n                    name: res.data.title || res.data.name,\n                    relDate: res.data.release_date,\n                    rate: res.data.vote_average * 10\n                });\n\n            }).catch(error => {\n                console.log(error);\n            });\n    }\n\n    return (\n        <React.Fragment>\n            <Grid>\n                <_Header movie={Image} />\n            </Grid>\n            <Grid style={{ display: '' }}>\n                <Grid.Column width={4}>\n                    &nbsp;\n                    </Grid.Column>\n                <Grid.Column width={12}>\n                    <_HeaderMovieDetails url={YouTube} />\n                    <Button icon labelPosition='left' style={{ backgroundColor: `transparent`, pointerEvents: 'none', border: '1px solid grey' }}>\n                        <Icon name=\"calendar check\" color='green' />\n                        <span style={{ color: 'white' }}>{Image.relDate}\n                        </span>\n                    </Button>\n                    <Button icon labelPosition='left' style={{ backgroundColor: `transparent`, pointerEvents: 'none', border: '1px solid grey' }}>\n                        <Icon name='star' color='green' />\n                        <span style={{ color: 'white' }}>{Image.rate}%\n                    </span>\n                    </Button>\n                </Grid.Column>\n            </Grid>\n            \n            <Grid>\n                <Grid.Column width={1}>&nbsp;</Grid.Column>\n                <Grid.Column width={14} textAlign=\"center\" className=\"scrollmenuImageBigger\">\n                    {movieList}\n                </Grid.Column>\n                <Grid.Column width={1}>&nbsp;</Grid.Column>\n            </Grid>\n        </React.Fragment>\n    )\n}\n\nexport default _NavigationItems;"]},"metadata":{},"sourceType":"module"}