{"ast":null,"code":"import _slicedToArray from\"E:\\\\CircuitBreakerShow\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useReducer,useEffect,useState}from'react';import _AxiosInstance from'../Store/_AxiosInstance';import DisplayAllGeresOfMovies from'../Containers/DisplayAllGeresOfMovies';import{Grid,Image}from'semantic-ui-react';import SearchGenresResult from'../Containers/SearchGenresResult';var initState={movieList:[]};var reducder=function reducder(prevState,action){switch(action.type){case'FETCH_TRENDING':return{movieList:action.payload.data.results};case'FETCH_HORROW':return{movieList:action.payload.data.results};default:return prevState;}};var _Redux=function _Redux(props){var _useReducer=useReducer(reducder,initState),_useReducer2=_slicedToArray(_useReducer,2),stateTrending=_useReducer2[0],dispatchTrending=_useReducer2[1];var _useState=useState({type:'',id:'',name:''}),_useState2=_slicedToArray(_useState,2),seletedGenreMovieId=_useState2[0],setSeletedGenreMovieId=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),movie=_useState4[0],setMovie=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),value=_useState6[0],setValue=_useState6[1];useEffect(function(){_AxiosInstance.get(props.url).then(function(data){dispatchTrending({type:props.FetchType,payload:data});}).catch(function(err){});},[]);var selectedMovie=function selectedMovie(movie){setSeletedGenreMovieId({id:movie.id,type:movie.media_type,name:movie.title||movie.name});setValue(true);};useEffect(function(){var movies=stateTrending.movieList.map(function(movie){var movieImageUrl='https://image.tmdb.org/t/p/w500/'+movie.id;if(movieImageUrl!==null){var movieComponent=/*#__PURE__*/React.createElement(DisplayAllGeresOfMovies,{movieDetials:function movieDetials(){return selectedMovie(movie);},key:movie.id,movie:movie});return movieComponent;}});setMovie(movies);},[stateTrending.movieList]);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Grid,{padded:true},/*#__PURE__*/React.createElement(Grid.Row,null,/*#__PURE__*/React.createElement(Grid.Column,{className:\"scrollmenuImageBigger\"},movie))),value?/*#__PURE__*/React.createElement(SearchGenresResult,{Ids:seletedGenreMovieId}):\" \");};export default _Redux;","map":{"version":3,"sources":["E:/CircuitBreakerShow/src/Store/_Redux.js"],"names":["React","useReducer","useEffect","useState","_AxiosInstance","DisplayAllGeresOfMovies","Grid","Image","SearchGenresResult","initState","movieList","reducder","prevState","action","type","payload","data","results","_Redux","props","stateTrending","dispatchTrending","id","name","seletedGenreMovieId","setSeletedGenreMovieId","movie","setMovie","value","setValue","get","url","then","FetchType","catch","err","selectedMovie","media_type","title","movies","map","movieImageUrl","movieComponent"],"mappings":"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","sourcesContent":["import React, { useReducer, useEffect, useState } from 'react';\r\nimport _AxiosInstance from '../Store/_AxiosInstance'\r\nimport DisplayAllGeresOfMovies from '../Containers/DisplayAllGeresOfMovies';\r\nimport { Grid, Image } from 'semantic-ui-react'\r\nimport SearchGenresResult from '../Containers/SearchGenresResult'\r\n\r\n\r\n\r\nconst initState = {\r\n    movieList: [],\r\n}\r\n\r\nconst reducder = (prevState, action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_TRENDING':\r\n            return {\r\n                movieList: action.payload.data.results,\r\n            };\r\n\r\n        case 'FETCH_HORROW':\r\n            return {\r\n                movieList: action.payload.data.results,\r\n            };\r\n\r\n        default:\r\n            return prevState;\r\n    }\r\n}\r\n\r\nconst _Redux = props => {\r\n\r\n    const [stateTrending, dispatchTrending] = useReducer(reducder, initState);\r\n    const [seletedGenreMovieId, setSeletedGenreMovieId] = useState({type:'',id:'', name:''});\r\n    const [movie, setMovie] = useState([]);\r\n    const [value, setValue] = useState(false);\r\n\r\n    useEffect(() => {\r\n        _AxiosInstance.get(props.url)\r\n            .then(data => {\r\n                dispatchTrending({ type: props.FetchType, payload: data })\r\n            })\r\n            .catch(err => {\r\n\r\n            })\r\n    }, []);\r\n\r\n    const selectedMovie = movie => {\r\n        setSeletedGenreMovieId({\r\n            id : movie.id,\r\n            type : movie.media_type,\r\n            name : movie.title || movie.name\r\n        });\r\n        setValue(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        let movies = stateTrending.movieList.map((movie) => {\r\n            let movieImageUrl = 'https://image.tmdb.org/t/p/w500/' + movie.id;\r\n\r\n            if (movieImageUrl !== null) {\r\n                const movieComponent = (\r\n                    <DisplayAllGeresOfMovies\r\n                        movieDetials={() => selectedMovie(movie)}\r\n                        key={movie.id}\r\n                        movie={movie}\r\n                    />\r\n                );\r\n                return movieComponent;\r\n            }\r\n        });\r\n\r\n        setMovie(movies);\r\n\r\n    }, [stateTrending.movieList]);\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <Grid padded>\r\n                <Grid.Row>\r\n                    <Grid.Column className=\"scrollmenuImageBigger\">\r\n                        {movie}\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>\r\n            {value ? <SearchGenresResult Ids={seletedGenreMovieId} /> : \" \"}\r\n        </React.Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default _Redux;"]},"metadata":{},"sourceType":"module"}