{"ast":null,"code":"var _jsxFileName = \"E:\\\\ShawMovieWebsite\\\\shaw-website\\\\src\\\\Store\\\\_Redux.js\";\nimport React, { useReducer, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport _Movie from './_Movie'; // const initStateListOfMovies = {\n//     toggleMovieList: true,\n//     MovieList: [],\n//     toggleModal: false,\n//     movieOverview: {},\n// }\n// const reducer = (prevState, action) => {\n//     switch (action.type) {\n//         case \"success\":\n//             return (\n//                 {\n//                     ...prevState,\n//                     listOfMovies: action.payload\n//                 }\n//             )\n//     }\n// }\n\nconst _Redux = () => {\n  const [toggleMovieList, setToggleMovieList] = useState(true);\n  const [MovieList, setMovieList] = useState([]);\n  const [toggleModal, setToggleModal] = useState(false);\n  const [movieOverview, setMovieOverview] = useState({});\n\n  const makeAipCall = searchItem => {\n    const url = `https://api.themoviedb.org/3/search/multi?api_key=9ea839ec7891591994ec0f540b4b199f&language=en-US&include_adult=false&query=${searchItem}`;\n    axios.get(url).then(res => {\n      const results = res.data.results;\n      let movieImageUrl;\n      let movieRows = [];\n      results.forEach(movie => {\n        if (movie.poster_path !== null && movie.media_type !== \"person\") {\n          movieImageUrl = \"https://image.tmdb.org/t/p/w500\" + movie.poster_path;\n          const movieComponent = /*#__PURE__*/React.createElement(_Movie, {\n            movieDetails: () => selectMovieHandler(movie),\n            key: movie.id,\n            movieImage: movieImageUrl,\n            movie: movie,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 48\n            }\n          });\n          movieRows.push(movieComponent);\n        }\n      });\n      setMovieList(movieRows);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const onSearchHandler = event => {\n    setToggleMovieList(false);\n    const userInput = event.target.value;\n    makeAipCall(userInput);\n    if (userInput === \"\") setToggleMovieList(true);\n  };\n\n  const selectMovieHandler = movie => {\n    setToggleModal(true);\n    let url;\n\n    if (movie.media_type === \"movie\") {\n      const movieId = movie.id;\n      url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=224ce27b38a3805ecf6f6c36eb3ba9d0`;\n    } else if (movie.media_type === \"tv\") {\n      const tvId = movie.id;\n      url = `https://api.themoviedb.org/3/tv/${tvId}?api_key=224ce27b38a3805ecf6f6c36eb3ba9d0`;\n    }\n\n    axios.get(url).then(res => {\n      const movieData = res.data;\n      setMovieOverview(movieData);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const closeModal = () => {\n    setToggleModal(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: onSearchHandler,\n    type: \"text\",\n    placeholder: \"Title, genres, people\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default _Redux;","map":{"version":3,"sources":["E:/ShawMovieWebsite/shaw-website/src/Store/_Redux.js"],"names":["React","useReducer","useEffect","useState","axios","_Movie","_Redux","toggleMovieList","setToggleMovieList","MovieList","setMovieList","toggleModal","setToggleModal","movieOverview","setMovieOverview","makeAipCall","searchItem","url","get","then","res","results","data","movieImageUrl","movieRows","forEach","movie","poster_path","media_type","movieComponent","selectMovieHandler","id","push","catch","error","console","log","onSearchHandler","event","userInput","target","value","movieId","tvId","movieData","closeModal"],"mappings":"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","sourcesContent":["import React, { useReducer, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport _Movie from './_Movie';\r\n\r\n\r\n// const initStateListOfMovies = {\r\n//     toggleMovieList: true,\r\n//     MovieList: [],\r\n//     toggleModal: false,\r\n//     movieOverview: {},\r\n// }\r\n\r\n// const reducer = (prevState, action) => {\r\n\r\n//     switch (action.type) {\r\n//         case \"success\":\r\n//             return (\r\n//                 {\r\n//                     ...prevState,\r\n//                     listOfMovies: action.payload\r\n//                 }\r\n//             )\r\n//     }\r\n// }\r\n\r\n\r\nconst _Redux = () => {\r\n\r\n    const [toggleMovieList, setToggleMovieList] = useState(true);\r\n    const [MovieList, setMovieList] = useState([]);\r\n    const [toggleModal, setToggleModal] = useState(false);\r\n    const [movieOverview, setMovieOverview] = useState({});\r\n\r\n    const makeAipCall = (searchItem) => {\r\n        const url = `https://api.themoviedb.org/3/search/multi?api_key=9ea839ec7891591994ec0f540b4b199f&language=en-US&include_adult=false&query=${searchItem}`;\r\n\r\n        axios.get(url)\r\n            .then(res => {\r\n                const results = res.data.results;\r\n                let movieImageUrl;\r\n                let movieRows = [];\r\n\r\n                results.forEach((movie) => {\r\n                    if (movie.poster_path !== null && movie.media_type !== \"person\") {\r\n                        movieImageUrl = \"https://image.tmdb.org/t/p/w500\" + movie.poster_path;\r\n\r\n                        const movieComponent = <_Movie\r\n                            movieDetails={() => selectMovieHandler(movie)}\r\n                            key={movie.id}\r\n                            movieImage={movieImageUrl}\r\n                            movie={movie} />\r\n\r\n                        movieRows.push(movieComponent);\r\n                    }\r\n                })\r\n                setMovieList(movieRows);\r\n\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    const onSearchHandler = (event) => {\r\n        setToggleMovieList(false);\r\n\r\n        const userInput = event.target.value;\r\n        makeAipCall(userInput);\r\n\r\n        if (userInput === \"\")\r\n            setToggleMovieList(true)\r\n    }\r\n\r\n\r\n    const selectMovieHandler = (movie) => {\r\n        setToggleModal(true);\r\n    \r\n        let url;\r\n        if (movie.media_type === \"movie\") {\r\n          const movieId = movie.id;\r\n          url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=224ce27b38a3805ecf6f6c36eb3ba9d0`;\r\n    \r\n        } else if (movie.media_type === \"tv\") {\r\n          const tvId = movie.id\r\n          url = `https://api.themoviedb.org/3/tv/${tvId}?api_key=224ce27b38a3805ecf6f6c36eb3ba9d0`;\r\n        }\r\n    \r\n        axios.get(url)\r\n          .then(res => {\r\n            const movieData = res.data;\r\n    \r\n            setMovieOverview(movieData);\r\n          }).catch(error => {\r\n            console.log(error);\r\n          });\r\n    \r\n      }\r\n    \r\n      const closeModal = () => {\r\n        setToggleModal(false);\r\n      }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                onChange={onSearchHandler}\r\n                type=\"text\"\r\n                placeholder=\"Title, genres, people\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default _Redux;"]},"metadata":{},"sourceType":"module"}