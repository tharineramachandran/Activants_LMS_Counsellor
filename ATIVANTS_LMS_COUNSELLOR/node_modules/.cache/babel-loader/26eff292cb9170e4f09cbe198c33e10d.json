{"ast":null,"code":"var _jsxFileName = \"E:\\\\ShawMovieWebsite\\\\shaw-website\\\\src\\\\MainComponents\\\\DesktopComponent.js\";\nimport GetWidthOfComponent from './GetWidthOfComponent';\nimport React, { Component, useState, useEffect } from 'react';\nimport _Header from '../SecondaryComponents/Desktop/_Header';\nimport _NavigationItems from '../SecondaryComponents/Desktop/_NavigationItems';\nimport _MovieGenres from '../SecondaryComponents/Desktop/_MovieGenres';\nimport axios from 'axios';\nimport _Movie from '../../src/Store/_Movie';\nimport { Responsive, Grid } from 'semantic-ui-react';\nimport _BrowseCategories from '../SecondaryComponents/Desktop/_BrowseCategories';\nimport _MovieGenresList from '../SecondaryComponents/Desktop/_MovieGenresList';\n\nconst DesktopComponent = ({\n  children\n}) => {\n  const [input, setInput] = useState('');\n  const [movieList, setMovieList] = useState([]);\n  const [movieOverview, setMovieOverview] = useState({});\n\n  const onSearchHandler = e => {\n    setInput(e.target.value);\n    console.log(input);\n  };\n\n  useEffect(() => {\n    const url = `https://api.themoviedb.org/3/search/multi?api_key=9ea839ec7891591994ec0f540b4b199f&language=en-US&include_adult=false&query=${input}`;\n    axios.get(url).then(res => {\n      const results = res.data.results;\n      let movieImageUrl;\n      let movieRows = [];\n      results.forEach(movie => {\n        if (movie.poster_path !== null && movie.media_type !== \"person\") {\n          movieImageUrl = \"https://image.tmdb.org/t/p/w500\" + movie.poster_path;\n          const movieComponent = /*#__PURE__*/React.createElement(_Movie, {\n            movieDetails: () => selectMovieHandler(movie),\n            key: movie.id,\n            movieImage: movieImageUrl,\n            movie: movie,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 36\n            }\n          });\n          movieRows.push(movieComponent);\n        }\n      });\n      setMovieList(movieRows);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, [input]);\n\n  const selectMovieHandler = movie => {\n    let url;\n\n    if (movie.media_type === \"movie\") {\n      const movieId = movie.id;\n      url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=224ce27b38a3805ecf6f6c36eb3ba9d0`;\n    } else if (movie.media_type === \"tv\") {\n      const tvId = movie.id;\n      url = `https://api.themoviedb.org/3/tv/${tvId}?api_key=224ce27b38a3805ecf6f6c36eb3ba9d0`;\n    }\n\n    axios.get(url).then(res => {\n      const movieData = res.data;\n      setMovieOverview(movieData);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Responsive, {\n    getWidth: GetWidthOfComponent,\n    minWidth: Responsive.onlyTablet.minWidth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(_NavigationItems, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(_BrowseCategories, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(_MovieGenres, {\n    onSearchHandler: e => onSearchHandler(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }), input ? \"{movieList}\" : /*#__PURE__*/React.createElement(_MovieGenresList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 32\n    }\n  }), children);\n};\n\nexport default DesktopComponent;","map":{"version":3,"sources":["E:/ShawMovieWebsite/shaw-website/src/MainComponents/DesktopComponent.js"],"names":["GetWidthOfComponent","React","Component","useState","useEffect","_Header","_NavigationItems","_MovieGenres","axios","_Movie","Responsive","Grid","_BrowseCategories","_MovieGenresList","DesktopComponent","children","input","setInput","movieList","setMovieList","movieOverview","setMovieOverview","onSearchHandler","e","target","value","console","log","url","get","then","res","results","data","movieImageUrl","movieRows","forEach","movie","poster_path","media_type","movieComponent","selectMovieHandler","id","push","catch","error","movieId","tvId","movieData","onlyTablet","minWidth"],"mappings":"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","sourcesContent":["import GetWidthOfComponent from './GetWidthOfComponent'\r\nimport React, { Component, useState, useEffect } from 'react'\r\nimport _Header from '../SecondaryComponents/Desktop/_Header'\r\nimport _NavigationItems from '../SecondaryComponents/Desktop/_NavigationItems'\r\nimport _MovieGenres from '../SecondaryComponents/Desktop/_MovieGenres'\r\nimport axios from 'axios'\r\nimport _Movie from '../../src/Store/_Movie'\r\n\r\nimport { Responsive, Grid } from 'semantic-ui-react'\r\nimport _BrowseCategories from '../SecondaryComponents/Desktop/_BrowseCategories'\r\nimport _MovieGenresList from '../SecondaryComponents/Desktop/_MovieGenresList'\r\n\r\nconst DesktopComponent = ({ children }) => {\r\n\r\n  const [input, setInput] = useState('');\r\n  const [movieList, setMovieList] = useState([]);\r\n  const [movieOverview, setMovieOverview] = useState({});\r\n\r\n  const onSearchHandler = e => {\r\n    setInput(e.target.value);\r\n    console.log(input)\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    const url = `https://api.themoviedb.org/3/search/multi?api_key=9ea839ec7891591994ec0f540b4b199f&language=en-US&include_adult=false&query=${input}`;\r\n    axios.get(url)\r\n      .then(res => {\r\n        const results = res.data.results;\r\n        let movieImageUrl;\r\n        let movieRows = [];\r\n\r\n        results.forEach((movie) => {\r\n          if (movie.poster_path !== null && movie.media_type !== \"person\") {\r\n            movieImageUrl = \"https://image.tmdb.org/t/p/w500\" + movie.poster_path;\r\n\r\n            const movieComponent = <_Movie\r\n              movieDetails={() => selectMovieHandler(movie)}\r\n              key={movie.id}\r\n              movieImage={movieImageUrl}\r\n              movie={movie} />\r\n\r\n            movieRows.push(movieComponent);\r\n          }\r\n        })\r\n        setMovieList(movieRows);\r\n\r\n      }).catch(error => {\r\n        console.log(error);\r\n      });\r\n  }, [input]);\r\n\r\n\r\n  const selectMovieHandler = (movie) => {\r\n    let url;\r\n    if (movie.media_type === \"movie\") {\r\n        const movieId = movie.id;\r\n        url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=224ce27b38a3805ecf6f6c36eb3ba9d0`;\r\n\r\n    } else if (movie.media_type === \"tv\") {\r\n        const tvId = movie.id\r\n        url = `https://api.themoviedb.org/3/tv/${tvId}?api_key=224ce27b38a3805ecf6f6c36eb3ba9d0`;\r\n    }\r\n\r\n    axios.get(url)\r\n        .then(res => {\r\n            const movieData = res.data;\r\n            setMovieOverview(movieData);\r\n\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n}\r\n\r\n\r\n  return (\r\n    <Responsive getWidth={GetWidthOfComponent} minWidth={Responsive.onlyTablet.minWidth}>\r\n\r\n      <Grid>\r\n        <_Header />\r\n        <_NavigationItems />\r\n      </Grid>\r\n\r\n      <_BrowseCategories />\r\n\r\n      <_MovieGenres onSearchHandler={e => onSearchHandler(e)} />\r\n\r\n      {input ? \"{movieList}\" : <_MovieGenresList />}\r\n\r\n\r\n      {children}\r\n\r\n    </Responsive >\r\n  )\r\n}\r\n\r\nexport default DesktopComponent;"]},"metadata":{},"sourceType":"module"}