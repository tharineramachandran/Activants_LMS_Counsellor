{"ast":null,"code":"import _slicedToArray from\"E:\\\\CircuitBreakerShow\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useReducer,useEffect,useState}from'react';import _AxiosInstance from'../Store/_AxiosInstance';import DisplayAllGeresOfMovies from'../Containers/DisplayAllGeresOfMovies';import{Grid,Image}from'semantic-ui-react';import SearchGenresResult from'../Containers/SearchGenresResult';var initState={movieList:[],Itype:''};var reducder=function reducder(prevState,action){switch(action.type){case'FETCH_MOVIE':return{movieList:action.payload.data.results,Itype:'movie'};case'FETCH_TV':return{movieList:action.payload.data.results,Itype:'tv'};default:return prevState;}};var _Redux=function _Redux(props){var _useReducer=useReducer(reducder,initState),_useReducer2=_slicedToArray(_useReducer,2),stateTrending=_useReducer2[0],dispatchTrending=_useReducer2[1];var _useState=useState({type:'',id:'',name:'',_Itype:''}),_useState2=_slicedToArray(_useState,2),seletedGenreMovieId=_useState2[0],setSeletedGenreMovieId=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),movie=_useState4[0],setMovie=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),value=_useState6[0],setValue=_useState6[1];useEffect(function(){_AxiosInstance.get(props.url).then(function(data){console.log(data);dispatchTrending({type:props.FetchType,payload:data});}).catch(function(err){});},[]);var selectedMovie=function selectedMovie(movie,e){setSeletedGenreMovieId({id:movie.id,type:movie.media_type,name:movie.title||movie.name,_Itype:e});setValue(true);};useEffect(function(){var movies=stateTrending.movieList.map(function(movie){var movieImageUrl='https://image.tmdb.org/t/p/w500/'+movie.id;if(movieImageUrl!==null){var movieComponent=/*#__PURE__*/React.createElement(DisplayAllGeresOfMovies,{movieDetials:function movieDetials(e){return selectedMovie(movie,e);},key:movie.id,movie:movie,ITypeMovie:stateTrending.Itype});return movieComponent;}});setMovie(movies);},[stateTrending.movieList]);console.log(seletedGenreMovieId);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Grid,{padded:true},/*#__PURE__*/React.createElement(Grid.Row,null,/*#__PURE__*/React.createElement(Grid.Column,{className:\"scrollmenuImageBigger\"},movie))),value?/*#__PURE__*/React.createElement(SearchGenresResult,{Ids:seletedGenreMovieId}):\" \");};export default _Redux;","map":{"version":3,"sources":["E:/CircuitBreakerShow/src/Store/_Redux.js"],"names":["React","useReducer","useEffect","useState","_AxiosInstance","DisplayAllGeresOfMovies","Grid","Image","SearchGenresResult","initState","movieList","Itype","reducder","prevState","action","type","payload","data","results","_Redux","props","stateTrending","dispatchTrending","id","name","_Itype","seletedGenreMovieId","setSeletedGenreMovieId","movie","setMovie","value","setValue","get","url","then","console","log","FetchType","catch","err","selectedMovie","e","media_type","title","movies","map","movieImageUrl","movieComponent"],"mappings":"4GAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,SAA5B,CAAuCC,QAAvC,KAAuD,OAAvD,CACA,MAAOC,CAAAA,cAAP,KAA2B,yBAA3B,CACA,MAAOC,CAAAA,uBAAP,KAAoC,uCAApC,CACA,OAASC,IAAT,CAAeC,KAAf,KAA4B,mBAA5B,CACA,MAAOC,CAAAA,kBAAP,KAA+B,kCAA/B,CAIA,GAAMC,CAAAA,SAAS,CAAG,CACdC,SAAS,CAAE,EADG,CAEdC,KAAK,CAAE,EAFO,CAAlB,CAKA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,SAAD,CAAYC,MAAZ,CAAuB,CACpC,OAAQA,MAAM,CAACC,IAAf,EACI,IAAK,aAAL,CACI,MAAO,CACHL,SAAS,CAAEI,MAAM,CAACE,OAAP,CAAeC,IAAf,CAAoBC,OAD5B,CAEHP,KAAK,CAAE,OAFJ,CAAP,CAIJ,IAAK,UAAL,CACI,MAAO,CACHD,SAAS,CAAEI,MAAM,CAACE,OAAP,CAAeC,IAAf,CAAoBC,OAD5B,CAEHP,KAAK,CAAE,IAFJ,CAAP,CAKJ,QACI,MAAOE,CAAAA,SAAP,CAbR,CAeH,CAhBD,CAkBA,GAAMM,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAC,KAAK,CAAI,iBAEsBnB,UAAU,CAACW,QAAD,CAAWH,SAAX,CAFhC,4CAEbY,aAFa,iBAEEC,gBAFF,+BAGkCnB,QAAQ,CAAC,CAAEY,IAAI,CAAE,EAAR,CAAYQ,EAAE,CAAE,EAAhB,CAAoBC,IAAI,CAAE,EAA1B,CAA8BC,MAAM,CAAE,EAAtC,CAAD,CAH1C,wCAGbC,mBAHa,eAGQC,sBAHR,8BAIMxB,QAAQ,CAAC,EAAD,CAJd,yCAIbyB,KAJa,eAINC,QAJM,8BAKM1B,QAAQ,CAAC,KAAD,CALd,yCAKb2B,KALa,eAKNC,QALM,eAOpB7B,SAAS,CAAC,UAAM,CACZE,cAAc,CAAC4B,GAAf,CAAmBZ,KAAK,CAACa,GAAzB,EACKC,IADL,CACU,SAAAjB,IAAI,CAAI,CACVkB,OAAO,CAACC,GAAR,CAAYnB,IAAZ,EACAK,gBAAgB,CAAC,CAAEP,IAAI,CAAEK,KAAK,CAACiB,SAAd,CAAyBrB,OAAO,CAAEC,IAAlC,CAAD,CAAhB,CACH,CAJL,EAKKqB,KALL,CAKW,SAAAC,GAAG,CAAI,CAEb,CAPL,EAQH,CATQ,CASN,EATM,CAAT,CAWA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACZ,KAAD,CAAQa,CAAR,CAAc,CAChCd,sBAAsB,CAAC,CACnBJ,EAAE,CAAEK,KAAK,CAACL,EADS,CAEnBR,IAAI,CAAEa,KAAK,CAACc,UAFO,CAGnBlB,IAAI,CAAEI,KAAK,CAACe,KAAN,EAAef,KAAK,CAACJ,IAHR,CAInBC,MAAM,CAAEgB,CAJW,CAAD,CAAtB,CAMAV,QAAQ,CAAC,IAAD,CAAR,CACH,CARD,CAUA7B,SAAS,CAAC,UAAM,CACZ,GAAI0C,CAAAA,MAAM,CAAGvB,aAAa,CAACX,SAAd,CAAwBmC,GAAxB,CAA4B,SAACjB,KAAD,CAAW,CAChD,GAAIkB,CAAAA,aAAa,CAAG,mCAAqClB,KAAK,CAACL,EAA/D,CAEA,GAAIuB,aAAa,GAAK,IAAtB,CAA4B,CACxB,GAAMC,CAAAA,cAAc,cAChB,oBAAC,uBAAD,EACI,YAAY,CAAE,sBAAAN,CAAC,QAAID,CAAAA,aAAa,CAACZ,KAAD,CAAQa,CAAR,CAAjB,EADnB,CAEI,GAAG,CAAEb,KAAK,CAACL,EAFf,CAGI,KAAK,CAAEK,KAHX,CAII,UAAU,CAAEP,aAAa,CAACV,KAJ9B,EADJ,CAQA,MAAOoC,CAAAA,cAAP,CACH,CACJ,CAdY,CAAb,CAgBAlB,QAAQ,CAACe,MAAD,CAAR,CAEH,CAnBQ,CAmBN,CAACvB,aAAa,CAACX,SAAf,CAnBM,CAAT,CAqBAyB,OAAO,CAACC,GAAR,CAAYV,mBAAZ,EACA,mBACI,oBAAC,KAAD,CAAO,QAAP,mBACI,oBAAC,IAAD,EAAM,MAAM,KAAZ,eACI,oBAAC,IAAD,CAAM,GAAN,mBACI,oBAAC,IAAD,CAAM,MAAN,EAAa,SAAS,CAAC,uBAAvB,EACKE,KADL,CADJ,CADJ,CADJ,CAQKE,KAAK,cAAG,oBAAC,kBAAD,EAAoB,GAAG,CAAEJ,mBAAzB,EAAH,CAAsD,GARhE,CADJ,CAaH,CA/DD,CAiEA,cAAeP,CAAAA,MAAf","sourcesContent":["import React, { useReducer, useEffect, useState } from 'react';\r\nimport _AxiosInstance from '../Store/_AxiosInstance'\r\nimport DisplayAllGeresOfMovies from '../Containers/DisplayAllGeresOfMovies';\r\nimport { Grid, Image } from 'semantic-ui-react'\r\nimport SearchGenresResult from '../Containers/SearchGenresResult'\r\n\r\n\r\n\r\nconst initState = {\r\n    movieList: [],\r\n    Itype: ''\r\n}\r\n\r\nconst reducder = (prevState, action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_MOVIE':\r\n            return {\r\n                movieList: action.payload.data.results,\r\n                Itype: 'movie'\r\n            };\r\n        case 'FETCH_TV':\r\n            return {\r\n                movieList: action.payload.data.results,\r\n                Itype: 'tv'\r\n            };\r\n\r\n        default:\r\n            return prevState;\r\n    }\r\n}\r\n\r\nconst _Redux = props => {\r\n\r\n    const [stateTrending, dispatchTrending] = useReducer(reducder, initState);\r\n    const [seletedGenreMovieId, setSeletedGenreMovieId] = useState({ type: '', id: '', name: '', _Itype: '' });\r\n    const [movie, setMovie] = useState([]);\r\n    const [value, setValue] = useState(false);\r\n\r\n    useEffect(() => {\r\n        _AxiosInstance.get(props.url)\r\n            .then(data => {\r\n                console.log(data)\r\n                dispatchTrending({ type: props.FetchType, payload: data, })\r\n            })\r\n            .catch(err => {\r\n\r\n            })\r\n    }, []);\r\n\r\n    const selectedMovie = (movie, e) => {\r\n        setSeletedGenreMovieId({\r\n            id: movie.id,\r\n            type: movie.media_type,\r\n            name: movie.title || movie.name,\r\n            _Itype: e\r\n        });\r\n        setValue(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        let movies = stateTrending.movieList.map((movie) => {\r\n            let movieImageUrl = 'https://image.tmdb.org/t/p/w500/' + movie.id;\r\n\r\n            if (movieImageUrl !== null) {\r\n                const movieComponent = (\r\n                    <DisplayAllGeresOfMovies\r\n                        movieDetials={e => selectedMovie(movie, e)}\r\n                        key={movie.id}\r\n                        movie={movie}\r\n                        ITypeMovie={stateTrending.Itype}\r\n                    />\r\n                );\r\n                return movieComponent;\r\n            }\r\n        });\r\n\r\n        setMovie(movies);\r\n\r\n    }, [stateTrending.movieList]);\r\n\r\n    console.log(seletedGenreMovieId);\r\n    return (\r\n        <React.Fragment>\r\n            <Grid padded>\r\n                <Grid.Row>\r\n                    <Grid.Column className=\"scrollmenuImageBigger\">\r\n                        {movie}\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>\r\n            {value ? <SearchGenresResult Ids={seletedGenreMovieId} /> : \" \"}\r\n        </React.Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default _Redux;"]},"metadata":{},"sourceType":"module"}