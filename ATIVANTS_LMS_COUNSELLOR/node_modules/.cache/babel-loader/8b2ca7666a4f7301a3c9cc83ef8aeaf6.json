{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ACTIVANTS\\\\Desktop\\\\LMS Councellor\\\\Activants_LMS_Counsellor\\\\ATIVANTS_LMS_COUNSELLOR\\\\src\\\\SecondaryComponents\\\\Desktop\\\\RegistrationComponents\\\\_Registration_First.js\";\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Header, Icon, Form, Image, Message, Segment, Grid, Modal, Search, Button, Dimmer, Loader, Divider, List } from 'semantic-ui-react';\nimport { useForm } from \"react-hook-form\";\n\nvar Registration_First = function Registration_First(_ref) {\n  var formData = _ref.formData,\n      setForm = _ref.setForm,\n      navigation = _ref.navigation;\n  var COUNSELLOR_FIRST_NAME = formData.COUNSELLOR_FIRST_NAME,\n      COUNSELLOR_LAST_NAME = formData.COUNSELLOR_LAST_NAME,\n      COUNSELLOR_EMAIL = formData.COUNSELLOR_EMAIL,\n      COUNSELLOR_PHONE_NUMBER = formData.COUNSELLOR_PHONE_NUMBER,\n      COUNSELLOR_COUNTRY_CODE = formData.COUNSELLOR_COUNTRY_CODE,\n      COUNSELLOR_COUNSELLING_SUBJECT_CODE = formData.COUNSELLOR_COUNSELLING_SUBJECT_CODE,\n      COUNSELLOR_COUNSELLING_LEVEL_CODE = formData.COUNSELLOR_COUNSELLING_LEVEL_CODE,\n      COUNSELLOR_HOURLY_RATE = formData.COUNSELLOR_HOURLY_RATE,\n      COUNSELLOR_QUALIFICATION_CODE = formData.COUNSELLOR_QUALIFICATION_CODE,\n      COUNSELLOR_INSTITUTION_TYPE_CODE = formData.COUNSELLOR_INSTITUTION_TYPE_CODE,\n      COUNSELLOR_REGISTRATION_STATUS_CODE = formData.COUNSELLOR_REGISTRATION_STATUS_CODE;\n  console.log(formData);\n\n  var _useForm = useForm({}),\n      handleSubmit = _useForm.handleSubmit,\n      register = _useForm.register,\n      errors = _useForm.errors;\n\n  var onSubmit = function onSubmit(data) {\n    navigation.next();\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    size: \"small\",\n    onSubmit: handleSubmit(onSubmit),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"center\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Segment, {\n    stacked: true,\n    style: {\n      width: '90%',\n      textAlign: 'left'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 37\n    }\n  }, \"User Input\"), /*#__PURE__*/React.createElement(\"input\", {\n    fluid: true,\n    icon: \"user\",\n    iconPosition: \"left\",\n    placeholder: \"Enter your details\",\n    type: \"text\",\n    name: \"COUNSELLOR_FIRST_NAME\",\n    onChange: setForm,\n    value: COUNSELLOR_FIRST_NAME,\n    ref: register({\n      validate: function validate(COUNSELLOR_FIRST_NAME) {\n        return COUNSELLOR_FIRST_NAME && COUNSELLOR_FIRST_NAME.length > 3;\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 37\n    }\n  }), errors.COUNSELLOR_NAME && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"customError\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 64\n    }\n  }, \"Username invalid\")), /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 37\n    }\n  }, \"User Input\"), /*#__PURE__*/React.createElement(\"input\", {\n    fluid: true,\n    icon: \"user\",\n    iconPosition: \"left\",\n    placeholder: \"Enter your details\",\n    type: \"text\",\n    name: \"COUNSELLOR_LAST_NAME\",\n    onChange: setForm,\n    value: COUNSELLOR_LAST_NAME,\n    ref: register({\n      validate: function validate(COUNSELLOR_LAST_NAME) {\n        return COUNSELLOR_LAST_NAME && COUNSELLOR_LAST_NAME.length > 3;\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 37\n    }\n  }), errors.COUNSELLOR_NAME && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"customError\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 64\n    }\n  }, \"Username invalid\"))), /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 37\n    }\n  }, \"User Input\"), /*#__PURE__*/React.createElement(\"input\", {\n    fluid: true,\n    icon: \"user\",\n    iconPosition: \"left\",\n    placeholder: \"Enter your details\",\n    type: \"text\",\n    name: \"COUNSELLOR_EMAIL\",\n    onChange: setForm,\n    value: COUNSELLOR_EMAIL,\n    ref: register({\n      validate: function validate(COUNSELLOR_EMAIL) {\n        return COUNSELLOR_EMAIL && COUNSELLOR_EMAIL.length > 3;\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 37\n    }\n  }), errors.COUNSELLOR_NAME && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"customError\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 64\n    }\n  }, \"Username invalid\")), /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 37\n    }\n  }, \"User Input\"), /*#__PURE__*/React.createElement(\"input\", {\n    fluid: true,\n    icon: \"user\",\n    iconPosition: \"left\",\n    placeholder: \"Enter your details\",\n    type: \"text\",\n    name: \"COUNSELLOR_NAME\",\n    onChange: setForm,\n    value: COUNSELLOR_NAME,\n    ref: register({\n      validate: function validate(COUNSELLOR_NAME) {\n        return COUNSELLOR_NAME && COUNSELLOR_NAME.length > 3;\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 37\n    }\n  }), errors.COUNSELLOR_NAME && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"customError\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 64\n    }\n  }, \"Username invalid\"))), /*#__PURE__*/React.createElement(Button, {\n    color: \"teal\",\n    fluid: true,\n    size: \"large\",\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 29\n    }\n  }, \"Next\"))))));\n};\n\nexport default Registration_First;","map":{"version":3,"sources":["C:/Users/ACTIVANTS/Desktop/LMS Councellor/Activants_LMS_Counsellor/ATIVANTS_LMS_COUNSELLOR/src/SecondaryComponents/Desktop/RegistrationComponents/_Registration_First.js"],"names":["React","useState","useEffect","useContext","Header","Icon","Form","Image","Message","Segment","Grid","Modal","Search","Button","Dimmer","Loader","Divider","List","useForm","Registration_First","formData","setForm","navigation","COUNSELLOR_FIRST_NAME","COUNSELLOR_LAST_NAME","COUNSELLOR_EMAIL","COUNSELLOR_PHONE_NUMBER","COUNSELLOR_COUNTRY_CODE","COUNSELLOR_COUNSELLING_SUBJECT_CODE","COUNSELLOR_COUNSELLING_LEVEL_CODE","COUNSELLOR_HOURLY_RATE","COUNSELLOR_QUALIFICATION_CODE","COUNSELLOR_INSTITUTION_TYPE_CODE","COUNSELLOR_REGISTRATION_STATUS_CODE","console","log","handleSubmit","register","errors","onSubmit","data","next","width","textAlign","validate","length","COUNSELLOR_NAME"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport {\n    Header, Icon, Form, Image, Message,\n    Segment, Grid, Modal, Search, Button, Dimmer, Loader, Divider, List\n} from 'semantic-ui-react';\nimport { useForm } from \"react-hook-form\";\n\nconst Registration_First = ({ formData, setForm, navigation }) => {\n\n    const {\n        //FIRST REGISTRATION PAGE\n        COUNSELLOR_FIRST_NAME,\n        COUNSELLOR_LAST_NAME,\n        COUNSELLOR_EMAIL,\n        COUNSELLOR_PHONE_NUMBER,\n        COUNSELLOR_COUNTRY_CODE,\n        COUNSELLOR_COUNSELLING_SUBJECT_CODE,\n        COUNSELLOR_COUNSELLING_LEVEL_CODE,\n        COUNSELLOR_HOURLY_RATE,\n        COUNSELLOR_QUALIFICATION_CODE,\n        COUNSELLOR_INSTITUTION_TYPE_CODE,\n        COUNSELLOR_REGISTRATION_STATUS_CODE\n\n    } = formData;\n    console.log(formData)\n\n    const { handleSubmit, register, errors } = useForm({\n\n    });\n\n    const onSubmit = (data) => {\n        navigation.next()\n    };\n\n\n    return (\n\n        <Grid>\n            <Grid.Column>\n                <Form size='small' onSubmit={handleSubmit(onSubmit)}>\n                    <center>\n                        <Segment stacked style={{ width: '90%', textAlign: 'left' }}>\n                            <Form.Group widths='equal'>\n                                <Form.Field className=\"CustomForm\">\n                                    <label>User Input</label>\n                                    <input\n                                        fluid\n                                        icon='user'\n                                        iconPosition='left'\n                                        placeholder='Enter your details'\n                                        type='text'\n                                        name=\"COUNSELLOR_FIRST_NAME\"\n                                        onChange={setForm}\n                                        value={COUNSELLOR_FIRST_NAME}\n                                        ref={register({ validate: COUNSELLOR_FIRST_NAME => COUNSELLOR_FIRST_NAME && COUNSELLOR_FIRST_NAME.length > 3 })}\n                                    />\n                                    {errors.COUNSELLOR_NAME && <p className=\"customError\">Username invalid</p>}\n                                </Form.Field>\n\n\n                                <Form.Field className=\"CustomForm\">\n                                    <label>User Input</label>\n                                    <input\n                                        fluid\n                                        icon='user'\n                                        iconPosition='left'\n                                        placeholder='Enter your details'\n                                        type='text'\n                                        name=\"COUNSELLOR_LAST_NAME\"\n                                        onChange={setForm}\n                                        value={COUNSELLOR_LAST_NAME}\n                                        ref={register({ validate: COUNSELLOR_LAST_NAME => COUNSELLOR_LAST_NAME && COUNSELLOR_LAST_NAME.length > 3 })}\n                                    />\n                                    {errors.COUNSELLOR_NAME && <p className=\"customError\">Username invalid</p>}\n                                </Form.Field>\n\n\n                            </Form.Group>\n\n                            <Form.Group widths='equal'>\n                                <Form.Field className=\"CustomForm\">\n                                    <label>User Input</label>\n                                    <input\n                                        fluid\n                                        icon='user'\n                                        iconPosition='left'\n                                        placeholder='Enter your details'\n                                        type='text'\n                                        name=\"COUNSELLOR_EMAIL\"\n                                        onChange={setForm}\n                                        value={COUNSELLOR_EMAIL}\n                                        ref={register({ validate: COUNSELLOR_EMAIL => COUNSELLOR_EMAIL && COUNSELLOR_EMAIL.length > 3 })}\n                                    />\n                                    {errors.COUNSELLOR_NAME && <p className=\"customError\">Username invalid</p>}\n                                </Form.Field>\n\n                                <Form.Field className=\"CustomForm\">\n                                    <label>User Input</label>\n                                    <input\n                                        fluid\n                                        icon='user'\n                                        iconPosition='left'\n                                        placeholder='Enter your details'\n                                        type='text'\n                                        name=\"COUNSELLOR_NAME\"\n                                        onChange={setForm}\n                                        value={COUNSELLOR_NAME}\n                                        ref={register({ validate: COUNSELLOR_NAME => COUNSELLOR_NAME && COUNSELLOR_NAME.length > 3 })}\n                                    />\n                                    {errors.COUNSELLOR_NAME && <p className=\"customError\">Username invalid</p>}\n                                </Form.Field>\n                            </Form.Group>\n\n                            <Button\n                                color='teal'\n                                fluid\n                                size='large'\n                                type=\"submit\"\n                            >\n                                Next\n                        </Button>\n\n                        </Segment>\n                    </center>\n                </Form>\n\n            </Grid.Column>\n        </Grid>\n    )\n\n}\n\nexport default Registration_First;"]},"metadata":{},"sourceType":"module"}