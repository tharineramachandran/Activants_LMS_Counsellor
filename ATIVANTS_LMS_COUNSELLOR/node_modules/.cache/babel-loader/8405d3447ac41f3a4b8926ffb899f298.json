{"ast":null,"code":"import _slicedToArray from \"E:\\\\CircuitBreakerShow\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\CircuitBreakerShow\\\\src\\\\SecondaryComponents\\\\Desktop\\\\_NavigationItems.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Container, Menu, Responsive, Segment, Visibility, Grid, Divider, Image, Header, Search, Icon, Dropdown, Label } from 'semantic-ui-react';\nimport _HeaderMovieCast from './_HeaderMovieCast';\nimport _HeaderMovieDetails from '../Desktop/_HeaderMovieDetails';\nimport axios from 'axios';\nimport _Header from '../Desktop/_Header';\n\nvar _NavigationItems = function _NavigationItems() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      movieList = _useState2[0],\n      setMovieList = _useState2[1];\n\n  var _useState3 = useState({\n    bgImg: '',\n    post: '',\n    name: '',\n    desc: '',\n    youtube: ''\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      Image = _useState4[0],\n      setImage = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      YouTube = _useState6[0],\n      setYoutube = _useState6[1];\n\n  var geTYouTube = function geTYouTube(id) {\n    var key = '';\n    axios.get(\"https://api.themoviedb.org/3/movie/\".concat(id, \"?api_key=028e8ea4ca7d9164d085c9238979098b&append_to_response=videos\")).then(function (x) {\n      console.log(\"xxxxxxxxxxxxxxxx\", x);\n      var videos = x.data.videos;\n      console.log(videos);\n      var Trailer = videos.results.sort(function (a, b) {\n        return b.size - a.size;\n      }).filter(function (x) {\n        return x.type === 'Trailer';\n      });\n      var Teaser = videos.results.sort(function (a, b) {\n        return b.size - a.size;\n      }).filter(function (x) {\n        return x.type === 'Teaser';\n      });\n      console.log(\"xxxxxxxxxxxxxxxx\", Trailer);\n      console.log(\"xxxxxxxxxxxxxxxx\", Teaser);\n      if (Trailer) key = Trailer.map(function (x) {\n        return x.key;\n      });else key = Teaser.map(function (x) {\n        return x.key;\n      });\n      setYoutube(key);\n      console.log(\"youtube key\", YouTube);\n    }).catch(function (err) {});\n  };\n\n  useEffect(function () {\n    var url = 'https://api.themoviedb.org/3/trending/movie/week?api_key=028e8ea4ca7d9164d085c9238979098b&include_adult=false';\n    axios.get(url).then(function (res) {\n      var results = res.data.results;\n      var movieImageUrll;\n      var postImageUrl;\n      var name = '';\n      var movieRows = [];\n      movieImageUrll = \"https://image.tmdb.org/t/p/w500\" + results[0].backdrop_path;\n      postImageUrl = \"https://image.tmdb.org/t/p/w500\" + results[0].poster_path;\n      geTYouTube(results[0].id);\n      setImage({\n        bgImg: movieImageUrll,\n        post: postImageUrl,\n        name: results[0].title || results[0].name,\n        desc: results[0].overview,\n        youtube: \"https://www.youtube.com/watch?v=\".concat(YouTube)\n      });\n      results.forEach(function (movie) {\n        var movieImageUrl;\n        movieImageUrl = \"https://image.tmdb.org/t/p/w500\" + movie.backdrop_path;\n\n        if (movie.poster_path !== null && movie.media_type !== \"person\") {\n          var movieComponent = /*#__PURE__*/React.createElement(_HeaderMovieCast, {\n            movieDetials: function movieDetials() {\n              return selectMovieHandler(movie);\n            },\n            key: movie.id,\n            movieImage: movieImageUrl,\n            movie: movie,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 48\n            }\n          });\n          movieRows.push(movieComponent);\n        }\n      });\n      setMovieList(movieRows);\n    }).catch(function (error) {\n      console.log(\"errror\", error);\n    });\n    return function () {\n      setMovieList([]);\n      console.log(\"cleaned DC\");\n    };\n  }, []);\n\n  var selectMovieHandler = function selectMovieHandler(movie) {\n    var url;\n    var urlVideo;\n    var details = {};\n\n    if (movie.media_type === \"movie\") {\n      var movieId = movie.id;\n      console.log(movieId);\n      url = \"https://api.themoviedb.org/3/movie/\".concat(movieId, \"?api_key=028e8ea4ca7d9164d085c9238979098b&append_to_response=videos\");\n    } else if (movie.media_type === \"tv\") {\n      var tvId = movie.id;\n      url = \"https://api.themoviedb.org/3/tv/\".concat(tvId, \"?api_key=028e8ea4ca7d9164d085c9238979098b&append_to_response=videos\");\n    }\n\n    axios.get(url).then(function (res) {\n      var movieImageUrl = \"https://image.tmdb.org/t/p/w500\" + res.data.backdrop_path;\n      var moviePoster = \"https://image.tmdb.org/t/p/w500\" + res.data.poster_path;\n      var desc = res.data.overview;\n      setImage({\n        bgImg: movieImageUrl,\n        post: moviePoster,\n        desc: res.data.overview,\n        name: res.data.title || res.data.name\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_Header, {\n    Imagess: Image,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    style: {\n      display: 'contents'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, \"\\xA0\"), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(_HeaderMovieDetails, {\n    url: Image.youtube,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Grid.Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, \"\\xA0\"), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 14,\n    textAlign: \"center\",\n    className: \"scrollmenuImageBigger\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, movieList), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, \"\\xA0\")));\n};\n\nexport default _NavigationItems;","map":{"version":3,"sources":["E:/CircuitBreakerShow/src/SecondaryComponents/Desktop/_NavigationItems.js"],"names":["React","useState","useEffect","Button","Container","Menu","Responsive","Segment","Visibility","Grid","Divider","Image","Header","Search","Icon","Dropdown","Label","_HeaderMovieCast","_HeaderMovieDetails","axios","_Header","_NavigationItems","movieList","setMovieList","bgImg","post","name","desc","youtube","setImage","YouTube","setYoutube","geTYouTube","id","key","get","then","x","console","log","videos","data","Trailer","results","sort","a","b","size","filter","type","Teaser","map","catch","err","url","res","movieImageUrll","postImageUrl","movieRows","backdrop_path","poster_path","title","overview","forEach","movie","movieImageUrl","media_type","movieComponent","selectMovieHandler","push","error","urlVideo","details","movieId","tvId","moviePoster","display"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Button, Container, Menu, Responsive, Segment,\r\n    Visibility, Grid, Divider, Image, Header, Search, Icon, Dropdown, Label\r\n} from 'semantic-ui-react'\r\n\r\nimport _HeaderMovieCast from './_HeaderMovieCast';\r\nimport _HeaderMovieDetails from '../Desktop/_HeaderMovieDetails';\r\nimport axios from 'axios';\r\nimport _Header from '../Desktop/_Header'\r\n\r\n\r\nconst _NavigationItems = () => {\r\n    const [movieList, setMovieList] = useState([]);\r\n    const [Image, setImage] = useState({ bgImg: '', post: '', name: '', desc: '', youtube: '' });\r\n    const [YouTube, setYoutube] = useState('');\r\n\r\n    const geTYouTube = id => {\r\n        let key = '';\r\n        axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=028e8ea4ca7d9164d085c9238979098b&append_to_response=videos`)\r\n            .then(x => {\r\n                console.log(\"xxxxxxxxxxxxxxxx\", x)\r\n                const videos = x.data.videos;\r\n                console.log(videos);\r\n                const Trailer = videos.results.sort((a, b) => b.size - a.size).filter(x => x.type === 'Trailer');\r\n                const Teaser = videos.results.sort((a, b) => b.size - a.size).filter(x => x.type === 'Teaser');\r\n                console.log(\"xxxxxxxxxxxxxxxx\", Trailer)\r\n                console.log(\"xxxxxxxxxxxxxxxx\", Teaser)\r\n                \r\n                if (Trailer)\r\n                    key = Trailer.map(x => x.key)\r\n                else\r\n                    key = Teaser.map(x => x.key)\r\n\r\n                setYoutube(key);\r\n                console.log(\"youtube key\", YouTube);\r\n            })\r\n            .catch(err => {\r\n\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        const url = 'https://api.themoviedb.org/3/trending/movie/week?api_key=028e8ea4ca7d9164d085c9238979098b&include_adult=false';\r\n        axios.get(url)\r\n            .then(res => {\r\n                const results = res.data.results;\r\n                let movieImageUrll;\r\n                let postImageUrl;\r\n                let name = '';\r\n                let movieRows = [];\r\n\r\n                movieImageUrll = \"https://image.tmdb.org/t/p/w500\" + results[0].backdrop_path;\r\n                postImageUrl = \"https://image.tmdb.org/t/p/w500\" + results[0].poster_path;\r\n                geTYouTube(results[0].id);\r\n                setImage({\r\n                    bgImg: movieImageUrll,\r\n                    post: postImageUrl,\r\n                    name: results[0].title || results[0].name,\r\n                    desc: results[0].overview,\r\n                    youtube:`https://www.youtube.com/watch?v=${YouTube}`\r\n                });\r\n\r\n                results.forEach((movie) => {\r\n                    let movieImageUrl;\r\n                    movieImageUrl = \"https://image.tmdb.org/t/p/w500\" + movie.backdrop_path;\r\n                    if (movie.poster_path !== null && movie.media_type !== \"person\") {\r\n                        const movieComponent = <_HeaderMovieCast\r\n                            movieDetials={() => selectMovieHandler(movie)}\r\n                            key={movie.id}\r\n                            movieImage={movieImageUrl}\r\n                            movie={movie}\r\n                        />\r\n                        movieRows.push(movieComponent);\r\n                    }\r\n                })\r\n\r\n                setMovieList(movieRows);\r\n\r\n            }).catch(error => {\r\n                console.log(\"errror\", error);\r\n            });\r\n\r\n        return () => {\r\n            setMovieList([]);\r\n            console.log(\"cleaned DC\")\r\n        }\r\n\r\n    }, []);\r\n\r\n    const selectMovieHandler = movie => {\r\n        let url;\r\n        let urlVideo;\r\n        let details = {};\r\n        if (movie.media_type === \"movie\") {\r\n            const movieId = movie.id;\r\n            console.log(movieId)\r\n            url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=028e8ea4ca7d9164d085c9238979098b&append_to_response=videos`;\r\n\r\n        } else if (movie.media_type === \"tv\") {\r\n            const tvId = movie.id\r\n            url = `https://api.themoviedb.org/3/tv/${tvId}?api_key=028e8ea4ca7d9164d085c9238979098b&append_to_response=videos`;\r\n        }\r\n\r\n        axios.get(url)\r\n            .then(res => {\r\n                let movieImageUrl = \"https://image.tmdb.org/t/p/w500\" + res.data.backdrop_path;\r\n                let moviePoster = \"https://image.tmdb.org/t/p/w500\" + res.data.poster_path;\r\n                let desc = res.data.overview;\r\n\r\n                setImage({ bgImg: movieImageUrl, post: moviePoster, desc: res.data.overview, name: res.data.title || res.data.name });\r\n\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <_Header Imagess={Image} />\r\n            <Grid style={{ display: 'contents' }}>\r\n                <Grid.Column width={4}>\r\n                    &nbsp;\r\n                    </Grid.Column>\r\n                <Grid.Column width={12}>\r\n                    <_HeaderMovieDetails url={Image.youtube} />\r\n                </Grid.Column>\r\n            </Grid>\r\n            <Grid.Row>\r\n                <Grid.Column width={1}>&nbsp;</Grid.Column>\r\n                <Grid.Column width={14} textAlign=\"center\" className=\"scrollmenuImageBigger\">\r\n                    {movieList}\r\n                </Grid.Column>\r\n                <Grid.Column width={1}>&nbsp;</Grid.Column>\r\n            </Grid.Row>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default _NavigationItems;"]},"metadata":{},"sourceType":"module"}