{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\ACTIVANTS\\\\Desktop\\\\LMS Councellor\\\\Activants_LMS_Counsellor\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\ACTIVANTS\\\\Desktop\\\\LMS Councellor\\\\Activants_LMS_Counsellor\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ACTIVANTS\\\\Desktop\\\\LMS Councellor\\\\Activants_LMS_Counsellor\\\\ATIVANTS_LMS_COUNSELLOR\\\\src\\\\SecondaryComponents\\\\Desktop\\\\RegistrationComponents\\\\__RegistrationForm1.js\";\n\nimport React from 'react';\nimport { useForm, Error } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport { useStateMachine } from \"little-state-machine\";\nimport __updateAction from '../RegistrationComponents/__updateAction';\nimport { Header, Icon, Form, Image, Message, Segment, Grid, Modal, Search, Button, Dimmer, Loader, Divider, List } from 'semantic-ui-react';\n\nvar __RegistrationForm1 = function __RegistrationForm1() {\n  var _useStateMachine = useStateMachine(__updateAction),\n      state = _useStateMachine.state,\n      action = _useStateMachine.action;\n\n  var _useForm = useForm({\n    defaultValues: state.yourDetails\n  }),\n      handleSubmit = _useForm.handleSubmit,\n      register = _useForm.register,\n      errors = _useForm.errors;\n\n  var _useHistory = useHistory(),\n      push = _useHistory.push;\n\n  var onSubmit = function onSubmit(data) {\n    action(data);\n    push(\"/__RegistrationForm2\");\n  };\n\n  useEffect(function () {\n    register({\n      name: 'firstName'\n    }, {\n      required: true\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(Grid, {\n    textAlign: \"center\",\n    verticalAlign: \"middle\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    style: {\n      maxWidth: 450\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    as: \"h2\",\n    color: \"black\",\n    textAlign: \"center\",\n    style: {\n      padding: \"10px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, \"Registration\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    horizontal: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, \"Or\"), /*#__PURE__*/React.createElement(Form, {\n    size: \"small\",\n    onSubmit: handleSubmit(onSubmit),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Segment, {\n    stacked: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    fluid: true,\n    icon: \"user\",\n    iconPosition: \"left\",\n    placeholder: \"E-mail address\",\n    type: \"text\",\n    name: \"firstName\",\n    onChange: /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e, _ref) {\n        var name, value;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                name = _ref.name, value = _ref.value;\n                setValue(name, value);\n                _context.next = 4;\n                return triggerValidation({\n                  name: name\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }(),\n    error: errors.firstName ? true : false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }), errors.firstName && /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 46\n    }\n  }, \"Username invalid\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"teal\",\n    fluid: true,\n    size: \"large\",\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }, \"Next\")))));\n};\n\nexport default __RegistrationForm1;","map":{"version":3,"sources":["C:/Users/ACTIVANTS/Desktop/LMS Councellor/Activants_LMS_Counsellor/ATIVANTS_LMS_COUNSELLOR/src/SecondaryComponents/Desktop/RegistrationComponents/__RegistrationForm1.js"],"names":["React","useForm","Error","useHistory","useStateMachine","__updateAction","Header","Icon","Form","Image","Message","Segment","Grid","Modal","Search","Button","Dimmer","Loader","Divider","List","__RegistrationForm1","state","action","defaultValues","yourDetails","handleSubmit","register","errors","push","onSubmit","data","useEffect","name","required","maxWidth","padding","e","value","setValue","triggerValidation","firstName"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { useForm, Error } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useStateMachine } from \"little-state-machine\";\r\nimport __updateAction from '../RegistrationComponents/__updateAction';\r\nimport {\r\n    Header, Icon, Form, Image, Message,\r\n    Segment, Grid, Modal, Search, Button, Dimmer, Loader, Divider, List\r\n} from 'semantic-ui-react';\r\n\r\n\r\nconst __RegistrationForm1 = () => {\r\n\r\n    const { state, action } = useStateMachine(__updateAction);\r\n\r\n    const { handleSubmit, register, errors } = useForm({\r\n        defaultValues: state.yourDetails\r\n    });\r\n\r\n    const { push } = useHistory();\r\n\r\n    const onSubmit = (data) => {\r\n        action(data);\r\n        push(\"/__RegistrationForm2\");\r\n    };\r\n\r\n    useEffect(() => {\r\n        register({ name: 'firstName' }, { required: true });\r\n      }, [])\r\n      \r\n    return (\r\n        <Grid textAlign='center' verticalAlign='middle'>\r\n            <Grid.Column style={{ maxWidth: 450 }}>\r\n                <Header as='h2' color='black' textAlign='center' style={{ padding: \"10px\" }}>\r\n                    Registration\r\n                    </Header>\r\n                <br />\r\n                <Divider horizontal>Or</Divider>\r\n                <Form size='small' onSubmit={handleSubmit(onSubmit)}>\r\n                    <Segment stacked>\r\n\r\n                        <Form.Field \r\n                        fluid \r\n                        icon='user' \r\n                        iconPosition='left' \r\n                        placeholder='E-mail address' \r\n                        type='text' \r\n                        name=\"firstName\"\r\n                        onChange={async (e, {name, value}) => {\r\n                            setValue(name, value)\r\n                            await triggerValidation({ name })\r\n                          }}\r\n                          error={errors.firstName ? true : false}\r\n                        />\r\n\r\n                        {errors.firstName && <p>Username invalid</p>}\r\n\r\n                        <Button \r\n                        color='teal' \r\n                        fluid \r\n                        size='large'\r\n                        type=\"submit\"\r\n                        >\r\n                            Next\r\n                        </Button>\r\n                    </Segment>\r\n                </Form>\r\n\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default __RegistrationForm1;\r\n"]},"metadata":{},"sourceType":"module"}