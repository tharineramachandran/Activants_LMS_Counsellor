{"ast":null,"code":"var _jsxFileName = \"E:\\\\ShawMovieWebsite\\\\shaw-website\\\\src\\\\MainComponents\\\\DesktopComponent.js\";\nimport GetWidthOfComponent from './GetWidthOfComponent';\nimport React, { Component, useState, useEffect, useRef } from 'react';\nimport _Header from '../SecondaryComponents/Desktop/_Header';\nimport _NavigationItems from '../SecondaryComponents/Desktop/_NavigationItems';\nimport _MovieGenres from '../SecondaryComponents/Desktop/_MovieGenres';\nimport axios from 'axios';\nimport _Movie from '../../src/Store/_Movie';\nimport _SearchMovieList from '../SecondaryComponents/Desktop/_SearchMovieList';\nimport { Responsive, Grid } from 'semantic-ui-react';\nimport _BrowseCategories from '../SecondaryComponents/Desktop/_BrowseCategories';\nimport _MovieGenresList from '../SecondaryComponents/Desktop/_MovieGenresList';\n\nconst DesktopComponent = ({\n  children\n}) => {\n  const [inputValue, setInputValue] = useState('');\n  const [movieList, setMovieList] = useState([]);\n  const [movieOverview, setMovieOverview] = useState({});\n  useEffect(() => {\n    const url = `https://api.themoviedb.org/3/search/multi?api_key=9ea839ec7891591994ec0f540b4b199f&language=en-US&include_adult=false&query=${inputValue}`;\n    axios.get(url).then(res => {\n      const results = res.data.results;\n      let movieImageUrl;\n      let movieRows = [];\n      results.forEach(movie => {\n        if (movie.poster_path !== null && movie.media_type !== \"person\") {\n          // console.log(\"     d fd f df d fd fd f df  \")\n          movieImageUrl = \"https://image.tmdb.org/t/p/w500\" + movie.poster_path;\n          const movieComponent = /*#__PURE__*/React.createElement(_SearchMovie // onSearchHandler={e => setInputValue(e.target.value)}\n          // searchInputValue={inputValue}\n          // onCloseModal={() => setInputValue('')}\n          // movieDetails={() => selectMovieHandler(movie)}\n          // key={movie.id}\n          // movieImage={movieImageUrl}\n          , {\n            movie: movie,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 36\n            }\n          });\n          movieRows.push(movieComponent);\n        }\n      });\n      setMovieList(movieRows);\n    }).catch(error => {\n      console.log(\"errror\", error);\n    });\n    return () => {\n      setMovieList([]);\n      console.log(\"cleaned DC\");\n    };\n  }, [inputValue]);\n\n  const selectMovieHandler = movie => {\n    let url;\n\n    if (movie.media_type === \"movie\") {\n      const movieId = movie.id;\n      url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=224ce27b38a3805ecf6f6c36eb3ba9d0`;\n    } else if (movie.media_type === \"tv\") {\n      const tvId = movie.id;\n      url = `https://api.themoviedb.org/3/tv/${tvId}?api_key=224ce27b38a3805ecf6f6c36eb3ba9d0`;\n    }\n\n    axios.get(url).then(res => {\n      const movieData = res.data;\n      setMovieOverview(movieData);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  console.log(\"this is outside\", movieList);\n  return /*#__PURE__*/React.createElement(Responsive, {\n    getWidth: GetWidthOfComponent,\n    minWidth: Responsive.onlyTablet.minWidth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(_NavigationItems, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(_BrowseCategories, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(_MovieGenres, {\n    onSearchHandler: e => setInputValue(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }), inputValue ? /*#__PURE__*/React.createElement(_SearchMovie, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(_MovieGenresList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 40\n    }\n  }));\n};\n\nconst _SearchMovie = props => {\n  console.log(props.movie);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, props.movie.map(x => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 29\n    }\n  }, x)));\n};\n\nexport default DesktopComponent;","map":{"version":3,"sources":["E:/ShawMovieWebsite/shaw-website/src/MainComponents/DesktopComponent.js"],"names":["GetWidthOfComponent","React","Component","useState","useEffect","useRef","_Header","_NavigationItems","_MovieGenres","axios","_Movie","_SearchMovieList","Responsive","Grid","_BrowseCategories","_MovieGenresList","DesktopComponent","children","inputValue","setInputValue","movieList","setMovieList","movieOverview","setMovieOverview","url","get","then","res","results","data","movieImageUrl","movieRows","forEach","movie","poster_path","media_type","movieComponent","push","catch","error","console","log","selectMovieHandler","movieId","id","tvId","movieData","onlyTablet","minWidth","e","target","value","_SearchMovie","props","map","x"],"mappings":"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","sourcesContent":["import GetWidthOfComponent from './GetWidthOfComponent'\r\nimport React, { Component, useState, useEffect, useRef } from 'react'\r\nimport _Header from '../SecondaryComponents/Desktop/_Header'\r\nimport _NavigationItems from '../SecondaryComponents/Desktop/_NavigationItems'\r\nimport _MovieGenres from '../SecondaryComponents/Desktop/_MovieGenres'\r\nimport axios from 'axios'\r\nimport _Movie from '../../src/Store/_Movie'\r\nimport _SearchMovieList from '../SecondaryComponents/Desktop/_SearchMovieList'\r\n\r\nimport { Responsive, Grid } from 'semantic-ui-react'\r\nimport _BrowseCategories from '../SecondaryComponents/Desktop/_BrowseCategories'\r\nimport _MovieGenresList from '../SecondaryComponents/Desktop/_MovieGenresList'\r\n\r\nconst DesktopComponent = ({ children }) => {\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [movieList, setMovieList] = useState([]);\r\n  const [movieOverview, setMovieOverview] = useState({});\r\n\r\n  useEffect(() => {\r\n\r\n    const url = `https://api.themoviedb.org/3/search/multi?api_key=9ea839ec7891591994ec0f540b4b199f&language=en-US&include_adult=false&query=${inputValue}`;\r\n    axios.get(url)\r\n      .then(res => {\r\n        const results = res.data.results;\r\n        let movieImageUrl;\r\n        let movieRows = [];\r\n\r\n        results.forEach((movie) => {\r\n          if (movie.poster_path !== null && movie.media_type !== \"person\") {\r\n            // console.log(\"     d fd f df d fd fd f df  \")\r\n            movieImageUrl = \"https://image.tmdb.org/t/p/w500\" + movie.poster_path;\r\n\r\n            const movieComponent = <_SearchMovie\r\n              // onSearchHandler={e => setInputValue(e.target.value)}\r\n              // searchInputValue={inputValue}\r\n              // onCloseModal={() => setInputValue('')}\r\n              // movieDetails={() => selectMovieHandler(movie)}\r\n              // key={movie.id}\r\n              // movieImage={movieImageUrl}\r\n              movie={movie}\r\n            />\r\n            movieRows.push(movieComponent);\r\n          }\r\n        })\r\n\r\n        setMovieList(movieRows);\r\n\r\n      }).catch(error => {\r\n        console.log(\"errror\", error);\r\n      });\r\n\r\n    return () => {\r\n      setMovieList([]);\r\n      console.log(\"cleaned DC\")\r\n    }\r\n\r\n  }, [inputValue]);\r\n\r\n\r\n  const selectMovieHandler = (movie) => {\r\n    let url;\r\n    if (movie.media_type === \"movie\") {\r\n      const movieId = movie.id;\r\n      url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=224ce27b38a3805ecf6f6c36eb3ba9d0`;\r\n\r\n    } else if (movie.media_type === \"tv\") {\r\n      const tvId = movie.id\r\n      url = `https://api.themoviedb.org/3/tv/${tvId}?api_key=224ce27b38a3805ecf6f6c36eb3ba9d0`;\r\n    }\r\n\r\n    axios.get(url)\r\n      .then(res => {\r\n        const movieData = res.data;\r\n        setMovieOverview(movieData);\r\n\r\n      }).catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  console.log(\"this is outside\", movieList)\r\n\r\n  return (\r\n    <Responsive getWidth={GetWidthOfComponent} minWidth={Responsive.onlyTablet.minWidth}>\r\n\r\n      <Grid>\r\n        <_Header />\r\n        <_NavigationItems />\r\n      </Grid>\r\n\r\n      <_BrowseCategories />\r\n\r\n      <_MovieGenres onSearchHandler={e => setInputValue(e.target.value)} />\r\n\r\n      {/* {inputValue ? <_SearchMovieList onSearchHandler={e => setInputValue(e.target.value)}  listOfMovies={movieList} searchInputValue={inputValue} onCloseModal={() => setInputValue('')}/> : <_MovieGenresList />} */}\r\n\r\n      {inputValue ? <_SearchMovie /> : <_MovieGenresList />}\r\n\r\n      {/* <_MovieGenresList /> */}\r\n\r\n      {/* {children} */}\r\n      {/* <div>{movieList}</div> */}\r\n\r\n    </Responsive >\r\n  )\r\n}\r\n\r\n\r\nconst _SearchMovie = (props) => {\r\n  console.log(props.movie)\r\n  return (\r\n    <div>\r\n      {props.movie.map(x => <div>{x}</div>)}\r\n    </div>\r\n  )\r\n}\r\nexport default DesktopComponent;"]},"metadata":{},"sourceType":"module"}