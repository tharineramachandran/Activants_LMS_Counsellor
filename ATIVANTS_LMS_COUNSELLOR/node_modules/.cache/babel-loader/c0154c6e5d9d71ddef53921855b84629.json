{"ast":null,"code":"var _jsxFileName = \"E:\\\\ShawMovieWebsite\\\\shaw-website\\\\src\\\\Store\\\\_Redux.js\";\nimport React, { useReducer, useEffect, useState } from 'react';\nimport _AxiosInstance from '../Store/_AxiosInstance';\nimport DisplayAllGeresOfMovies from '../Containers/DisplayAllGeresOfMovies';\nimport { Grid, Image } from 'semantic-ui-react';\nimport SearchGenresResult from '../Containers/SearchGenresResult';\nconst initState = {\n  movieList: []\n};\n\nconst reducder = (prevState, action) => {\n  switch (action.type) {\n    case 'FETCH_TRENDING':\n      return {\n        movieList: action.payload.data.results\n      };\n\n    case 'FETCH_HORROW':\n      return {\n        movieList: action.payload.data.results\n      };\n\n    default:\n      return prevState;\n  }\n};\n\nconst _Redux = props => {\n  const [stateTrending, dispatchTrending] = useReducer(reducder, initState);\n  const [seletedGenreMovieId, setSeletedGenreMovieId] = useState({\n    type: '',\n    id: ''\n  });\n  const [value, setValue] = useState(false);\n  let movies;\n  useEffect(() => {\n    _AxiosInstance.get('/trending/all/week?api_key=028e8ea4ca7d9164d085c9238979098b&language=en-US').then(data => {\n      dispatchTrending({\n        type: props.FetchType,\n        payload: data\n      });\n    }).catch(err => {});\n  }, []);\n\n  const selectedMovie = (movieId, mediaType) => {\n    setSeletedGenreMovieId({\n      id: movieId,\n      type: mediaType\n    });\n  };\n\n  if (stateTrending.movieList) {\n    movies = stateTrending.movieList.map(movie => {\n      let movieImageUrl = 'https://image.tmdb.org/t/p/w500/' + movie.backdrop_path;\n\n      if (movieImageUrl !== null) {\n        const movieComponent = /*#__PURE__*/React.createElement(DisplayAllGeresOfMovies, {\n          movieDetials: () => selectedMovie(),\n          key: movie.id,\n          movie: movie,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }\n        });\n        return movieComponent;\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: \"GridRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    className: \"GridColumn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"scrollmenuImage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"center\", {\n    className: \"customImageDisplay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }\n  }, movies)))), seletedGenreMovieId ? /*#__PURE__*/React.createElement(SearchGenresResult, {\n    movieId: seletedGenreMovieId.id,\n    type: seletedGenreMovieId.type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 36\n    }\n  }) : \" \");\n};\n\nexport default _Redux;","map":{"version":3,"sources":["E:/ShawMovieWebsite/shaw-website/src/Store/_Redux.js"],"names":["React","useReducer","useEffect","useState","_AxiosInstance","DisplayAllGeresOfMovies","Grid","Image","SearchGenresResult","initState","movieList","reducder","prevState","action","type","payload","data","results","_Redux","props","stateTrending","dispatchTrending","seletedGenreMovieId","setSeletedGenreMovieId","id","value","setValue","movies","get","then","FetchType","catch","err","selectedMovie","movieId","mediaType","map","movie","movieImageUrl","backdrop_path","movieComponent"],"mappings":"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","sourcesContent":["import React, { useReducer, useEffect, useState } from 'react';\r\nimport _AxiosInstance from '../Store/_AxiosInstance'\r\nimport DisplayAllGeresOfMovies from '../Containers/DisplayAllGeresOfMovies';\r\nimport { Grid, Image } from 'semantic-ui-react'\r\nimport SearchGenresResult from '../Containers/SearchGenresResult'\r\n\r\n\r\n\r\nconst initState = {\r\n    movieList: [],\r\n}\r\n\r\nconst reducder = (prevState, action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_TRENDING':\r\n            return {\r\n                movieList: action.payload.data.results,\r\n            };\r\n\r\n        case 'FETCH_HORROW':\r\n            return {\r\n                movieList: action.payload.data.results,\r\n            };\r\n\r\n        default:\r\n            return prevState;\r\n    }\r\n}\r\n\r\nconst _Redux = props => {\r\n\r\n    const [stateTrending, dispatchTrending] = useReducer(reducder, initState);\r\n    const [seletedGenreMovieId, setSeletedGenreMovieId] = useState({type:'',id:''});\r\n    const [value, setValue] = useState(false);\r\n\r\n    let movies;\r\n\r\n    useEffect(() => {\r\n        _AxiosInstance.get('/trending/all/week?api_key=028e8ea4ca7d9164d085c9238979098b&language=en-US')\r\n            .then(data => {\r\n                dispatchTrending({ type: props.FetchType, payload: data })\r\n            })\r\n            .catch(err => {\r\n\r\n            })\r\n    }, []);\r\n\r\n    const selectedMovie = (movieId,mediaType) => {\r\n        setSeletedGenreMovieId({\r\n            id : movieId,\r\n            type : mediaType\r\n        });\r\n\r\n    }\r\n\r\n    if (stateTrending.movieList) {\r\n        movies = stateTrending.movieList.map((movie) => {\r\n            let movieImageUrl = 'https://image.tmdb.org/t/p/w500/' + movie.backdrop_path;\r\n\r\n            if (movieImageUrl !== null) {\r\n                const movieComponent = (\r\n                    <DisplayAllGeresOfMovies\r\n                        movieDetials={() => selectedMovie()}\r\n                        key={movie.id}\r\n                        movie={movie}\r\n                    />\r\n                );\r\n                return movieComponent;\r\n            }\r\n        });\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid className=\"GridRow\">\r\n                <Grid.Column className=\"GridColumn\">\r\n                    <div className=\"scrollmenuImage\">\r\n                        {\r\n                            <center className=\"customImageDisplay\">\r\n                                {movies}\r\n                            </center>\r\n                        }\r\n                    </div>\r\n                </Grid.Column>\r\n            </Grid>\r\n            {seletedGenreMovieId ? <SearchGenresResult movieId={seletedGenreMovieId.id} type={seletedGenreMovieId.type} /> : \" \"}\r\n        </React.Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default _Redux;"]},"metadata":{},"sourceType":"module"}