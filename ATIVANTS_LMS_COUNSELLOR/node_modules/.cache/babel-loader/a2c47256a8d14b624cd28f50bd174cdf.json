{"ast":null,"code":"var _jsxFileName = \"E:\\\\CircuitBreakerShow\\\\src\\\\SecondaryComponents\\\\Desktop\\\\_NavigationItems.js\";\nimport React from 'react';\nimport { Button, Container, Menu, Responsive, Segment, Visibility, Grid, Divider, Image, Header, Search, Icon, Dropdown, Label } from 'semantic-ui-react';\nimport _HeaderMovieCast from './_HeaderMovieCast';\nimport _Header from '../Desktop/_Header';\nimport imax from '../../Static/Images/imax.png';\nimport premiere from '../../Static/Images/premiere.png';\nimport lumiere from '../../Static/Images/lumiere.png';\nimport dreamers from '../../Static/Images/dreamers.png';\nimport shaw from '../../Static/Images/shaw.png';\n\nconst _NavigationItems = () => {\n  const [inputValue, setInputValue] = useState('');\n  const [movieList, setMovieList] = useState([]);\n  const [movieOverview, setMovieOverview] = useState({});\n  useEffect(() => {\n    const url = `https://api.themoviedb.org/3/search/multi?api_key=028e8ea4ca7d9164d085c9238979098b&language=en-US&include_adult=false&query=${inputValue}`;\n    axios.get(url).then(res => {\n      const results = res.data.results;\n      let movieImageUrl;\n      let movieRows = [];\n      results.forEach(movie => {\n        if (movie.poster_path !== null && movie.media_type !== \"person\") {\n          movieImageUrl = \"https://image.tmdb.org/t/p/w500\" + movie.poster_path;\n          const movieComponent = /*#__PURE__*/React.createElement(_SearchMovieListDisplay, {\n            movieDetials: () => selectMovieHandler(movie),\n            key: movie.id,\n            movieImage: movieImageUrl,\n            movie: movie,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 38\n            }\n          });\n          movieRows.push(movieComponent);\n        }\n      });\n      setMovieList(movieRows);\n    }).catch(error => {\n      console.log(\"errror\", error);\n    });\n    return () => {\n      setMovieList([]);\n      console.log(\"cleaned DC\");\n    };\n  }, [inputValue]);\n\n  const selectMovieHandler = movie => {\n    let url;\n    let urlVideo;\n    let details = {};\n\n    if (movie.media_type === \"movie\") {\n      const movieId = movie.id;\n      console.log(movieId);\n      url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=028e8ea4ca7d9164d085c9238979098b&append_to_response=videos`;\n    } else if (movie.media_type === \"tv\") {\n      const tvId = movie.id;\n      url = `https://api.themoviedb.org/3/tv/${tvId}?api_key=028e8ea4ca7d9164d085c9238979098b&append_to_response=videos`;\n    }\n\n    axios.get(url).then(res => {\n      const movieData = res.data;\n      setMovieOverview(movieData);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Grid.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    padded: true,\n    width: 2,\n    verticalAlign: \"middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(_HeaderMovieCast, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default _NavigationItems;","map":{"version":3,"sources":["E:/CircuitBreakerShow/src/SecondaryComponents/Desktop/_NavigationItems.js"],"names":["React","Button","Container","Menu","Responsive","Segment","Visibility","Grid","Divider","Image","Header","Search","Icon","Dropdown","Label","_HeaderMovieCast","_Header","imax","premiere","lumiere","dreamers","shaw","_NavigationItems","inputValue","setInputValue","useState","movieList","setMovieList","movieOverview","setMovieOverview","useEffect","url","axios","get","then","res","results","data","movieImageUrl","movieRows","forEach","movie","poster_path","media_type","movieComponent","selectMovieHandler","id","push","catch","error","console","log","urlVideo","details","movieId","tvId","movieData"],"mappings":"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","sourcesContent":["import React from 'react'\r\n\r\nimport {\r\n    Button, Container, Menu, Responsive, Segment,\r\n    Visibility, Grid, Divider, Image, Header, Search, Icon, Dropdown, Label\r\n}\r\n    from 'semantic-ui-react'\r\n\r\nimport _HeaderMovieCast from './_HeaderMovieCast';\r\nimport _Header from '../Desktop/_Header'\r\nimport imax from '../../Static/Images/imax.png';\r\nimport premiere from '../../Static/Images/premiere.png';\r\nimport lumiere from '../../Static/Images/lumiere.png';\r\nimport dreamers from '../../Static/Images/dreamers.png';\r\nimport shaw from '../../Static/Images/shaw.png'\r\n\r\n\r\nconst _NavigationItems = () => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [movieList, setMovieList] = useState([]);\r\n    const [movieOverview, setMovieOverview] = useState({});\r\n  \r\n    useEffect(() => {\r\n  \r\n      const url = `https://api.themoviedb.org/3/search/multi?api_key=028e8ea4ca7d9164d085c9238979098b&language=en-US&include_adult=false&query=${inputValue}`;\r\n      axios.get(url)\r\n        .then(res => {\r\n          const results = res.data.results;\r\n          let movieImageUrl;\r\n          let movieRows = [];\r\n  \r\n          results.forEach((movie) => {\r\n            if (movie.poster_path !== null && movie.media_type !== \"person\") {\r\n              movieImageUrl = \"https://image.tmdb.org/t/p/w500\" + movie.poster_path;\r\n  \r\n              const movieComponent = <_SearchMovieListDisplay\r\n                movieDetials={() => selectMovieHandler(movie)}\r\n                key={movie.id}\r\n                movieImage={movieImageUrl}\r\n                movie={movie}\r\n              />\r\n              movieRows.push(movieComponent);\r\n            }\r\n          })\r\n  \r\n          setMovieList(movieRows);\r\n  \r\n        }).catch(error => {\r\n          console.log(\"errror\", error);\r\n        });\r\n  \r\n      return () => {\r\n        setMovieList([]);\r\n        console.log(\"cleaned DC\")\r\n      }\r\n  \r\n    }, [inputValue]);\r\n  \r\n    const selectMovieHandler = movie => {\r\n      let url;\r\n      let urlVideo;\r\n      let details = {};\r\n      if (movie.media_type === \"movie\") {\r\n        const movieId = movie.id;\r\n        console.log(movieId)\r\n        url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=028e8ea4ca7d9164d085c9238979098b&append_to_response=videos`;\r\n  \r\n      } else if (movie.media_type === \"tv\") {\r\n        const tvId = movie.id\r\n        url = `https://api.themoviedb.org/3/tv/${tvId}?api_key=028e8ea4ca7d9164d085c9238979098b&append_to_response=videos`;\r\n      }\r\n  \r\n      axios.get(url)\r\n        .then(res => {\r\n          const movieData = res.data;\r\n          setMovieOverview(movieData);\r\n  \r\n        }).catch(error => {\r\n          console.log(error);\r\n        });\r\n    }\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <_Header />\r\n            <Grid.Row>\r\n                <Grid.Column padded width={2} verticalAlign='middle'>\r\n                </Grid.Column>\r\n                <Grid.Column width={12} >\r\n                    <_HeaderMovieCast />\r\n                </Grid.Column>\r\n                <Grid.Column width={2} >\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default _NavigationItems;"]},"metadata":{},"sourceType":"module"}