{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\ACTIVANTS\\\\Desktop\\\\LMS Councellor\\\\Activants_LMS_Counsellor\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"C:\\\\Users\\\\ACTIVANTS\\\\Desktop\\\\LMS Councellor\\\\Activants_LMS_Counsellor\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ACTIVANTS\\\\Desktop\\\\LMS Councellor\\\\Activants_LMS_Counsellor\\\\ATIVANTS_LMS_COUNSELLOR\\\\src\\\\SecondaryComponents\\\\Desktop\\\\RegistrationComponents\\\\_Registration_Fifth.js\";\n\nimport React, { useState, useEffect, useReducer, useContext } from 'react';\nimport { Header, Icon, Form, Image, Message, Segment, Grid, Modal, Search, Button, Dimmer, Loader, Input, List, Label, Divider, Item, Dropdown, Select, Checkbox } from 'semantic-ui-react';\nimport { useForm } from \"react-hook-form\";\nimport Timekeeper from 'react-timekeeper';\nimport { DateInput, TimeInput, DateTimeInput, DatesRangeInput } from 'semantic-ui-calendar-react';\nvar initialState = {\n  time: ''\n};\n\nvar reducer = function reducer(prevState, action) {\n  switch (action.type) {\n    case \"Mon\":\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        time: action.value\n      });\n\n    case \"Tue\":\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        FirstCount: prevState.FirstCount - action.value\n      });\n\n    case \"Wed\":\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        SecondCount: prevState.SecondCount + action.value\n      });\n\n    case \"Thu\":\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        SecondCount: prevState.SecondCount - action.value\n      });\n\n    case \"Fri\":\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        SecondCount: prevState.SecondCount - action.value\n      });\n\n    case \"Sat\":\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        SecondCount: prevState.SecondCount - action.value\n      });\n\n    default:\n      return prevState;\n  }\n};\n\nvar Registration_Fifth = function Registration_Fifth(_ref) {\n  var formData = _ref.formData,\n      setForm = _ref.setForm,\n      navigation = _ref.navigation;\n  var COUNSELLOR_TIME_ZONE_CODE = formData.COUNSELLOR_TIME_ZONE_CODE,\n      COUNSELLOR_AVAILABILITY_DATE = formData.COUNSELLOR_AVAILABILITY_DATE,\n      COUNSELLOR_AVAILABILITY_TIME_FROM = formData.COUNSELLOR_AVAILABILITY_TIME_FROM,\n      COUNSELLOR_AVAILABILITY_TIME_TO = formData.COUNSELLOR_AVAILABILITY_TIME_TO;\n\n  var _useReducer = useReducer(reducer, initialState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var _useState = useState({\n    time: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      monday = _useState2[0],\n      setMonday = _useState2[1];\n\n  var friendOptions = [{\n    key: 'Jenny Hess',\n    text: 'Jenny Hess',\n    value: 'Jenny Hess',\n    image: {\n      avatar: true,\n      src: '/images/avatar/small/jenny.jpg'\n    }\n  }, {\n    key: 'Elliot Fu',\n    text: 'Elliot Fu',\n    value: 'Elliot Fu',\n    image: {\n      avatar: true,\n      src: '/images/avatar/small/elliot.jpg'\n    }\n  }];\n\n  var _useForm = useForm({}),\n      handleSubmit = _useForm.handleSubmit,\n      register = _useForm.register,\n      errors = _useForm.errors;\n\n  var onSubmit = function onSubmit(data) {\n    navigation.next();\n  };\n\n  var Counsellor_TimeZone = [{\n    title: \"Choose Institute\",\n    name: [\"Adrenaline Addicts\", \"Culture Lovers\", \"Aquatic adventures\", \"Beach enthusiasts\"],\n    code: [0, 1, 2, 3]\n  }];\n\n  var onTimeChangeHandler = function onTimeChangeHandler(val) {\n    setMonday(_objectSpread(_objectSpread({}, monday), {}, {\n      time: val.target.value\n    }));\n  };\n\n  useEffect(function () {\n    formData.COUNSELLOR_AVAILABILITY_TIME_FROM = monday.time;\n  }, [monday.time]);\n  useEffect(function () {\n    if (COUNSELLOR_AVAILABILITY_TIME_FROM) setMonday({\n      time: COUNSELLOR_AVAILABILITY_TIME_FROM\n    });\n  }, []);\n  console.log(formData); // console.log(\"monday.time = \", monday.time);\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    size: \"small\",\n    onSubmit: handleSubmit(onSubmit),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"center\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 25\n    }\n  }, \"Availability\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 25\n    }\n  }, \"Set your time zone\"), /*#__PURE__*/React.createElement(Item.Group, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Item.Content, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 45\n    }\n  }, \"Country of origin\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"COUNSELLOR_TIME_ZONE_CODE\",\n    value: COUNSELLOR_TIME_ZONE_CODE,\n    onChange: setForm,\n    placeholder: \"choose subject\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 45\n    }\n  }, Counsellor_TimeZone.map(function (level) {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      disabled: true,\n      selected: true,\n      hidden: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 65\n      }\n    }, level.title), level.name.map(function (name, code) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: code,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 100\n        }\n      }, name);\n    }));\n  }))))))), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 25\n    }\n  }, \"Set your Availability\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 55\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 16,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"center\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Segment, {\n    style: {\n      width: '50%',\n      textAlign: 'center',\n      border: '0px solid transparent'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Segment.Group, {\n    horizontal: true,\n    size: \"tiny\",\n    className: \"HeadingForAvailability\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Segment, {\n    className: \"customSegment\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    color: \"teal\",\n    horizontal: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 53\n    }\n  }, \"\\xA0\\xA0\\xA0\\xA0\\xA0Days\\xA0\\xA0\\xA0\\xA0\\xA0\")), /*#__PURE__*/React.createElement(Segment, {\n    className: \"customSegment\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    color: \"teal\",\n    horizontal: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 53\n    }\n  }, \"\\xA0\\xA0\\xA0\\xA0\\xA0From\\xA0\\xA0\\xA0\\xA0\\xA0\")), /*#__PURE__*/React.createElement(Segment, {\n    className: \"customSegment\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    color: \"teal\",\n    horizontal: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 53\n    }\n  }, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0To\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\"))), /*#__PURE__*/React.createElement(Segment.Group, {\n    horizontal: true,\n    size: \"tiny\",\n    className: \"HeadingForAvailability\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Segment, {\n    className: \"customSegment\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    style: {\n      display: 'block'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    label: \"Monday\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 57\n    }\n  }))), /*#__PURE__*/React.createElement(Segment, {\n    className: \"customSegment\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"time\",\n    step: \"1\",\n    value: monday.time ? monday.time : formData.COUNSELLOR_AVAILABILITY_TIME_FROM,\n    name: \"COUNSELLOR_AVAILABILITY_TIME_FROM\",\n    className: \"form-control\",\n    placeholder: \"Time\",\n    onChange: onTimeChangeHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 53\n    }\n  })), /*#__PURE__*/React.createElement(Segment, {\n    className: \"customSegment\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"time\",\n    step: \"1\",\n    value: monday.time ? monday.time : formData.COUNSELLOR_AVAILABILITY_TIME_FROM,\n    name: \"COUNSELLOR_AVAILABILITY_TIME_FROM\",\n    className: \"form-control\",\n    placeholder: \"Time\",\n    onChange: onTimeChangeHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 53\n    }\n  }))), /*#__PURE__*/React.createElement(Segment.Group, {\n    horizontal: true,\n    size: \"tiny\",\n    className: \"HeadingForAvailability\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Segment, {\n    className: \"customSegment\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    style: {\n      display: 'block'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    label: \"Monday\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 57\n    }\n  }))), /*#__PURE__*/React.createElement(Segment, {\n    className: \"customSegment\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"time\",\n    step: \"1\",\n    value: monday.time ? monday.time : formData.COUNSELLOR_AVAILABILITY_TIME_FROM,\n    name: \"COUNSELLOR_AVAILABILITY_TIME_FROM\",\n    className: \"form-control\",\n    placeholder: \"Time\",\n    onChange: onTimeChangeHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 53\n    }\n  })), /*#__PURE__*/React.createElement(Segment, {\n    className: \"customSegment\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"time\",\n    step: \"1\",\n    value: monday.time ? monday.time : formData.COUNSELLOR_AVAILABILITY_TIME_FROM,\n    name: \"COUNSELLOR_AVAILABILITY_TIME_FROM\",\n    className: \"form-control\",\n    placeholder: \"Time\",\n    onChange: onTimeChangeHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 53\n    }\n  })))))))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    color: \"teal\",\n    fluid: true,\n    size: \"large\",\n    onClick: function onClick() {\n      return navigation.previous();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 25\n    }\n  }, \"Back\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"teal\",\n    fluid: true,\n    size: \"large\",\n    type: \"submit\",\n    onClick: function onClick() {\n      return navigation.next();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 25\n    }\n  }, \"Next\")))));\n};\n\nexport default Registration_Fifth;","map":{"version":3,"sources":["C:/Users/ACTIVANTS/Desktop/LMS Councellor/Activants_LMS_Counsellor/ATIVANTS_LMS_COUNSELLOR/src/SecondaryComponents/Desktop/RegistrationComponents/_Registration_Fifth.js"],"names":["React","useState","useEffect","useReducer","useContext","Header","Icon","Form","Image","Message","Segment","Grid","Modal","Search","Button","Dimmer","Loader","Input","List","Label","Divider","Item","Dropdown","Select","Checkbox","useForm","Timekeeper","DateInput","TimeInput","DateTimeInput","DatesRangeInput","initialState","time","reducer","prevState","action","type","value","FirstCount","SecondCount","Registration_Fifth","formData","setForm","navigation","COUNSELLOR_TIME_ZONE_CODE","COUNSELLOR_AVAILABILITY_DATE","COUNSELLOR_AVAILABILITY_TIME_FROM","COUNSELLOR_AVAILABILITY_TIME_TO","state","dispatch","monday","setMonday","friendOptions","key","text","image","avatar","src","handleSubmit","register","errors","onSubmit","data","next","Counsellor_TimeZone","title","name","code","onTimeChangeHandler","val","target","console","log","map","level","width","textAlign","border","display","previous"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer,  useContext } from 'react';\r\nimport {\r\n    Header, Icon, Form, Image, Message,\r\n    Segment, Grid, Modal, Search, Button, Dimmer, Loader, Input, List, Label, Divider, Item, Dropdown, Select, Checkbox\r\n} from 'semantic-ui-react';\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport Timekeeper from 'react-timekeeper';\r\nimport { DateInput, TimeInput, DateTimeInput, DatesRangeInput } from 'semantic-ui-calendar-react';\r\n\r\nconst initialState =\r\n{\r\n    time: ''\r\n}\r\n\r\nconst reducer = (prevState, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"Mon\":\r\n            return {\r\n                ...prevState,\r\n                time: action.value\r\n            }\r\n\r\n        case \"Tue\":\r\n            return {\r\n                ...prevState,\r\n                FirstCount: prevState.FirstCount - action.value\r\n            }\r\n\r\n        case \"Wed\":\r\n            return {\r\n                ...prevState,\r\n                SecondCount: prevState.SecondCount + action.value\r\n            }\r\n\r\n        case \"Thu\":\r\n            return {\r\n                ...prevState,\r\n                SecondCount: prevState.SecondCount - action.value\r\n            }\r\n        case \"Fri\":\r\n            return {\r\n                ...prevState,\r\n                SecondCount: prevState.SecondCount - action.value\r\n            }\r\n        case \"Sat\":\r\n            return {\r\n                ...prevState,\r\n                SecondCount: prevState.SecondCount - action.value\r\n            }\r\n\r\n        default:\r\n            return prevState;\r\n    }\r\n}\r\n\r\nconst Registration_Fifth = ({ formData, setForm, navigation }) => {\r\n\r\n    const {\r\n        COUNSELLOR_TIME_ZONE_CODE,\r\n        COUNSELLOR_AVAILABILITY_DATE,\r\n        COUNSELLOR_AVAILABILITY_TIME_FROM,\r\n        COUNSELLOR_AVAILABILITY_TIME_TO\r\n    } = formData;\r\n\r\n    const [state, dispatch] = useReducer(reducer, initialState)\r\n\r\n    const [monday, setMonday] = useState({ time: '' });\r\n\r\n    const friendOptions = [\r\n        {\r\n            key: 'Jenny Hess',\r\n            text: 'Jenny Hess',\r\n            value: 'Jenny Hess',\r\n            image: { avatar: true, src: '/images/avatar/small/jenny.jpg' },\r\n        },\r\n        {\r\n            key: 'Elliot Fu',\r\n            text: 'Elliot Fu',\r\n            value: 'Elliot Fu',\r\n            image: { avatar: true, src: '/images/avatar/small/elliot.jpg' },\r\n        },\r\n    ]\r\n\r\n    const { handleSubmit, register, errors } = useForm({\r\n\r\n    });\r\n\r\n\r\n\r\n    const onSubmit = (data) => {\r\n        navigation.next()\r\n    };\r\n\r\n    const Counsellor_TimeZone = [\r\n        {\r\n            title: \"Choose Institute\",\r\n            name: [\r\n                \"Adrenaline Addicts\", \"Culture Lovers\", \"Aquatic adventures\", \"Beach enthusiasts\"\r\n            ],\r\n            code: [0, 1, 2, 3]\r\n        }\r\n    ]\r\n\r\n    const onTimeChangeHandler = (val) => {\r\n        setMonday({ ...monday, time: val.target.value })\r\n    }\r\n\r\n    useEffect(() => {\r\n        formData.COUNSELLOR_AVAILABILITY_TIME_FROM = monday.time;\r\n    }, [monday.time])\r\n\r\n    useEffect(() => {\r\n\r\n        if (COUNSELLOR_AVAILABILITY_TIME_FROM)\r\n            setMonday({ time: COUNSELLOR_AVAILABILITY_TIME_FROM })\r\n    }, [])\r\n\r\n    console.log(formData)\r\n    // console.log(\"monday.time = \", monday.time);\r\n\r\n    return (\r\n\r\n        <Grid>\r\n            <Grid.Column>\r\n                <Form size='small' onSubmit={handleSubmit(onSubmit)}>\r\n                    <center>\r\n\r\n                        <h1>Availability</h1>\r\n                        <h2>Set your time zone</h2>\r\n\r\n                        <Item.Group>\r\n                            <Item>\r\n                                <Item.Content>\r\n                                    <Form.Group>\r\n                                        <Form.Field className=\"CustomForm\">\r\n                                            <label>Country of origin</label>\r\n                                            <select name=\"COUNSELLOR_TIME_ZONE_CODE\" value={COUNSELLOR_TIME_ZONE_CODE} onChange={setForm} placeholder=\"choose subject\">\r\n                                                {\r\n                                                    Counsellor_TimeZone.map((level) => {\r\n                                                        return (\r\n                                                            <React.Fragment>\r\n                                                                <option disabled selected hidden>{level.title}</option>\r\n                                                                {\r\n                                                                    level.name.map((name, code) => <option value={code}>{name}</option>)\r\n                                                                }\r\n                                                            </React.Fragment>\r\n                                                        )\r\n\r\n                                                    })\r\n                                                }\r\n                                            </select>\r\n                                        </Form.Field>\r\n                                    </Form.Group>\r\n                                </Item.Content>\r\n                            </Item>\r\n\r\n                        </Item.Group>\r\n\r\n                        <h4>Set your Availability</h4><br />\r\n\r\n                        <Grid>\r\n                            <Grid.Row>\r\n                                <Grid.Column width={16}>\r\n                                    <center>\r\n                                        <Segment style={{ width: '50%', textAlign: 'center', border: '0px solid transparent' }}>\r\n\r\n\r\n                                            <Segment.Group horizontal size=\"tiny\" className=\"HeadingForAvailability\">\r\n                                                <Segment className=\"customSegment\">\r\n                                                    <Label color=\"teal\" horizontal>\r\n                                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Days&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                             </Label>\r\n                                                </Segment>\r\n                                                <Segment className=\"customSegment\">\r\n                                                    <Label color=\"teal\" horizontal>\r\n                                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;From&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                             </Label>\r\n                                                </Segment>\r\n                                                <Segment className=\"customSegment\">\r\n                                                    <Label color=\"teal\" horizontal>\r\n                                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                             </Label>\r\n                                                </Segment>\r\n                                            </Segment.Group>\r\n\r\n\r\n                                            <Segment.Group horizontal size=\"tiny\" className=\"HeadingForAvailability\">\r\n                                                <Segment className=\"customSegment\">\r\n                                                    <Label style={{ display: 'block' }}>\r\n                                                        <Checkbox label='Monday' />\r\n\r\n                                                    </Label>\r\n                                                </Segment>\r\n                                                <Segment className=\"customSegment\">\r\n                                                    <input\r\n                                                        type=\"time\"\r\n                                                        step=\"1\"\r\n                                                        value={monday.time ? monday.time : formData.COUNSELLOR_AVAILABILITY_TIME_FROM}\r\n                                                        name=\"COUNSELLOR_AVAILABILITY_TIME_FROM\"\r\n                                                        className=\"form-control\"\r\n                                                        placeholder=\"Time\"\r\n                                                        onChange={onTimeChangeHandler}\r\n                                                    />\r\n                                                </Segment>\r\n                                                <Segment className=\"customSegment\">\r\n                                                    <input\r\n                                                        type=\"time\"\r\n                                                        step=\"1\"\r\n                                                        value={monday.time ? monday.time : formData.COUNSELLOR_AVAILABILITY_TIME_FROM}\r\n                                                        name=\"COUNSELLOR_AVAILABILITY_TIME_FROM\"\r\n                                                        className=\"form-control\"\r\n                                                        placeholder=\"Time\"\r\n                                                        onChange={onTimeChangeHandler}\r\n                                                    /></Segment>\r\n                                            </Segment.Group>\r\n\r\n\r\n                                            <Segment.Group horizontal size=\"tiny\" className=\"HeadingForAvailability\">\r\n                                                <Segment className=\"customSegment\">\r\n                                                    <Label style={{ display: 'block' }}>\r\n                                                        <Checkbox label='Monday' />\r\n\r\n                                                    </Label>\r\n                                                </Segment>\r\n                                                <Segment className=\"customSegment\">\r\n                                                    <input\r\n                                                        type=\"time\"\r\n                                                        step=\"1\"\r\n                                                        value={monday.time ? monday.time : formData.COUNSELLOR_AVAILABILITY_TIME_FROM}\r\n                                                        name=\"COUNSELLOR_AVAILABILITY_TIME_FROM\"\r\n                                                        className=\"form-control\"\r\n                                                        placeholder=\"Time\"\r\n                                                        onChange={onTimeChangeHandler}\r\n                                                    />\r\n                                                </Segment>\r\n                                                <Segment className=\"customSegment\">\r\n                                                    <input\r\n                                                        type=\"time\"\r\n                                                        step=\"1\"\r\n                                                        value={monday.time ? monday.time : formData.COUNSELLOR_AVAILABILITY_TIME_FROM}\r\n                                                        name=\"COUNSELLOR_AVAILABILITY_TIME_FROM\"\r\n                                                        className=\"form-control\"\r\n                                                        placeholder=\"Time\"\r\n                                                        onChange={onTimeChangeHandler}\r\n                                                    /></Segment>\r\n                                            </Segment.Group>\r\n\r\n                                        </Segment>\r\n                                    </center>\r\n                                </Grid.Column>\r\n                            </Grid.Row>\r\n                        </Grid>\r\n                        <br />\r\n                        <Button\r\n                            color='teal'\r\n                            fluid\r\n                            size='large'\r\n                            onClick={() => navigation.previous()}\r\n                        >\r\n                            Back\r\n                            </Button>\r\n\r\n                        <Button\r\n                            color='teal'\r\n                            fluid\r\n                            size='large'\r\n                            type=\"submit\"\r\n                            onClick={() => navigation.next()}\r\n                        >\r\n                            Next\r\n                    </Button>\r\n\r\n                    </center>\r\n                </Form>\r\n\r\n            </Grid.Column>\r\n        </Grid >\r\n    )\r\n\r\n}\r\n\r\nexport default Registration_Fifth;"]},"metadata":{},"sourceType":"module"}