{"ast":null,"code":"import _slicedToArray from\"E:\\\\CircuitBreakerShow\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{Component,useState,useEffect,useRef,useReducer}from'react';import _Header from'../SecondaryComponents/Desktop/_Header';import _NavigationItems from'../SecondaryComponents/Desktop/_NavigationItems';import _MovieGenres from'../SecondaryComponents/Desktop/_MovieGenres';import axios from'axios';import _SearchMovieList from'../SecondaryComponents/Desktop/_SearchMovieList';import _BrowseCategories from'../SecondaryComponents/Desktop/_BrowseCategories';import _SearchMovieListDisplay from'../SecondaryComponents/Desktop/_SearchMovieListDisplay';var SearchGenresResult=function SearchGenresResult(_ref){var Ids=_ref.Ids;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),inputValueNew=_useState2[0],setTheNewInputValue=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),movieList=_useState4[0],setMovieList=_useState4[1];var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),movieOverview=_useState6[0],setMovieOverview=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),value=_useState8[0],setValue=_useState8[1];var typeInput=function typeInput(e){setTheNewInputValue(e.target.value);};var closeModalAgain=function closeModalAgain(){setTheNewInputValue('');};useEffect(function(){var url=\"https://api.themoviedb.org/3/search/multi?api_key=028e8ea4ca7d9164d085c9238979098b&language=en-US&include_adult=false&query=\".concat(inputValueNew);axios.get(url).then(function(res){var results=res.data.results;var movieImageUrl;var movieRows=[];results.forEach(function(movie){if(movie.poster_path!==null&&movie.media_type!==\"person\"){movieImageUrl=\"https://image.tmdb.org/t/p/w500\"+movie.poster_path;var movieComponent=/*#__PURE__*/React.createElement(_SearchMovieListDisplay,{movieDetials:function movieDetials(){return selectMovieHandler(movie);},key:movie.id,movieImage:movieImageUrl,movie:movie});movieRows.push(movieComponent);// console.log(movie)\n}});setMovieList(movieRows);}).catch(function(error){console.log(\"errror\",error);});return function(){setMovieList([]);console.log(\"cleaned DC\");};},[inputValueNew]);var Url=function Url(x){return\"https://api.themoviedb.org/3/movie/\".concat(x,\"?api_key=028e8ea4ca7d9164d085c9238979098b&append_to_response=videos\");};var UrlTv=function UrlTv(x){return\"https://api.themoviedb.org/3/tv/\".concat(x,\"?api_key=028e8ea4ca7d9164d085c9238979098b&append_to_response=videos\");};var callUrl=function callUrl(url){axios.get(url).then(function(res){var movieData=res.data;setMovieOverview(movieData);}).catch(function(error){console.log(error);});};useEffect(function(){var url;if(Ids.type===\"movie\")url=Url(Ids.id);else if(Ids.type===\"tv\")url=UrlTv(Ids.id);callUrl(url);setTheNewInputValue(Ids.name);setValue(true);},[Ids]);var selectMovieHandler=function selectMovieHandler(movie){var url;if(movie.media_type===\"movie\")url=Url(movie.id);else if(movie.media_type===\"tv\")url=UrlTv(movie.id);callUrl(url);};return/*#__PURE__*/React.createElement(\"div\",null,value?/*#__PURE__*/React.createElement(_SearchMovieList,{movie:movieOverview,listOfMovies:movieList,onSearchHandler:typeInput,searchInputValue:inputValueNew,onCloseModal:closeModalAgain}):\" \");};export default SearchGenresResult;","map":{"version":3,"sources":["E:/CircuitBreakerShow/src/Containers/SearchGenresResult.js"],"names":["React","Component","useState","useEffect","useRef","useReducer","_Header","_NavigationItems","_MovieGenres","axios","_SearchMovieList","_BrowseCategories","_SearchMovieListDisplay","SearchGenresResult","Ids","inputValueNew","setTheNewInputValue","movieList","setMovieList","movieOverview","setMovieOverview","value","setValue","typeInput","e","target","closeModalAgain","url","get","then","res","results","data","movieImageUrl","movieRows","forEach","movie","poster_path","media_type","movieComponent","selectMovieHandler","id","push","catch","error","console","log","Url","x","UrlTv","callUrl","movieData","type","name"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect, useRef, useReducer } from 'react'\r\nimport _Header from '../SecondaryComponents/Desktop/_Header'\r\nimport _NavigationItems from '../SecondaryComponents/Desktop/_NavigationItems'\r\nimport _MovieGenres from '../SecondaryComponents/Desktop/_MovieGenres'\r\nimport axios from 'axios'\r\nimport _SearchMovieList from '../SecondaryComponents/Desktop/_SearchMovieList'\r\nimport _BrowseCategories from '../SecondaryComponents/Desktop/_BrowseCategories'\r\nimport _SearchMovieListDisplay from '../SecondaryComponents/Desktop/_SearchMovieListDisplay'\r\n\r\nconst SearchGenresResult = ({ Ids }) => {\r\n\r\n  const [inputValueNew, setTheNewInputValue] = useState('');\r\n  const [movieList, setMovieList] = useState([]);\r\n  const [movieOverview, setMovieOverview] = useState({});\r\n  const [value, setValue] = useState(false);\r\n\r\n  const typeInput = e => {\r\n    setTheNewInputValue(e.target.value);\r\n  }\r\n\r\n  const closeModalAgain = () => {\r\n    setTheNewInputValue('');\r\n  }\r\n\r\n  useEffect(() => {\r\n    const url = `https://api.themoviedb.org/3/search/multi?api_key=028e8ea4ca7d9164d085c9238979098b&language=en-US&include_adult=false&query=${inputValueNew}`;\r\n    axios.get(url)\r\n      .then(res => {\r\n        const results = res.data.results;\r\n        let movieImageUrl;\r\n        let movieRows = [];\r\n        results.forEach((movie) => {\r\n          if (movie.poster_path !== null && movie.media_type !== \"person\") {\r\n            movieImageUrl = \"https://image.tmdb.org/t/p/w500\" + movie.poster_path;\r\n\r\n            const movieComponent = <_SearchMovieListDisplay\r\n              movieDetials={() => selectMovieHandler(movie)}\r\n              key={movie.id}\r\n              movieImage={movieImageUrl}\r\n              movie={movie}\r\n            />\r\n            movieRows.push(movieComponent);\r\n            // console.log(movie)\r\n          }\r\n        })\r\n\r\n        setMovieList(movieRows);\r\n\r\n\r\n      }).catch(error => {\r\n        console.log(\"errror\", error);\r\n      });\r\n\r\n    return () => {\r\n      setMovieList([]);\r\n      console.log(\"cleaned DC\")\r\n    }\r\n\r\n  }, [inputValueNew]);\r\n\r\n\r\n  const Url = x => `https://api.themoviedb.org/3/movie/${x}?api_key=028e8ea4ca7d9164d085c9238979098b&append_to_response=videos`;\r\n  const UrlTv = x => `https://api.themoviedb.org/3/tv/${x}?api_key=028e8ea4ca7d9164d085c9238979098b&append_to_response=videos`;\r\n\r\n\r\n  const callUrl = url => {\r\n    axios.get(url)\r\n      .then(res => {\r\n        const movieData = res.data;\r\n        setMovieOverview(movieData);\r\n\r\n      }).catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    let url;\r\n    if (Ids.type === \"movie\")\r\n      url = Url(Ids.id)\r\n\r\n    else if (Ids.type === \"tv\")\r\n      url = UrlTv(Ids.id)\r\n\r\n    callUrl(url);\r\n    setTheNewInputValue(Ids.name);\r\n    setValue(true);\r\n\r\n  }, [Ids]);\r\n\r\n\r\n  const selectMovieHandler = movie => {\r\n    let url;\r\n    if (movie.media_type === \"movie\")\r\n      url = Url(movie.id)\r\n\r\n    else if (movie.media_type === \"tv\")\r\n      url = UrlTv(movie.id)\r\n\r\n    callUrl(url);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {value ? <_SearchMovieList movie={movieOverview} listOfMovies={movieList} onSearchHandler={typeInput} searchInputValue={inputValueNew} onCloseModal={closeModalAgain} /> : \" \"}\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default SearchGenresResult;"]},"metadata":{},"sourceType":"module"}