{"ast":null,"code":"var _jsxFileName = \"E:\\\\ShawMovieWebsite\\\\shaw-website\\\\src\\\\NetflixRemastered\\\\containers\\\\ActionMovies.js\";\nimport React, { Component } from 'react';\nimport { bindActionCreators } from \"redux\";\nimport { connect } from 'react-redux';\nimport { fetchActionMovies } from '../store/actions/index';\nimport { getMovieRows } from '../getMovie';\n\nclass ActionMovies extends Component {\n  componentWillMount() {\n    this.props.fetchActionMovies();\n  }\n\n  render() {\n    let movies; // Call getMoviesRows function only when we get the data back \n    // from the API through redux \n\n    if (this.props.actionMovies.data) {\n      const url = \"/discover/movie?api_key=224ce27b38a3805ecf6f6c36eb3ba9d0&with_genres=28\";\n      movies = getMovieRows(this.props.actionMovies.data, url);\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"movieShowcase__heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, \"Action Movies\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movieShowcase__container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, movies));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    actionMovies: state.action\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    fetchActionMovies\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ActionMovies);","map":{"version":3,"sources":["E:/ShawMovieWebsite/shaw-website/src/NetflixRemastered/containers/ActionMovies.js"],"names":["React","Component","bindActionCreators","connect","fetchActionMovies","getMovieRows","ActionMovies","componentWillMount","props","render","movies","actionMovies","data","url","mapStateToProps","state","action","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,iBAAT,QAAkC,wBAAlC;AACA,SAASC,YAAT,QAA6B,aAA7B;;AAEA,MAAMC,YAAN,SAA2BL,SAA3B,CAAqC;AAEnCM,EAAAA,kBAAkB,GAAG;AACnB,SAAKC,KAAL,CAAWJ,iBAAX;AACD;;AAEDK,EAAAA,MAAM,GAAG;AACP,QAAIC,MAAJ,CADO,CAEP;AACA;;AACA,QAAI,KAAKF,KAAL,CAAWG,YAAX,CAAwBC,IAA5B,EAAkC;AAChC,YAAMC,GAAG,GAAG,yEAAZ;AACAH,MAAAA,MAAM,GAAGL,YAAY,CAAC,KAAKG,KAAL,CAAWG,YAAX,CAAwBC,IAAzB,EAA+BC,GAA/B,CAArB;AACD;;AACD,wBACE,uDACE;AAAI,MAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,MADH,CAFF,CADF;AAQD;;AAtBkC;;AAyBrC,MAAMI,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AAAEJ,IAAAA,YAAY,EAAEI,KAAK,CAACC;AAAtB,GAAP;AACD,CAFD;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAOhB,kBAAkB,CAAC;AAAEE,IAAAA;AAAF,GAAD,EAAwBc,QAAxB,CAAzB;AACD,CAFD;;AAIA,eAAef,OAAO,CAACW,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CX,YAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { bindActionCreators } from \"redux\";\nimport { connect } from 'react-redux';\n\nimport { fetchActionMovies } from '../store/actions/index';\nimport { getMovieRows } from '../getMovie';\n\nclass ActionMovies extends Component {\n\n  componentWillMount() {\n    this.props.fetchActionMovies();\n  }\n\n  render() {\n    let movies\n    // Call getMoviesRows function only when we get the data back \n    // from the API through redux \n    if (this.props.actionMovies.data) {\n      const url = \"/discover/movie?api_key=224ce27b38a3805ecf6f6c36eb3ba9d0&with_genres=28\";\n      movies = getMovieRows(this.props.actionMovies.data, url);\n    }\n    return (\n      <>\n        <h1 className=\"movieShowcase__heading\">Action Movies</h1>\n        <div className=\"movieShowcase__container\">\n          {movies}\n        </div>\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { actionMovies: state.action }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({ fetchActionMovies }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ActionMovies);"]},"metadata":{},"sourceType":"module"}