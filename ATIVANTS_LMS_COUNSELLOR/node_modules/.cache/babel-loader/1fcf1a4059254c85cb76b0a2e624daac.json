{"ast":null,"code":"var _jsxFileName = \"E:\\\\ShawMovieWebsite\\\\shaw-website\\\\src\\\\HeaderSegement\\\\Explore\\\\MovieInfo.jsx\";\nimport React, { useState } from 'react';\nimport { Header, Icon, Segment, Grid, Modal, Button, Embed, Image } from 'semantic-ui-react';\nimport ReactPlayer from 'react-player';\n\nconst MovieInfo = props => {\n  const [open, setOpen] = useState(false);\n  const [dimmer, setDimmer] = useState('');\n  const [url, setUrl] = useState(props.url);\n\n  const show = dimmer => {\n    setDimmer(dimmer);\n    setOpen(true);\n  };\n\n  const close = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    trigger: /*#__PURE__*/React.createElement(Button, {\n      inverted: true,\n      onClick: () => show('blurring'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 33\n      }\n    }, \"Blurring Modal\"),\n    dimmer: dimmer,\n    open: open,\n    onClose: () => close(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Segment, {\n    color: \"transparent\",\n    inverted: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ReactPlayer, {\n    url: url,\n    playing: true,\n    loop: true,\n    width: \"100%\",\n    controls: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Modal.Actions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    positive: true,\n    icon: \"checkmark\",\n    labelPosition: \"right\",\n    content: \"Ok\",\n    onClick: () => close(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }\n  }))));\n};\n\nexport default MovieInfo;","map":{"version":3,"sources":["E:/ShawMovieWebsite/shaw-website/src/HeaderSegement/Explore/MovieInfo.jsx"],"names":["React","useState","Header","Icon","Segment","Grid","Modal","Button","Embed","Image","ReactPlayer","MovieInfo","props","open","setOpen","dimmer","setDimmer","url","setUrl","show","close"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,OAAvB,EAAgCC,IAAhC,EAAsCC,KAAtC,EAA6CC,MAA7C,EAAqDC,KAArD,EAA4DC,KAA5D,QAAyE,mBAAzE;AACA,OAAOC,WAAP,MAAwB,cAAxB;;AAGA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AACzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACc,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACgB,GAAD,EAAMC,MAAN,IAAgBjB,QAAQ,CAACW,KAAK,CAACK,GAAP,CAA9B;;AAEA,QAAME,IAAI,GAAIJ,MAAD,IAAY;AACrBC,IAAAA,SAAS,CAACD,MAAD,CAAT;AACAD,IAAAA,OAAO,CAAC,IAAD,CAAP;AACH,GAHD;;AAKA,QAAMM,KAAK,GAAG,MAAM;AAChBN,IAAAA,OAAO,CAAC,KAAD,CAAP;AACH,GAFD;;AAIA,sBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ,oBAAC,KAAD;AAAO,IAAA,OAAO,eAAE,oBAAC,MAAD;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,OAAO,EAAE,MAAMK,IAAI,CAAC,UAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAhB;AAA2F,IAAA,MAAM,EAAEJ,MAAnG;AAA2G,IAAA,IAAI,EAAEF,IAAjH;AAAuH,IAAA,OAAO,EAAE,MAAMO,KAAK,EAA3I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,aAAf;AAA6B,IAAA,QAAQ,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEH,GAAlB;AACI,IAAA,OAAO,MADX;AAEI,IAAA,IAAI,MAFR;AAGI,IAAA,KAAK,EAAC,MAHV;AAII,IAAA,QAAQ,MAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eASI,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACI,IAAA,QAAQ,MADZ;AAEI,IAAA,IAAI,EAAC,WAFT;AAGI,IAAA,aAAa,EAAC,OAHlB;AAII,IAAA,OAAO,EAAC,IAJZ;AAKI,IAAA,OAAO,EAAE,MAAMG,KAAK,EALxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CATJ,CADR,CADJ;AAuBH,CArCD;;AAuCA,eAAeT,SAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { Header, Icon, Segment, Grid, Modal, Button, Embed, Image } from 'semantic-ui-react';\r\nimport ReactPlayer from 'react-player'\r\n\r\n\r\nconst MovieInfo = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [dimmer, setDimmer] = useState('');\r\n    const [url, setUrl] = useState(props.url);\r\n\r\n    const show = (dimmer) => {\r\n        setDimmer(dimmer);\r\n        setOpen(true);\r\n    }\r\n\r\n    const close = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n                <Modal trigger={<Button inverted onClick={() => show('blurring')}>Blurring Modal</Button>} dimmer={dimmer} open={open} onClose={() => close()}>\r\n                    <Segment color='transparent' inverted>\r\n                        <ReactPlayer url={url}\r\n                            playing\r\n                            loop\r\n                            width='100%'\r\n                            controls\r\n                        />\r\n                    </Segment>\r\n                    <Modal.Actions>\r\n                        <Button\r\n                            positive\r\n                            icon='checkmark'\r\n                            labelPosition='right'\r\n                            content=\"Ok\"\r\n                            onClick={() => close()}\r\n                        />\r\n                    </Modal.Actions>\r\n                </Modal>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default MovieInfo;"]},"metadata":{},"sourceType":"module"}