{"ast":null,"code":"var _jsxFileName = \"E:\\\\ShawMovieWebsite\\\\shaw-website\\\\src\\\\Containers\\\\SearchGenresResult.js\";\nimport React, { Component, useState, useEffect, useRef } from 'react';\nimport _Header from '../SecondaryComponents/Desktop/_Header';\nimport _NavigationItems from '../SecondaryComponents/Desktop/_NavigationItems';\nimport _MovieGenres from '../SecondaryComponents/Desktop/_MovieGenres';\nimport axios from 'axios';\nimport _SearchMovieList from '../SecondaryComponents/Desktop/_SearchMovieList';\nimport _BrowseCategories from '../SecondaryComponents/Desktop/_BrowseCategories';\nimport _SearchMovieListDisplay from '../SecondaryComponents/Desktop/_SearchMovieListDisplay';\n\nconst useForceUpate = () => useState()[1];\n\nconst SearchGenresResult = ({\n  movieId,\n  type,\n  name\n}) => {\n  const [inputValueNew, setTheNewInputValue] = useState('');\n  const [movieList, setMovieList] = useState([]);\n  const [movieOverview, setMovieOverview] = useState({});\n  const [value, setValue] = useState(false);\n  const forceUpdate = useForceUpdate();\n\n  const typeInput = e => {\n    setTheNewInputValue(e.target.value);\n  };\n\n  const closeModalAgain = () => {\n    setTheNewInputValue('');\n    forceUpdate();\n  };\n\n  useEffect(() => {\n    const url = `https://api.themoviedb.org/3/search/multi?api_key=028e8ea4ca7d9164d085c9238979098b&language=en-US&include_adult=false&query=${inputValueNew}`;\n    axios.get(url).then(res => {\n      const results = res.data.results;\n      let movieImageUrl;\n      let movieRows = [];\n      results.forEach(movie => {\n        if (movie.poster_path !== null && movie.media_type !== \"person\") {\n          movieImageUrl = \"https://image.tmdb.org/t/p/w500\" + movie.poster_path;\n          const movieComponent = /*#__PURE__*/React.createElement(_SearchMovieListDisplay, {\n            movieDetials: () => selectMovieHandler(movie),\n            key: movie.id,\n            movieImage: movieImageUrl,\n            movie: movie,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 36\n            }\n          });\n          movieRows.push(movieComponent); // console.log(movie)\n        }\n      });\n      setMovieList(movieRows);\n    }).catch(error => {\n      console.log(\"errror\", error);\n    });\n    return () => {\n      setMovieList([]);\n      console.log(\"cleaned DC\");\n    };\n  }, [inputValueNew]);\n\n  const Url = x => `https://api.themoviedb.org/3/movie/${x}?api_key=028e8ea4ca7d9164d085c9238979098b&append_to_response=videos`;\n\n  const UrlTv = x => `https://api.themoviedb.org/3/tv/${x}?api_key=028e8ea4ca7d9164d085c9238979098b&append_to_response=videos`;\n\n  const callUrl = url => {\n    axios.get(url).then(res => {\n      const movieData = res.data;\n      setMovieOverview(movieData);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  useEffect(() => {\n    let url;\n    if (type === \"movie\") url = Url(movieId);else if (type === \"tv\") url = UrlTv(movieId);\n    callUrl(url);\n    setTheNewInputValue(name);\n    setValue(true);\n  }, [name]);\n\n  const selectMovieHandler = movie => {\n    let url;\n    if (movie.media_type === \"movie\") url = Url(movie.id);else if (movie.media_type === \"tv\") url = UrlTv(movie.id);\n    callUrl(url);\n  };\n\n  console.log(\"MOVIE ID\", movieId);\n  console.log(\"MOVIE OVERVIEW\", movieOverview);\n  console.log(\"INPUT VALUE\", inputValueNew);\n  console.log(\"VALUE\", value);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, value ? /*#__PURE__*/React.createElement(_SearchMovieList, {\n    movie: movieOverview,\n    listOfMovies: movieList,\n    onSearchHandler: typeInput,\n    searchInputValue: inputValueNew,\n    onCloseModal: closeModalAgain,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 16\n    }\n  }) : \" \");\n};\n\nexport default SearchGenresResult;","map":{"version":3,"sources":["E:/ShawMovieWebsite/shaw-website/src/Containers/SearchGenresResult.js"],"names":["React","Component","useState","useEffect","useRef","_Header","_NavigationItems","_MovieGenres","axios","_SearchMovieList","_BrowseCategories","_SearchMovieListDisplay","useForceUpate","SearchGenresResult","movieId","type","name","inputValueNew","setTheNewInputValue","movieList","setMovieList","movieOverview","setMovieOverview","value","setValue","forceUpdate","useForceUpdate","typeInput","e","target","closeModalAgain","url","get","then","res","results","data","movieImageUrl","movieRows","forEach","movie","poster_path","media_type","movieComponent","selectMovieHandler","id","push","catch","error","console","log","Url","x","UrlTv","callUrl","movieData"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect, useRef } from 'react'\r\nimport _Header from '../SecondaryComponents/Desktop/_Header'\r\nimport _NavigationItems from '../SecondaryComponents/Desktop/_NavigationItems'\r\nimport _MovieGenres from '../SecondaryComponents/Desktop/_MovieGenres'\r\nimport axios from 'axios'\r\nimport _SearchMovieList from '../SecondaryComponents/Desktop/_SearchMovieList'\r\nimport _BrowseCategories from '../SecondaryComponents/Desktop/_BrowseCategories'\r\nimport _SearchMovieListDisplay from '../SecondaryComponents/Desktop/_SearchMovieListDisplay'\r\n\r\nconst useForceUpate = () => useState()[1];\r\n\r\nconst SearchGenresResult = ({ movieId, type, name }) => {\r\n\r\n  const [inputValueNew, setTheNewInputValue] = useState('');\r\n  const [movieList, setMovieList] = useState([]);\r\n  const [movieOverview, setMovieOverview] = useState({});\r\n  const [value, setValue] = useState(false);\r\n  const forceUpdate = useForceUpdate();\r\n\r\n  const typeInput = e => {\r\n    setTheNewInputValue(e.target.value);\r\n  }\r\n\r\n  const closeModalAgain = () => {\r\n    setTheNewInputValue('');\r\n    forceUpdate();\r\n  }\r\n\r\n  useEffect(() => {\r\n    const url = `https://api.themoviedb.org/3/search/multi?api_key=028e8ea4ca7d9164d085c9238979098b&language=en-US&include_adult=false&query=${inputValueNew}`;\r\n    axios.get(url)\r\n      .then(res => {\r\n        const results = res.data.results;\r\n        let movieImageUrl;\r\n        let movieRows = [];\r\n        results.forEach((movie) => {\r\n          if (movie.poster_path !== null && movie.media_type !== \"person\") {\r\n            movieImageUrl = \"https://image.tmdb.org/t/p/w500\" + movie.poster_path;\r\n\r\n            const movieComponent = <_SearchMovieListDisplay\r\n              movieDetials={() => selectMovieHandler(movie)}\r\n              key={movie.id}\r\n              movieImage={movieImageUrl}\r\n              movie={movie}\r\n            />\r\n            movieRows.push(movieComponent);\r\n            // console.log(movie)\r\n          }\r\n        })\r\n\r\n        setMovieList(movieRows);\r\n\r\n\r\n      }).catch(error => {\r\n        console.log(\"errror\", error);\r\n      });\r\n\r\n    return () => {\r\n      setMovieList([]);\r\n      console.log(\"cleaned DC\")\r\n    }\r\n\r\n  }, [inputValueNew]);\r\n\r\n\r\n  const Url = x => `https://api.themoviedb.org/3/movie/${x}?api_key=028e8ea4ca7d9164d085c9238979098b&append_to_response=videos`;\r\n  const UrlTv = x => `https://api.themoviedb.org/3/tv/${x}?api_key=028e8ea4ca7d9164d085c9238979098b&append_to_response=videos`;\r\n\r\n\r\n  const callUrl = url => {\r\n    axios.get(url)\r\n      .then(res => {\r\n        const movieData = res.data;\r\n        setMovieOverview(movieData);\r\n\r\n      }).catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    let url;\r\n    if (type === \"movie\")\r\n      url = Url(movieId)\r\n\r\n    else if (type === \"tv\")\r\n      url = UrlTv(movieId)\r\n\r\n    callUrl(url);\r\n    setTheNewInputValue(name);\r\n    setValue(true);\r\n\r\n  }, [name]);\r\n\r\n\r\n  const selectMovieHandler = movie => {\r\n    let url;\r\n    if (movie.media_type === \"movie\")\r\n      url = Url(movie.id)\r\n\r\n    else if (movie.media_type === \"tv\")\r\n      url = UrlTv(movie.id)\r\n\r\n    callUrl(url);\r\n  }\r\n\r\n  console.log(\"MOVIE ID\", movieId);\r\n  console.log(\"MOVIE OVERVIEW\", movieOverview);\r\n  console.log(\"INPUT VALUE\", inputValueNew);\r\n  console.log(\"VALUE\", value);\r\n\r\n  return (\r\n    <div>\r\n      {value ? <_SearchMovieList movie={movieOverview} listOfMovies={movieList} onSearchHandler={typeInput} searchInputValue={inputValueNew} onCloseModal={closeModalAgain} /> : \" \"}\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default SearchGenresResult;"]},"metadata":{},"sourceType":"module"}