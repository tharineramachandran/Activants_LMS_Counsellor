{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ACTIVANTS\\\\Desktop\\\\LMS Councellor\\\\Activants_LMS_Counsellor\\\\ATIVANTS_LMS_COUNSELLOR\\\\src\\\\SecondaryComponents\\\\Desktop\\\\RegistrationComponents\\\\_Registration_First.js\";\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Header, Icon, Form, Image, Message, Segment, Grid, Modal, Search, Button, Dimmer, Loader, Divider, List, Dropdown, Select } from 'semantic-ui-react';\nimport { useForm } from \"react-hook-form\";\n\nvar Registration_First = function Registration_First(_ref) {\n  var formData = _ref.formData,\n      setForm = _ref.setForm,\n      navigation = _ref.navigation;\n  var COUNSELLOR_FIRST_NAME = formData.COUNSELLOR_FIRST_NAME,\n      COUNSELLOR_LAST_NAME = formData.COUNSELLOR_LAST_NAME,\n      COUNSELLOR_EMAIL = formData.COUNSELLOR_EMAIL,\n      COUNSELLOR_PHONE_NUMBER = formData.COUNSELLOR_PHONE_NUMBER,\n      COUNSELLOR_COUNTRY_CODE = formData.COUNSELLOR_COUNTRY_CODE,\n      COUNSELLOR_COUNSELLING_SUBJECT_CODE = formData.COUNSELLOR_COUNSELLING_SUBJECT_CODE,\n      COUNSELLOR_COUNSELLING_LEVEL_CODE = formData.COUNSELLOR_COUNSELLING_LEVEL_CODE,\n      COUNSELLOR_HOURLY_RATE = formData.COUNSELLOR_HOURLY_RATE,\n      COUNSELLOR_QUALIFICATION_CODE = formData.COUNSELLOR_QUALIFICATION_CODE,\n      COUNSELLOR_INSTITUTION_TYPE_CODE = formData.COUNSELLOR_INSTITUTION_TYPE_CODE,\n      COUNSELLOR_REGISTRATION_STATUS_CODE = formData.COUNSELLOR_REGISTRATION_STATUS_CODE;\n  console.log(formData);\n\n  var _useForm = useForm({}),\n      handleSubmit = _useForm.handleSubmit,\n      register = _useForm.register,\n      errors = _useForm.errors;\n\n  var onSubmit = function onSubmit(data) {\n    navigation.next();\n  };\n\n  var Counsellor_Countries = [{\n    title: \"What kind of traveler are you?\",\n    name: [\"Adrenaline Addicts\", \"Culture Lovers\", \"Aquatic adventures\", \"Beach enthusiasts\"],\n    code: [0, 1, 2, 3]\n  }];\n  var CounsellorSubject = [{\n    title: \"Choose subject?\",\n    name: [\"Adrenaline Addicts\", \"Culture Lovers\", \"Aquatic adventures\", \"Beach enthusiasts\"],\n    code: [0, 1, 2, 3]\n  }];\n  var CounsellingLevel = [{\n    title: \"Choose Level?\",\n    name: [\"Adrenaline Addicts\", \"Culture Lovers\", \"Aquatic adventures\", \"Beach enthusiasts\"],\n    code: [0, 1, 2, 3]\n  }];\n  var CounsellorQualification = [{\n    title: \"Choose Qualification\",\n    name: [\"Adrenaline Addicts\", \"Culture Lovers\", \"Aquatic adventures\", \"Beach enthusiasts\"],\n    code: [0, 1, 2, 3]\n  }];\n  var CounsellorInstitute = [{\n    title: \"Choose Institute\",\n    name: [\"Adrenaline Addicts\", \"Culture Lovers\", \"Aquatic adventures\", \"Beach enthusiasts\"],\n    code: [0, 1, 2, 3]\n  }];\n  return /*#__PURE__*/React.createElement(Grid, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    size: \"small\",\n    onSubmit: handleSubmit(onSubmit),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"center\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Segment, {\n    stacked: true,\n    style: {\n      width: '90%',\n      textAlign: 'left'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 37\n    }\n  }, \"First name\"), /*#__PURE__*/React.createElement(\"input\", {\n    fluid: true,\n    icon: \"user\",\n    iconPosition: \"left\",\n    placeholder: \"Enter your details\",\n    type: \"text\",\n    name: \"COUNSELLOR_FIRST_NAME\",\n    onChange: setForm,\n    value: COUNSELLOR_FIRST_NAME,\n    ref: register({\n      validate: function validate(COUNSELLOR_FIRST_NAME) {\n        return COUNSELLOR_FIRST_NAME && COUNSELLOR_FIRST_NAME.length > 3;\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 37\n    }\n  }), errors.COUNSELLOR_FIRST_NAME && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"customError\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 70\n    }\n  }, \"Username invalid\")), /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 37\n    }\n  }, \"Last name\"), /*#__PURE__*/React.createElement(\"input\", {\n    fluid: true,\n    icon: \"user\",\n    iconPosition: \"left\",\n    placeholder: \"Enter your details\",\n    type: \"text\",\n    name: \"COUNSELLOR_LAST_NAME\",\n    onChange: setForm,\n    value: COUNSELLOR_LAST_NAME,\n    ref: register({\n      validate: function validate(COUNSELLOR_LAST_NAME) {\n        return COUNSELLOR_LAST_NAME && COUNSELLOR_LAST_NAME.length > 3;\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 37\n    }\n  }), errors.COUNSELLOR_LAST_NAME && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"customError\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 69\n    }\n  }, \"Username invalid\"))), /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 37\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    fluid: true,\n    icon: \"user\",\n    iconPosition: \"left\",\n    placeholder: \"Enter your details\",\n    type: \"text\",\n    name: \"COUNSELLOR_EMAIL\",\n    onChange: setForm,\n    value: COUNSELLOR_EMAIL,\n    ref: register({\n      validate: function validate(COUNSELLOR_EMAIL) {\n        return COUNSELLOR_EMAIL && COUNSELLOR_EMAIL.length > 3;\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 37\n    }\n  }), errors.COUNSELLOR_EMAIL && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"customError\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 65\n    }\n  }, \"Username invalid\")), /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 37\n    }\n  }, \"Phone number\"), /*#__PURE__*/React.createElement(\"input\", {\n    fluid: true,\n    icon: \"user\",\n    iconPosition: \"left\",\n    placeholder: \"Enter your details\",\n    type: \"text\",\n    name: \"COUNSELLOR_PHONE_NUMBER\",\n    onChange: setForm,\n    value: COUNSELLOR_PHONE_NUMBER,\n    ref: register({\n      validate: function validate(COUNSELLOR_PHONE_NUMBER) {\n        return COUNSELLOR_PHONE_NUMBER && COUNSELLOR_PHONE_NUMBER.length > 3;\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 37\n    }\n  }), errors.COUNSELLOR_PHONE_NUMBER && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"customError\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 72\n    }\n  }, \"Username invalid\"))), /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 37\n    }\n  }, \"Country of origin\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"COUNSELLOR_COUNTRY_CODE\",\n    onChange: setForm,\n    placeholder: \"choose countrhy\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 37\n    }\n  }, Counsellor_Countries.map(function (countries) {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      disabled: true,\n      selected: true,\n      hidden: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 57\n      }\n    }, countries.title), countries.name.map(function (name, code) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: code,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 96\n        }\n      }, name);\n    }));\n  })))), /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 37\n    }\n  }, \"Country of origin\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"COUNSELLOR_COUNSELLING_SUBJECT_CODE\",\n    onChange: setForm,\n    placeholder: \"choose subject\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 37\n    }\n  }, Counsellor_Subject.map(function (subjects) {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      disabled: true,\n      selected: true,\n      hidden: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 57\n      }\n    }, subjects.title), subjects.name.map(function (name, code) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: code,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 95\n        }\n      }, name);\n    }));\n  }))), /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 37\n    }\n  }, \"Country of origin\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"COUNSELLOR_COUNSELLING_LEVEL_CODE\",\n    onChange: setForm,\n    placeholder: \"choose subject\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 37\n    }\n  }, Counselling_Level.map(function (level) {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      disabled: true,\n      selected: true,\n      hidden: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 57\n      }\n    }, level.title), level.name.map(function (name, code) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: code,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 92\n        }\n      }, name);\n    }));\n  })))), /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 37\n    }\n  }, \"My Qualification\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"COUNSELLOR_QUALIFICATION_CODE\",\n    onChange: setForm,\n    placeholder: \"choose subject\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 37\n    }\n  }, Counsellor_qualification.map(function (qualification) {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      disabled: true,\n      selected: true,\n      hidden: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 57\n      }\n    }, qualification.title), qualification.name.map(function (name, code) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: code,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 100\n        }\n      }, name);\n    }));\n  }))), /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 37\n    }\n  }, \"Institution\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"COUNSELLOR_INSTITUTION_TYPE_CODE\",\n    onChange: setForm,\n    placeholder: \"choose subject\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 37\n    }\n  }, Counselling_Level.map(function (level) {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      disabled: true,\n      selected: true,\n      hidden: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 57\n      }\n    }, level.title), level.name.map(function (name, code) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: code,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 92\n        }\n      }, name);\n    }));\n  })))), /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 37\n    }\n  }, \"My Qualification\"), /*#__PURE__*/React.createElement(\"input\", {\n    fluid: true,\n    icon: \"user\",\n    iconPosition: \"left\",\n    placeholder: \"Enter your details\",\n    type: \"text\",\n    name: \"COUNSELLOR_HOURLY_RATE\",\n    onChange: setForm,\n    value: COUNSELLOR_HOURLY_RATE,\n    ref: register,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 37\n    }\n  }, \"$\"))), /*#__PURE__*/React.createElement(Button, {\n    color: \"teal\",\n    fluid: true,\n    size: \"large\",\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 29\n    }\n  }, \"Next\"))))));\n};\n\nexport default Registration_First;","map":{"version":3,"sources":["C:/Users/ACTIVANTS/Desktop/LMS Councellor/Activants_LMS_Counsellor/ATIVANTS_LMS_COUNSELLOR/src/SecondaryComponents/Desktop/RegistrationComponents/_Registration_First.js"],"names":["React","useState","useEffect","useContext","Header","Icon","Form","Image","Message","Segment","Grid","Modal","Search","Button","Dimmer","Loader","Divider","List","Dropdown","Select","useForm","Registration_First","formData","setForm","navigation","COUNSELLOR_FIRST_NAME","COUNSELLOR_LAST_NAME","COUNSELLOR_EMAIL","COUNSELLOR_PHONE_NUMBER","COUNSELLOR_COUNTRY_CODE","COUNSELLOR_COUNSELLING_SUBJECT_CODE","COUNSELLOR_COUNSELLING_LEVEL_CODE","COUNSELLOR_HOURLY_RATE","COUNSELLOR_QUALIFICATION_CODE","COUNSELLOR_INSTITUTION_TYPE_CODE","COUNSELLOR_REGISTRATION_STATUS_CODE","console","log","handleSubmit","register","errors","onSubmit","data","next","Counsellor_Countries","title","name","code","CounsellorSubject","CounsellingLevel","CounsellorQualification","CounsellorInstitute","width","textAlign","validate","length","map","countries","Counsellor_Subject","subjects","Counselling_Level","level","Counsellor_qualification","qualification"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport {\n    Header, Icon, Form, Image, Message,\n    Segment, Grid, Modal, Search, Button, Dimmer, Loader, Divider, List, Dropdown, Select\n} from 'semantic-ui-react';\nimport { useForm } from \"react-hook-form\";\n\nconst Registration_First = ({ formData, setForm, navigation }) => {\n\n    const {\n        //FIRST REGISTRATION PAGE\n        COUNSELLOR_FIRST_NAME,\n        COUNSELLOR_LAST_NAME,\n        COUNSELLOR_EMAIL,\n        COUNSELLOR_PHONE_NUMBER,\n        COUNSELLOR_COUNTRY_CODE,\n        COUNSELLOR_COUNSELLING_SUBJECT_CODE,\n        COUNSELLOR_COUNSELLING_LEVEL_CODE,\n        COUNSELLOR_HOURLY_RATE,\n        COUNSELLOR_QUALIFICATION_CODE,\n        COUNSELLOR_INSTITUTION_TYPE_CODE,\n        COUNSELLOR_REGISTRATION_STATUS_CODE\n\n    } = formData;\n    console.log(formData)\n\n    const { handleSubmit, register, errors } = useForm({\n\n    });\n\n    const onSubmit = (data) => {\n        navigation.next()\n    };\n\n    const Counsellor_Countries = [\n        {\n            title: \"What kind of traveler are you?\",\n            name: [\n                \"Adrenaline Addicts\", \"Culture Lovers\", \"Aquatic adventures\", \"Beach enthusiasts\"\n            ],\n            code: [0, 1, 2, 3]\n        }\n    ]\n\n    const CounsellorSubject = [\n        {\n            title: \"Choose subject?\",\n            name: [\n                \"Adrenaline Addicts\", \"Culture Lovers\", \"Aquatic adventures\", \"Beach enthusiasts\"\n            ],\n            code: [0, 1, 2, 3]\n        }\n    ]\n\n    const CounsellingLevel = [\n        {\n            title: \"Choose Level?\",\n            name: [\n                \"Adrenaline Addicts\", \"Culture Lovers\", \"Aquatic adventures\", \"Beach enthusiasts\"\n            ],\n            code: [0, 1, 2, 3]\n        }\n    ]\n\n    const CounsellorQualification = [\n        {\n            title: \"Choose Qualification\",\n            name: [\n                \"Adrenaline Addicts\", \"Culture Lovers\", \"Aquatic adventures\", \"Beach enthusiasts\"\n            ],\n            code: [0, 1, 2, 3]\n        }\n    ]\n\n    const CounsellorInstitute= [\n        {\n            title: \"Choose Institute\",\n            name: [\n                \"Adrenaline Addicts\", \"Culture Lovers\", \"Aquatic adventures\", \"Beach enthusiasts\"\n            ],\n            code: [0, 1, 2, 3]\n        }\n    ]\n\n\n    return (\n\n        <Grid>\n            <Grid.Column>\n                <Form size='small' onSubmit={handleSubmit(onSubmit)}>\n                    <center>\n                        <Segment stacked style={{ width: '90%', textAlign: 'left' }}>\n                            <Form.Group widths='equal'>\n                                <Form.Field className=\"CustomForm\">\n                                    <label>First name</label>\n                                    <input\n                                        fluid\n                                        icon='user'\n                                        iconPosition='left'\n                                        placeholder='Enter your details'\n                                        type='text'\n                                        name=\"COUNSELLOR_FIRST_NAME\"\n                                        onChange={setForm}\n                                        value={COUNSELLOR_FIRST_NAME}\n                                        ref={register({ validate: COUNSELLOR_FIRST_NAME => COUNSELLOR_FIRST_NAME && COUNSELLOR_FIRST_NAME.length > 3 })}\n                                    />\n                                    {errors.COUNSELLOR_FIRST_NAME && <p className=\"customError\">Username invalid</p>}\n                                </Form.Field>\n\n\n                                <Form.Field className=\"CustomForm\">\n                                    <label>Last name</label>\n                                    <input\n                                        fluid\n                                        icon='user'\n                                        iconPosition='left'\n                                        placeholder='Enter your details'\n                                        type='text'\n                                        name=\"COUNSELLOR_LAST_NAME\"\n                                        onChange={setForm}\n                                        value={COUNSELLOR_LAST_NAME}\n                                        ref={register({ validate: COUNSELLOR_LAST_NAME => COUNSELLOR_LAST_NAME && COUNSELLOR_LAST_NAME.length > 3 })}\n                                    />\n                                    {errors.COUNSELLOR_LAST_NAME && <p className=\"customError\">Username invalid</p>}\n                                </Form.Field>\n\n\n                            </Form.Group>\n\n                            <Form.Group widths='equal'>\n                                <Form.Field className=\"CustomForm\">\n                                    <label>Email</label>\n                                    <input\n                                        fluid\n                                        icon='user'\n                                        iconPosition='left'\n                                        placeholder='Enter your details'\n                                        type='text'\n                                        name=\"COUNSELLOR_EMAIL\"\n                                        onChange={setForm}\n                                        value={COUNSELLOR_EMAIL}\n                                        ref={register({ validate: COUNSELLOR_EMAIL => COUNSELLOR_EMAIL && COUNSELLOR_EMAIL.length > 3 })}\n                                    />\n                                    {errors.COUNSELLOR_EMAIL && <p className=\"customError\">Username invalid</p>}\n                                </Form.Field>\n\n                                <Form.Field className=\"CustomForm\">\n                                    <label>Phone number</label>\n                                    <input\n                                        fluid\n                                        icon='user'\n                                        iconPosition='left'\n                                        placeholder='Enter your details'\n                                        type='text'\n                                        name=\"COUNSELLOR_PHONE_NUMBER\"\n                                        onChange={setForm}\n                                        value={COUNSELLOR_PHONE_NUMBER}\n                                        ref={register({ validate: COUNSELLOR_PHONE_NUMBER => COUNSELLOR_PHONE_NUMBER && COUNSELLOR_PHONE_NUMBER.length > 3 })}\n                                    />\n                                    {errors.COUNSELLOR_PHONE_NUMBER && <p className=\"customError\">Username invalid</p>}\n                                </Form.Field>\n\n                            </Form.Group>\n\n\n                            <Form.Group widths='equal'>\n                                <Form.Field className=\"CustomForm\">\n                                    <label>Country of origin</label>\n                                    <select name=\"COUNSELLOR_COUNTRY_CODE\" onChange={setForm} placeholder=\"choose countrhy\">\n                                        {\n                                            Counsellor_Countries.map((countries) => {\n                                                return (\n                                                    <React.Fragment>\n                                                        <option disabled selected hidden>{countries.title}</option>\n                                                        {\n                                                            countries.name.map((name, code) => <option value={code}>{name}</option>)\n                                                        }\n                                                    </React.Fragment>\n                                                )\n\n                                            })\n                                        }\n                                    </select>\n                                </Form.Field>\n\n                            </Form.Group>\n\n                            <Form.Group widths='equal'>\n                                <Form.Field className=\"CustomForm\">\n                                    <label>Country of origin</label>\n                                    <select name=\"COUNSELLOR_COUNSELLING_SUBJECT_CODE\" onChange={setForm} placeholder=\"choose subject\">\n                                        {\n                                            Counsellor_Subject.map((subjects) => {\n                                                return (\n                                                    <React.Fragment>\n                                                        <option disabled selected hidden>{subjects.title}</option>\n                                                        {\n                                                            subjects.name.map((name, code) => <option value={code}>{name}</option>)\n                                                        }\n                                                    </React.Fragment>\n                                                )\n\n                                            })\n                                        }\n                                    </select>\n                                </Form.Field>\n\n                                <Form.Field className=\"CustomForm\">\n                                    <label>Country of origin</label>\n                                    <select name=\"COUNSELLOR_COUNSELLING_LEVEL_CODE\" onChange={setForm} placeholder=\"choose subject\">\n                                        {\n                                            Counselling_Level.map((level) => {\n                                                return (\n                                                    <React.Fragment>\n                                                        <option disabled selected hidden>{level.title}</option>\n                                                        {\n                                                            level.name.map((name, code) => <option value={code}>{name}</option>)\n                                                        }\n                                                    </React.Fragment>\n                                                )\n\n                                            })\n                                        }\n                                    </select>\n                                </Form.Field>\n\n                            </Form.Group>\n\n                            <Form.Group widths='equal'>\n                                <Form.Field className=\"CustomForm\">\n                                    <label>My Qualification</label>\n                                    <select name=\"COUNSELLOR_QUALIFICATION_CODE\" onChange={setForm} placeholder=\"choose subject\">\n                                        {\n                                            Counsellor_qualification.map((qualification) => {\n                                                return (\n                                                    <React.Fragment>\n                                                        <option disabled selected hidden>{qualification.title}</option>\n                                                        {\n                                                            qualification.name.map((name, code) => <option value={code}>{name}</option>)\n                                                        }\n                                                    </React.Fragment>\n                                                )\n\n                                            })\n                                        }\n                                    </select>\n                                </Form.Field>\n\n\n                                <Form.Field className=\"CustomForm\">\n                                    <label>Institution</label>\n                                    <select name=\"COUNSELLOR_INSTITUTION_TYPE_CODE\" onChange={setForm} placeholder=\"choose subject\">\n                                        {\n                                            Counselling_Level.map((level) => {\n                                                return (\n                                                    <React.Fragment>\n                                                        <option disabled selected hidden>{level.title}</option>\n                                                        {\n                                                            level.name.map((name, code) => <option value={code}>{name}</option>)\n                                                        }\n                                                    </React.Fragment>\n                                                )\n\n                                            })\n                                        }\n                                    </select>\n                                </Form.Field>\n\n\n                            </Form.Group>\n\n                            <Form.Group widths='equal'>\n                                <Form.Field className=\"CustomForm\">\n                                    <label>My Qualification</label>\n                                    <input\n                                        fluid\n                                        icon='user'\n                                        iconPosition='left'\n                                        placeholder='Enter your details'\n                                        type='text'\n                                        name=\"COUNSELLOR_HOURLY_RATE\"\n                                        onChange={setForm}\n                                        value={COUNSELLOR_HOURLY_RATE}\n                                        ref={register}\n                                    />\n                                    <label>$</label>\n                                    {/* {errors.COUNSELLOR_HOURLY_RATE && <p className=\"customError\">Username invalid</p>} */}\n                                </Form.Field>\n\n\n                            </Form.Group>\n\n                            <Button\n                                color='teal'\n                                fluid\n                                size='large'\n                                type=\"submit\"\n                            >\n                                Next\n                        </Button>\n\n                        </Segment>\n                    </center>\n                </Form>\n\n            </Grid.Column>\n        </Grid >\n    )\n\n}\n\nexport default Registration_First;"]},"metadata":{},"sourceType":"module"}