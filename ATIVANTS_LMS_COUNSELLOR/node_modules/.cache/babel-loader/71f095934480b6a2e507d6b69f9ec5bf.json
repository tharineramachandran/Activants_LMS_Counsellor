{"ast":null,"code":"import React,{useState,useEffect}from'react';import _AxiosInstance from'../Store/_AxiosInstance';import{Grid,Image}from'semantic-ui-react';var DisplayAllGeresOfMovies=function DisplayAllGeresOfMovies(props){var classNameToAppend='';if(props.ITypeMovie==='movie')classNameToAppend='sizeOfNewSearchMovie';else classNameToAppend='sizeOfNewSearchTv';return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"center\",{className:\"customImageDisplay\"},/*#__PURE__*/React.createElement(Image,{inline:true,onClick:function onClick(){return props.movieDetials(props.ITypeMovie);},src:\"https://image.tmdb.org/t/p/original/\".concat(props.movie.poster_path),className:classNameToAppend})));};export default DisplayAllGeresOfMovies;","map":{"version":3,"sources":["E:/CircuitBreakerShow/src/Containers/DisplayAllGeresOfMovies.js"],"names":["React","useState","useEffect","_AxiosInstance","Grid","Image","DisplayAllGeresOfMovies","props","classNameToAppend","ITypeMovie","movieDetials","movie","poster_path"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,cAAP,KAA2B,yBAA3B,CACA,OAASC,IAAT,CAAeC,KAAf,KAA4B,mBAA5B,CAEA,GAAMC,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAAAC,KAAK,CAAI,CACrC,GAAIC,CAAAA,iBAAiB,CAAE,EAAvB,CACA,GAAGD,KAAK,CAACE,UAAN,GAAqB,OAAxB,CACID,iBAAiB,CAAG,sBAApB,CADJ,IAGIA,CAAAA,iBAAiB,CAAG,mBAApB,CACJ,mBACI,oBAAC,KAAD,CAAO,QAAP,mBACI,8BAAQ,SAAS,CAAC,oBAAlB,eACG,oBAAC,KAAD,EAAO,MAAM,KAAb,CAAc,OAAO,CAAE,yBAAMD,CAAAA,KAAK,CAACG,YAAN,CAAmBH,KAAK,CAACE,UAAzB,CAAN,EAAvB,CAAmE,GAAG,+CAAyCF,KAAK,CAACI,KAAN,CAAYC,WAArD,CAAtE,CACK,SAAS,CAAEJ,iBADhB,EADH,CADJ,CADJ,CAUH,CAhBD,CAkBA,cAAeF,CAAAA,uBAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport _AxiosInstance from '../Store/_AxiosInstance'\r\nimport { Grid, Image } from 'semantic-ui-react'\r\n\r\nconst DisplayAllGeresOfMovies = props => {\r\n    let classNameToAppend ='';\r\n    if(props.ITypeMovie === 'movie')\r\n        classNameToAppend = 'sizeOfNewSearchMovie';\r\n    else\r\n        classNameToAppend = 'sizeOfNewSearchTv';\r\n    return (\r\n        <React.Fragment>\r\n            <center className=\"customImageDisplay\">\r\n               <Image inline onClick={() => props.movieDetials(props.ITypeMovie)} src={`https://image.tmdb.org/t/p/original/${props.movie.poster_path}`}\r\n                    className={classNameToAppend}\r\n                />\r\n            </center>\r\n        </React.Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default DisplayAllGeresOfMovies;"]},"metadata":{},"sourceType":"module"}