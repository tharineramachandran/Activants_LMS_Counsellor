{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\ACTIVANTS\\\\Desktop\\\\LMS Councellor\\\\Activants_LMS_Counsellor\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ACTIVANTS\\\\Desktop\\\\LMS Councellor\\\\Activants_LMS_Counsellor\\\\ATIVANTS_LMS_COUNSELLOR\\\\src\\\\SecondaryComponents\\\\Desktop\\\\RegistrationComponents\\\\_Registration_Sixth.js\";\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Header, Icon, Form, Image, Message, Segment, Grid, Modal, Search, Button, Dimmer, Label, Loader, Progress, Divider, List, Dropdown, Select } from 'semantic-ui-react';\nimport { useForm } from \"react-hook-form\";\nimport { useStep } from 'react-hooks-helper';\nimport demoPicture from '../../../Static/Images/demoPicture.png';\nimport amazingPhoto from '../../../Static/Images/amazingPhoto.png';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport ReactCrop from 'react-image-crop';\n\nvar Registration_Second = function Registration_Second(_ref) {\n  var formData = _ref.formData,\n      setForm = _ref.setForm,\n      navigation = _ref.navigation;\n  var COUNSELLOR_DOCUMENT_IMAGE = formData.COUNSELLOR_DOCUMENT_IMAGE;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      src = _useState2[0],\n      selectFile = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      image = _useState4[0],\n      setImage = _useState4[1];\n\n  var _useState5 = useState({\n    aspect: 1 / 1\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      crop = _useState6[0],\n      setCrop = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      result = _useState8[0],\n      setResult = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      completed = _useState10[0],\n      setCompleted = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      statusCode = _useState12[0],\n      setStatusCode = _useState12[1];\n\n  var _useState13 = useState({\n    files: '',\n    filename: ''\n  }),\n      _useState14 = _slicedToArray(_useState13, 2),\n      file = _useState14[0],\n      setFileName = _useState14[1];\n\n  var _useForm = useForm({}),\n      handleSubmit = _useForm.handleSubmit,\n      register = _useForm.register,\n      errors = _useForm.errors;\n\n  var onSubmit = function onSubmit(data) {\n    navigation.next();\n  };\n\n  var handleFileChange = function handleFileChange(e) {\n    selectFile(URL.createObjectURL(e.target.files[0]));\n    getCroppedImg();\n  };\n\n  function getCroppedImg() {\n    var canvas = document.createElement('canvas');\n    var base64Image = canvas.toDataURL('image/jpeg');\n    setResult(base64Image);\n  }\n\n  var Cropped = function Cropped() {\n    var e = {\n      target: {\n        name: \"COUNSELLOR_DOCUMENT_IMAGE\",\n        value: result\n      }\n    };\n    setForm(e);\n  };\n\n  useEffect(function () {\n    var e = {\n      target: {\n        name: \"COUNSELLOR_DOCUMENT_IMAGE\",\n        value: result\n      }\n    };\n    setForm(e);\n  }, [result]);\n  useEffect(function () {\n    setInterval(function () {\n      return setCompleted(Math.floor(Math.random() * 100) + 1);\n    }, 2000);\n  }, []);\n\n  fileChange = function fileChange(e) {\n    _this.setState({\n      file: e.target.files[0],\n      fileName: e.target.files[0].name\n    });\n  };\n\n  console.log(result);\n  console.log(formData);\n  return /*#__PURE__*/React.createElement(Grid, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"center\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Segment, {\n    stacked: true,\n    style: {\n      width: '80%',\n      textAlign: 'left'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  }, \"Profile Photo\"), /*#__PURE__*/React.createElement(\"center\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: _this.onFormSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 37\n    }\n  }, \"File input  upload \"), /*#__PURE__*/React.createElement(Button, {\n    as: \"label\",\n    htmlFor: \"file\",\n    type: \"button\",\n    animated: \"fade\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button.Content, {\n    visible: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"file\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(Button.Content, {\n    hidden: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 41\n    }\n  }, \"Choose a File\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"file\",\n    hidden: true,\n    onChange: fileChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Form.Input, {\n    fluid: true,\n    label: \"File Chosen: \",\n    placeholder: \"Use the above bar to browse your file system\",\n    readOnly: true,\n    value: fileName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      marginTop: \"20px\"\n    },\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 37\n    }\n  }, \"Upload\"), statusCode && statusCode === 200 ? /*#__PURE__*/React.createElement(Progress, {\n    style: {\n      marginTop: \"20px\"\n    },\n    percent: 100,\n    success: true,\n    progress: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 41\n    }\n  }, \"File Upload Success\") : statusCode && statusCode === 500 ? /*#__PURE__*/React.createElement(Progress, {\n    style: {\n      marginTop: \"20px\"\n    },\n    percent: 100,\n    error: true,\n    active: true,\n    progress: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 41\n    }\n  }, \"File Upload Failed\") : null)), /*#__PURE__*/React.createElement(Grid, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 16,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Segment, {\n    stacked: true,\n    style: {\n      width: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      textAlign: 'left'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    color: \"blue\",\n    horizontal: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 49\n    }\n  }, \"Select your Photo and crop it\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    class: \"custom-file-input\",\n    for: \"Upload\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: handleFileChange,\n    id: \"Upload\",\n    name: \"_photos\",\n    accept: \"image/*\",\n    className: \"hiddenButton\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(Segment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Progress, {\n    percent: 10,\n    size: \"tiny\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 45\n    }\n  }), result && \"Document Uploaded\", /*#__PURE__*/React.createElement(Progress, {\n    completed: completed,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 45\n    }\n  })))))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    size: \"small\",\n    onSubmit: handleSubmit(onSubmit),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"teal\",\n    fluid: true,\n    size: \"large\",\n    onClick: function onClick() {\n      return navigation.previous();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 29\n    }\n  }, \"Back\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    color: \"teal\",\n    fluid: true,\n    size: \"large\",\n    type: \"submit\",\n    onClick: function onClick() {\n      return navigation.next();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 29\n    }\n  }, \"Next\"))))));\n};\n\nexport default Registration_Second;","map":{"version":3,"sources":["C:/Users/ACTIVANTS/Desktop/LMS Councellor/Activants_LMS_Counsellor/ATIVANTS_LMS_COUNSELLOR/src/SecondaryComponents/Desktop/RegistrationComponents/_Registration_Sixth.js"],"names":["React","useState","useEffect","useContext","Header","Icon","Form","Image","Message","Segment","Grid","Modal","Search","Button","Dimmer","Label","Loader","Progress","Divider","List","Dropdown","Select","useForm","useStep","demoPicture","amazingPhoto","ReactCrop","Registration_Second","formData","setForm","navigation","COUNSELLOR_DOCUMENT_IMAGE","src","selectFile","image","setImage","aspect","crop","setCrop","result","setResult","completed","setCompleted","statusCode","setStatusCode","files","filename","file","setFileName","handleSubmit","register","errors","onSubmit","data","next","handleFileChange","e","URL","createObjectURL","target","getCroppedImg","canvas","document","createElement","base64Image","toDataURL","Cropped","name","value","setInterval","Math","floor","random","fileChange","setState","fileName","console","log","width","textAlign","onFormSubmit","marginTop","previous"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport {\r\n    Header, Icon, Form, Image, Message,\r\n    Segment, Grid, Modal, Search, Button, Dimmer, Label, Loader, Progress, Divider, List, Dropdown, Select\r\n} from 'semantic-ui-react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useStep } from 'react-hooks-helper';\r\nimport demoPicture from '../../../Static/Images/demoPicture.png'\r\nimport amazingPhoto from '../../../Static/Images/amazingPhoto.png'\r\nimport 'react-image-crop/dist/ReactCrop.css'\r\nimport ReactCrop from 'react-image-crop';\r\n\r\nconst Registration_Second = ({ formData, setForm, navigation }) => {\r\n\r\n    const { COUNSELLOR_DOCUMENT_IMAGE } = formData;\r\n    const [src, selectFile] = useState(null);\r\n    const [image, setImage] = useState(null);\r\n    const [crop, setCrop] = useState({ aspect: 1 / 1 });\r\n    const [result, setResult] = useState(null);\r\n    const [completed, setCompleted] = useState(0);\r\n    const [statusCode, setStatusCode] = useState('');\r\n    const [file, setFileName] = useState({files:'', filename:''});\r\n\r\n    const { handleSubmit, register, errors } = useForm({\r\n\r\n    });\r\n\r\n    const onSubmit = (data) => {\r\n\r\n        navigation.next()\r\n    };\r\n\r\n    const handleFileChange = e => {\r\n        selectFile(URL.createObjectURL(e.target.files[0]))\r\n        getCroppedImg();\r\n    }\r\n\r\n    function getCroppedImg() {\r\n        const canvas = document.createElement('canvas');\r\n        const base64Image = canvas.toDataURL('image/jpeg');\r\n        setResult(base64Image);\r\n\r\n    }\r\n\r\n    const Cropped = () => {\r\n        const e = {\r\n            target: {\r\n                name: \"COUNSELLOR_DOCUMENT_IMAGE\",\r\n                value: result\r\n            }\r\n        };\r\n        setForm(e);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const e = {\r\n            target: {\r\n                name: \"COUNSELLOR_DOCUMENT_IMAGE\",\r\n                value: result\r\n            }\r\n        };\r\n        setForm(e);\r\n    }, [result])\r\n\r\n\r\n    useEffect(() => {\r\n        setInterval(() => setCompleted(Math.floor(Math.random() * 100) + 1), 2000);\r\n    }, []);\r\n\r\n    fileChange = e => {\r\n        this.setState(\r\n          { file: e.target.files[0], fileName: e.target.files[0].name }\r\n        );\r\n      };\r\n\r\n    console.log(result);\r\n    console.log(formData);\r\n\r\n    return (\r\n\r\n        <Grid>\r\n            <Grid.Column>\r\n                <center>\r\n                    <Segment stacked style={{ width: '80%', textAlign: 'left' }}>\r\n                        <h2>Profile Photo</h2>\r\n                        <center>\r\n\r\n\r\n                            <Form onSubmit={this.onFormSubmit}>\r\n                                <Form.Field>\r\n                                    <label>File input  upload </label>\r\n                                    <Button as=\"label\" htmlFor=\"file\" type=\"button\" animated=\"fade\">\r\n                                        <Button.Content visible>\r\n                                            <Icon name=\"file\" />\r\n                                        </Button.Content>\r\n                                        <Button.Content hidden>Choose a File</Button.Content>\r\n                                    </Button>\r\n                                    <input\r\n                                        type=\"file\"\r\n                                        id=\"file\"\r\n                                        hidden\r\n                                        onChange={fileChange}\r\n                                    />\r\n                                    <Form.Input\r\n                                        fluid\r\n                                        label=\"File Chosen: \"\r\n                                        placeholder=\"Use the above bar to browse your file system\"\r\n                                        readOnly\r\n                                        value={fileName}\r\n                                    />\r\n                                    <Button style={{ marginTop: \"20px\" }} type=\"submit\">\r\n                                        Upload\r\n                                    </Button>\r\n                                    {statusCode && statusCode === 200 ? (\r\n                                        <Progress\r\n                                            style={{ marginTop: \"20px\" }}\r\n                                            percent={100}\r\n                                            success\r\n                                            progress\r\n                                        >\r\n                                            File Upload Success\r\n                                        </Progress>\r\n                                    ) : statusCode && statusCode === 500 ? (\r\n                                        <Progress\r\n                                            style={{ marginTop: \"20px\" }}\r\n                                            percent={100}\r\n                                            error\r\n                                            active\r\n                                            progress\r\n                                        >\r\n                                            File Upload Failed\r\n                                        </Progress>\r\n                                    ) : null}\r\n                                </Form.Field>\r\n                            </Form>\r\n\r\n\r\n                            <Grid>\r\n                                <Grid.Row>\r\n                                    <Grid.Column width={16}>\r\n                                        <Segment stacked style={{ width: '100%' }}>\r\n                                            <div style={{ width: '100%', textAlign: 'left' }}>\r\n                                                <Label color='blue' horizontal>\r\n                                                    Select your Photo and crop it\r\n                                            </Label>\r\n                                            </div>\r\n                                            <br />\r\n                                            <label class=\"custom-file-input\" for=\"Upload\" >\r\n                                            </label>\r\n                                            <br />\r\n                                            <input\r\n                                                type=\"file\"\r\n                                                onChange={handleFileChange}\r\n                                                id=\"Upload\"\r\n                                                name=\"_photos\"\r\n                                                accept=\"image/*\"\r\n                                                className=\"hiddenButton\"\r\n                                            />\r\n                                        </Segment>\r\n                                        <Segment>\r\n                                            <Progress percent={10} size='tiny'>\r\n                                            </Progress>\r\n                                            {result && \"Document Uploaded\"}\r\n                                            <Progress completed={completed} />\r\n                                        </Segment>\r\n                                    </Grid.Column>\r\n                                </Grid.Row>\r\n                            </Grid>\r\n                        </center>\r\n                        <br /><br />\r\n                        <Form size='small' onSubmit={handleSubmit(onSubmit)}>\r\n\r\n                            <Button\r\n                                color='teal'\r\n                                fluid\r\n                                size='large'\r\n                                onClick={() => navigation.previous()}\r\n                            >\r\n                                Back\r\n                            </Button>\r\n                            <br />\r\n                            <Button\r\n                                color='teal'\r\n                                fluid\r\n                                size='large'\r\n                                type=\"submit\"\r\n                                onClick={() => navigation.next()}\r\n                            >\r\n                                Next\r\n                    </Button>\r\n                        </Form>\r\n                    </Segment>\r\n                </center>\r\n\r\n            </Grid.Column>\r\n        </Grid >\r\n    )\r\n\r\n}\r\n\r\nexport default Registration_Second;"]},"metadata":{},"sourceType":"module"}