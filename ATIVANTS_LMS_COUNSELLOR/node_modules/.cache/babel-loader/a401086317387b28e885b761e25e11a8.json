{"ast":null,"code":"var _jsxFileName = \"E:\\\\ShawMovieWebsite\\\\shaw-website\\\\src\\\\Store\\\\_Redux.js\";\nimport React, { useReducer, useEffect, useState } from 'react';\nimport _AxiosInstance from '../Store/_AxiosInstance';\nimport DisplayAllGeresOfMovies from '../Containers/DisplayAllGeresOfMovies';\nimport { Grid, Image } from 'semantic-ui-react';\nconst initState = {\n  movieList: [],\n  movieOverview: {},\n  classNameForImage: '',\n  ImageClassName: ''\n};\n\nconst reducder = (prevState, action) => {\n  switch (action.type) {\n    case 'FETCH_TRENDING':\n      return {\n        movieList: action.payload.data.results,\n        classNameForImage: 'scrollmenuImage',\n        ImageClassName: 'sizeOfContainerMovieImage'\n      };\n\n    case 'FETCH_HORROW':\n      return {\n        movieList: action.payload.data.results,\n        classNameForImage: 'scrollmenuImageBigger',\n        ImageClassName: 'sizeOfContainerMovieImageBigger'\n      };\n\n    default:\n      return prevState;\n  }\n};\n\nconst _Redux = props => {\n  const [stateTrending, dispatchTrending] = useReducer(reducder, initState);\n  const [movieOverview, setMovieOverview] = useState({});\n  const [yes, setYes] = useState(false);\n  let movies;\n  useEffect(() => {\n    _AxiosInstance.get('/trending/all/week?api_key=028e8ea4ca7d9164d085c9238979098b&language=en-US').then(data => {\n      dispatchTrending({\n        type: props.FetchType,\n        payload: data\n      });\n    }).catch(err => {});\n  }, []);\n\n  if (stateTrending.movieList) {\n    movies = stateTrending.movieList.map(movie => {\n      let movieImageUrl = 'https://image.tmdb.org/t/p/w500/' + movie.backdrop_path;\n\n      if (movieImageUrl !== null) {\n        const movieComponent = /*#__PURE__*/React.createElement(DisplayAllGeresOfMovies, {\n          movieDetials: selectedMovie(movie),\n          ImgClass: stateTrending.ImageClass,\n          key: movie.id,\n          movie: movie,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }\n        });\n        return movieComponent;\n      }\n    });\n  }\n\n  const selectedMovie = movie => {\n    let url;\n\n    if (movie.media_type === \"movie\") {\n      const movieId = movie.id;\n      url = `/movie/${movieId}?api_key=028e8ea4ca7d9164d085c9238979098b&append_to_response=videos`;\n    } else if (movie.media_type === \"tv\") {\n      const tvId = movie.id;\n      url = `/tv/${tvId}?api_key=028e8ea4ca7d9164d085c9238979098b&append_to_response=videos`;\n    }\n\n    _AxiosInstance.get(url).then(res => {\n      const movieData = res.data;\n      setMovieOverview(movieData);\n      setYes(true);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: \"GridRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    className: \"GridColumn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: stateTrending.classNameForImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"center\", {\n    className: \"customImageDisplay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 29\n    }\n  }, movies)))));\n};\n\nexport default _Redux;","map":{"version":3,"sources":["E:/ShawMovieWebsite/shaw-website/src/Store/_Redux.js"],"names":["React","useReducer","useEffect","useState","_AxiosInstance","DisplayAllGeresOfMovies","Grid","Image","initState","movieList","movieOverview","classNameForImage","ImageClassName","reducder","prevState","action","type","payload","data","results","_Redux","props","stateTrending","dispatchTrending","setMovieOverview","yes","setYes","movies","get","then","FetchType","catch","err","map","movie","movieImageUrl","backdrop_path","movieComponent","selectedMovie","ImageClass","id","url","media_type","movieId","tvId","res","movieData","error","console","log"],"mappings":"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","sourcesContent":["import React, { useReducer, useEffect, useState } from 'react';\r\nimport _AxiosInstance from '../Store/_AxiosInstance'\r\nimport DisplayAllGeresOfMovies from '../Containers/DisplayAllGeresOfMovies';\r\nimport { Grid, Image } from 'semantic-ui-react'\r\n\r\nconst initState = {\r\n    movieList: [],\r\n    movieOverview: {},\r\n    classNameForImage: '',\r\n    ImageClassName: ''\r\n}\r\n\r\nconst reducder = (prevState, action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_TRENDING':\r\n            return {\r\n                movieList: action.payload.data.results,\r\n                classNameForImage: 'scrollmenuImage',\r\n                ImageClassName: 'sizeOfContainerMovieImage'\r\n            };\r\n\r\n        case 'FETCH_HORROW':\r\n            return {\r\n                movieList: action.payload.data.results,\r\n                classNameForImage: 'scrollmenuImageBigger',\r\n                ImageClassName: 'sizeOfContainerMovieImageBigger'\r\n            };\r\n\r\n        default:\r\n            return prevState;\r\n    }\r\n}\r\n\r\nconst _Redux = props => {\r\n\r\n    const [stateTrending, dispatchTrending] = useReducer(reducder, initState);\r\n    const [movieOverview, setMovieOverview] = useState({});\r\n    const [yes, setYes] = useState(false);\r\n\r\n    let movies;\r\n\r\n    useEffect(() => {\r\n        _AxiosInstance.get('/trending/all/week?api_key=028e8ea4ca7d9164d085c9238979098b&language=en-US')\r\n            .then(data => {\r\n                dispatchTrending({ type: props.FetchType, payload: data })\r\n            })\r\n            .catch(err => {\r\n\r\n            })\r\n    }, []);\r\n\r\n    if (stateTrending.movieList) {\r\n        movies = stateTrending.movieList.map((movie) => {\r\n            let movieImageUrl = 'https://image.tmdb.org/t/p/w500/' + movie.backdrop_path;\r\n\r\n            if (movieImageUrl !== null) {\r\n                const movieComponent = (\r\n                    <DisplayAllGeresOfMovies\r\n                        movieDetials={selectedMovie(movie)}\r\n                        ImgClass={stateTrending.ImageClass}\r\n                        key={movie.id}\r\n                        movie={movie}\r\n                    />\r\n                );\r\n                return movieComponent;\r\n            }\r\n        });\r\n    }\r\n\r\n    const selectedMovie = movie => {\r\n        let url;\r\n        if (movie.media_type === \"movie\") {\r\n            const movieId = movie.id;\r\n            url = `/movie/${movieId}?api_key=028e8ea4ca7d9164d085c9238979098b&append_to_response=videos`;\r\n\r\n        } else if (movie.media_type === \"tv\") {\r\n            const tvId = movie.id\r\n            url = `/tv/${tvId}?api_key=028e8ea4ca7d9164d085c9238979098b&append_to_response=videos`;\r\n        }\r\n\r\n        _AxiosInstance.get(url)\r\n            .then(res => {\r\n                const movieData = res.data;\r\n                setMovieOverview(movieData);\r\n                setYes(true);\r\n\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid className=\"GridRow\">\r\n                <Grid.Column className=\"GridColumn\">\r\n                    <div className={stateTrending.classNameForImage}>\r\n                        {\r\n                            <center className=\"customImageDisplay\">\r\n                                {movies}\r\n                            </center>\r\n                        }\r\n                    </div>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </React.Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default _Redux;"]},"metadata":{},"sourceType":"module"}