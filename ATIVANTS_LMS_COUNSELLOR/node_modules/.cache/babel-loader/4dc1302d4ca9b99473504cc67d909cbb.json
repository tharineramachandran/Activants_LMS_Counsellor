{"ast":null,"code":"import _slicedToArray from \"E:\\\\CircuitBreakerShow\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\CircuitBreakerShow\\\\src\\\\Containers\\\\SearchGenresResult.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport _Header from '../SecondaryComponents/Desktop/_Header';\nimport _NavigationItems from '../SecondaryComponents/Desktop/_NavigationItems';\nimport _MovieGenres from '../SecondaryComponents/Desktop/_MovieGenres';\nimport axios from 'axios';\nimport _SearchMovieList from '../SecondaryComponents/Desktop/_SearchMovieList';\nimport _SearchMovieListDisplay from '../SecondaryComponents/Desktop/_SearchMovieListDisplay';\n\nvar SearchGenresResult = function SearchGenresResult(_ref) {\n  var Ids = _ref.Ids;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputValueNew = _useState2[0],\n      setTheNewInputValue = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      movieList = _useState4[0],\n      setMovieList = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      movieOverview = _useState6[0],\n      setMovieOverview = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      value = _useState8[0],\n      setValue = _useState8[1];\n\n  var typeInput = function typeInput(e) {\n    setTheNewInputValue(e.target.value);\n  };\n\n  var closeModalAgain = function closeModalAgain() {\n    setTheNewInputValue('');\n  };\n\n  useEffect(function () {\n    var url = \"https://api.themoviedb.org/3/search/multi?api_key=028e8ea4ca7d9164d085c9238979098b&language=en-US&include_adult=false&query=\".concat(inputValueNew);\n    axios.get(url).then(function (res) {\n      var results = res.data.results;\n      var movieImageUrl;\n      var movieRows = [];\n      results.forEach(function (movie) {\n        if (movie.poster_path !== null && movie.media_type !== \"person\") {\n          movieImageUrl = \"https://image.tmdb.org/t/p/w500\" + movie.poster_path;\n          var movieComponent = /*#__PURE__*/React.createElement(_SearchMovieListDisplay, {\n            movieDetials: function movieDetials() {\n              return selectMovieHandler(movie);\n            },\n            key: movie.id,\n            movieImage: movieImageUrl,\n            movie: movie,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 36\n            }\n          });\n          movieRows.push(movieComponent); // console.log(movie)\n        }\n      });\n      setMovieList(movieRows);\n    }).catch(function (error) {\n      console.log(\"errror\", error);\n    });\n    return function () {\n      setMovieList([]);\n      console.log(\"cleaned DC\");\n    };\n  }, [inputValueNew]);\n\n  var Url = function Url(x) {\n    return \"https://api.themoviedb.org/3/movie/\".concat(x, \"?api_key=028e8ea4ca7d9164d085c9238979098b&append_to_response=videos\");\n  };\n\n  var UrlTv = function UrlTv(x) {\n    return \"https://api.themoviedb.org/3/tv/\".concat(x, \"?api_key=028e8ea4ca7d9164d085c9238979098b&append_to_response=videos\");\n  };\n\n  var callUrl = function callUrl(url) {\n    axios.get(url).then(function (res) {\n      var movieData = res.data;\n      setMovieOverview(movieData);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  useEffect(function () {\n    var url;\n    if (Ids._Itype === \"movie\") url = Url(Ids.id);else if (Ids._Itype === \"tv\") url = UrlTv(Ids.id);\n    callUrl(url);\n    setTheNewInputValue(Ids.name);\n    setValue(true);\n  }, [Ids]);\n\n  var selectMovieHandler = function selectMovieHandler(movie) {\n    var url;\n    if (movie.media_type === \"movie\") url = Url(movie.id);else if (movie.media_type === \"tv\") url = UrlTv(movie.id);\n    callUrl(url);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, value ? /*#__PURE__*/React.createElement(_SearchMovieList, {\n    movie: movieOverview,\n    listOfMovies: movieList,\n    onSearchHandler: typeInput,\n    searchInputValue: inputValueNew,\n    onCloseModal: closeModalAgain,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 16\n    }\n  }) : \" \");\n};\n\nexport default SearchGenresResult;","map":{"version":3,"sources":["E:/CircuitBreakerShow/src/Containers/SearchGenresResult.js"],"names":["React","useState","useEffect","_Header","_NavigationItems","_MovieGenres","axios","_SearchMovieList","_SearchMovieListDisplay","SearchGenresResult","Ids","inputValueNew","setTheNewInputValue","movieList","setMovieList","movieOverview","setMovieOverview","value","setValue","typeInput","e","target","closeModalAgain","url","get","then","res","results","data","movieImageUrl","movieRows","forEach","movie","poster_path","media_type","movieComponent","selectMovieHandler","id","push","catch","error","console","log","Url","x","UrlTv","callUrl","movieData","_Itype","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport _Header from '../SecondaryComponents/Desktop/_Header'\r\nimport _NavigationItems from '../SecondaryComponents/Desktop/_NavigationItems'\r\nimport _MovieGenres from '../SecondaryComponents/Desktop/_MovieGenres'\r\nimport axios from 'axios'\r\nimport _SearchMovieList from '../SecondaryComponents/Desktop/_SearchMovieList'\r\nimport _SearchMovieListDisplay from '../SecondaryComponents/Desktop/_SearchMovieListDisplay'\r\n\r\nconst SearchGenresResult = ({ Ids }) => {\r\n\r\n  const [inputValueNew, setTheNewInputValue] = useState('');\r\n  const [movieList, setMovieList] = useState([]);\r\n  const [movieOverview, setMovieOverview] = useState({});\r\n  const [value, setValue] = useState(false);\r\n\r\n  const typeInput = e => {\r\n    setTheNewInputValue(e.target.value);\r\n  }\r\n\r\n  const closeModalAgain = () => {\r\n    setTheNewInputValue('');\r\n  }\r\n\r\n  useEffect(() => {\r\n    const url = `https://api.themoviedb.org/3/search/multi?api_key=028e8ea4ca7d9164d085c9238979098b&language=en-US&include_adult=false&query=${inputValueNew}`;\r\n    axios.get(url)\r\n      .then(res => {\r\n        const results = res.data.results;\r\n        let movieImageUrl;\r\n        let movieRows = [];\r\n        results.forEach((movie) => {\r\n          if (movie.poster_path !== null && movie.media_type !== \"person\") {\r\n            movieImageUrl = \"https://image.tmdb.org/t/p/w500\" + movie.poster_path;\r\n\r\n            const movieComponent = <_SearchMovieListDisplay\r\n              movieDetials={() => selectMovieHandler(movie)}\r\n              key={movie.id}\r\n              movieImage={movieImageUrl}\r\n              movie={movie}\r\n            />\r\n            movieRows.push(movieComponent);\r\n            // console.log(movie)\r\n          }\r\n        })\r\n\r\n        setMovieList(movieRows);\r\n\r\n\r\n      }).catch(error => {\r\n        console.log(\"errror\", error);\r\n      });\r\n\r\n    return () => {\r\n      setMovieList([]);\r\n      console.log(\"cleaned DC\")\r\n    }\r\n\r\n  }, [inputValueNew]);\r\n\r\n\r\n  const Url = x => `https://api.themoviedb.org/3/movie/${x}?api_key=028e8ea4ca7d9164d085c9238979098b&append_to_response=videos`;\r\n  const UrlTv = x => `https://api.themoviedb.org/3/tv/${x}?api_key=028e8ea4ca7d9164d085c9238979098b&append_to_response=videos`;\r\n\r\n\r\n  const callUrl = url => {\r\n    axios.get(url)\r\n      .then(res => {\r\n        const movieData = res.data;\r\n        setMovieOverview(movieData);\r\n\r\n      }).catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    let url;\r\n    if (Ids._Itype === \"movie\")\r\n      url = Url(Ids.id)\r\n\r\n    else if (Ids._Itype === \"tv\")\r\n      url = UrlTv(Ids.id)\r\n\r\n    callUrl(url);\r\n    setTheNewInputValue(Ids.name);\r\n    setValue(true);\r\n\r\n  }, [Ids]);\r\n\r\n\r\n  const selectMovieHandler = movie => {\r\n    let url;\r\n    if (movie.media_type === \"movie\")\r\n      url = Url(movie.id)\r\n\r\n    else if (movie.media_type === \"tv\")\r\n      url = UrlTv(movie.id)\r\n\r\n    callUrl(url);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {value ? <_SearchMovieList movie={movieOverview} listOfMovies={movieList} onSearchHandler={typeInput} searchInputValue={inputValueNew} onCloseModal={closeModalAgain} /> : \" \"}\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default SearchGenresResult;"]},"metadata":{},"sourceType":"module"}