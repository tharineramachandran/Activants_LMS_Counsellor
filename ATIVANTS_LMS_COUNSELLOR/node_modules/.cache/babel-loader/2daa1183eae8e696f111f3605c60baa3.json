{"ast":null,"code":"var _jsxFileName = \"E:\\\\ShawMovieWebsite\\\\shaw-website\\\\src\\\\SecondaryComponents\\\\Desktop\\\\_SearchMovieListDisplay.js\";\nimport React, { useState } from 'react';\nimport { Grid, Image, List, Divider } from 'semantic-ui-react';\n\nconst _SearchMovieListDisplay = props => {\n  const [movieList, setMovielist] = useState(true);\n  const backgroundStyle = {\n    backgroundSize: \"cover\",\n    backgroundImage: `url(https://image.tmdb.org/t/p/original/${props.movie.backdrop_path || props.movie.poster_path})`\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, movieList ? /*#__PURE__*/React.createElement(\"div\", {\n    style: backgroundStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 25\n    }\n  }, props.movie.title || props.movie.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 29\n    }\n  }, \"Rating: \", props.movie.vote_average * 10, \"%\", \" \"), \"Release date: \", props.movie.release_date || props.movie.first_air_date, \"Runtime: \", props.movie.runtime || props.movie.episode_run_time, \"m\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 25\n    }\n  }, props.movie.number_of_episodes ? \" Episodes: \" + props.movie.number_of_episodes : \"\", props.movie.number_of_seasons ? \" Seasons: \" + props.movie.number_of_seasons : \"\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }\n  }, props.movie.overview), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  }, \"Play\"), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  }, \"My List\"))) : /*#__PURE__*/React.createElement(List, {\n    bulleted: true,\n    horizontal: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"center\", {\n    className: \"customImageDisplay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    onClick: (props.movieDetails, () => setMovielist(false)),\n    src: props.movieImage,\n    className: \"sizeOfNewSearchMovie\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  }))));\n};\n\nexport default _SearchMovieListDisplay;","map":{"version":3,"sources":["E:/ShawMovieWebsite/shaw-website/src/SecondaryComponents/Desktop/_SearchMovieListDisplay.js"],"names":["React","useState","Grid","Image","List","Divider","_SearchMovieListDisplay","props","movieList","setMovielist","backgroundStyle","backgroundSize","backgroundImage","movie","backdrop_path","poster_path","title","name","vote_average","release_date","first_air_date","runtime","episode_run_time","number_of_episodes","number_of_seasons","overview","movieDetails","movieImage"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,IAAtB,EAA4BC,OAA5B,QAA2C,mBAA3C;;AAEA,MAAMC,uBAAuB,GAAIC,KAAD,IAAW;AAEvC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,IAAD,CAA1C;AAEA,QAAMS,eAAe,GAAG;AACpBC,IAAAA,cAAc,EAAE,OADI;AAEpBC,IAAAA,eAAe,EAAG,2CAA0CL,KAAK,CAACM,KAAN,CAAYC,aAAZ,IAA6BP,KAAK,CAACM,KAAN,CAAYE,WAAY;AAF7F,GAAxB;AAKA,sBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,SAAS,gBACN;AAAK,IAAA,KAAK,EAAEE,eAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,KAAK,CAACM,KAAN,CAAYG,KAAZ,IAAqBT,KAAK,CAACM,KAAN,CAAYI,IADtC,CADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACaV,KAAK,CAACM,KAAN,CAAYK,YAAZ,GAA2B,EADxC,OAC6C,GAD7C,CADJ,oBAIOX,KAAK,CAACM,KAAN,CAAYM,YAAZ,IAA4BZ,KAAK,CAACM,KAAN,CAAYO,cAJ/C,eAKEb,KAAK,CAACM,KAAN,CAAYQ,OAAZ,IAAuBd,KAAK,CAACM,KAAN,CAAYS,gBALrC,MAJJ,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKf,KAAK,CAACM,KAAN,CAAYU,kBAAZ,GAAiC,gBAAgBhB,KAAK,CAACM,KAAN,CAAYU,kBAA7D,GAAkF,EADvF,EAEKhB,KAAK,CAACM,KAAN,CAAYW,iBAAZ,GAAgC,eAAejB,KAAK,CAACM,KAAN,CAAYW,iBAA3D,GAA+E,EAFpF,CAXJ,eAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIjB,KAAK,CAACM,KAAN,CAAYY,QAAhB,CAfJ,eAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBJ,eAoBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eApBJ,CADJ,CADM,gBA6BN,oBAAC,IAAD;AAAM,IAAA,QAAQ,MAAd;AAAe,IAAA,UAAU,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,OAAO,GAAElB,KAAK,CAACmB,YAAN,EAAoB,MAAMjB,YAAY,CAAC,KAAD,CAAxC,CAAd;AAA+D,IAAA,GAAG,EAAEF,KAAK,CAACoB,UAA1E;AAAsF,IAAA,SAAS,EAAC,sBAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CA9BR,CADJ;AAwCH,CAjDD;;AAmDA,eAAerB,uBAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { Grid, Image, List, Divider } from 'semantic-ui-react'\r\n\r\nconst _SearchMovieListDisplay = (props) => {\r\n\r\n    const [movieList, setMovielist] = useState(true);\r\n\r\n    const backgroundStyle = {\r\n        backgroundSize: \"cover\",\r\n        backgroundImage: `url(https://image.tmdb.org/t/p/original/${props.movie.backdrop_path || props.movie.poster_path})`,\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {movieList ?\r\n                <div style={backgroundStyle}>\r\n                    <div>\r\n                        <h1>\r\n                            {props.movie.title || props.movie.name}\r\n                        </h1>\r\n                        <p>\r\n                            <span>\r\n                                Rating: {props.movie.vote_average * 10}%{\" \"}\r\n                            </span>\r\n                Release date: {props.movie.release_date || props.movie.first_air_date}\r\n                Runtime: {props.movie.runtime || props.movie.episode_run_time}m\r\n                        </p>\r\n                        <p>\r\n                            {props.movie.number_of_episodes ? \" Episodes: \" + props.movie.number_of_episodes : \"\"}\r\n                            {props.movie.number_of_seasons ? \" Seasons: \" + props.movie.number_of_seasons : \"\"}\r\n                        </p>\r\n                        <p>{props.movie.overview}</p>\r\n                        <button>\r\n\r\n                            Play\r\n            </button>\r\n                        <button>\r\n\r\n                            My List\r\n            </button>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <List bulleted horizontal>\r\n                    <center className=\"customImageDisplay\">\r\n                        <Image onClick={props.movieDetails, () => setMovielist(false)} src={props.movieImage} className=\"sizeOfNewSearchMovie\" />\r\n                    </center>\r\n                </List>\r\n                \r\n            }\r\n        </React.Fragment >\r\n    )\r\n}\r\n\r\nexport default _SearchMovieListDisplay;"]},"metadata":{},"sourceType":"module"}