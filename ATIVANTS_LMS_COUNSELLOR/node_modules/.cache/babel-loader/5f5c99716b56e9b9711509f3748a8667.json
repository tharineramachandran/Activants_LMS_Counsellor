{"ast":null,"code":"var _jsxFileName = \"E:\\\\ShawMovieWebsite\\\\shaw-website\\\\src\\\\HeaderSegement\\\\HeaderPart.jsx\";\nimport React, { useState } from 'react';\nimport { Header, Icon, Segment, Grid, Modal, Button, Embed, Image } from 'semantic-ui-react';\nimport Vikings from '../Video/Vikings.mp4';\nimport Got from '../Video/got.mp4';\nimport ReactPlayer from 'react-player';\n\nconst HeaderPart = () => {\n  const [open, setOpen] = useState(false);\n  const [dimmer, setDimmer] = useState('blurring');\n\n  const show = dimmer => {\n    setDimmer(dimmer);\n    setOpen(true);\n  };\n\n  const close = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    columns: \"equal\",\n    inverted: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Row, {\n    textAlign: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }, \"11\"), /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Segment, {\n    color: \"red\",\n    inverted: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    trigger: /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 45\n      }\n    }, \"Show Modal\"),\n    closeIcon: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Segment, {\n    color: \"red\",\n    inverted: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(ReactPlayer, {\n    url: \"https://www.youtube.com/watch?v=9Za_bQYuL1w\",\n    playing: true,\n    loop: true,\n    width: \"100%\",\n    controls: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 37\n    }\n  }))))))), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => show('blurring'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"Blurring\"), /*#__PURE__*/React.createElement(Modal, {\n    trigger: /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 29\n      }\n    }, \"Blurring Modal\"),\n    dimmer: dimmer,\n    open: open,\n    onClose: () => close(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Segment, {\n    color: \"black\",\n    inverted: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ReactPlayer, {\n    url: \"https://www.youtube.com/watch?v=9Za_bQYuL1w\",\n    playing: true,\n    loop: true,\n    width: \"100%\",\n    controls: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Modal.Actions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    positive: true,\n    icon: \"checkmark\",\n    labelPosition: \"right\",\n    content: \"Ok\",\n    onClick: () => close(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default HeaderPart;","map":{"version":3,"sources":["E:/ShawMovieWebsite/shaw-website/src/HeaderSegement/HeaderPart.jsx"],"names":["React","useState","Header","Icon","Segment","Grid","Modal","Button","Embed","Image","Vikings","Got","ReactPlayer","HeaderPart","open","setOpen","dimmer","setDimmer","show","close"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Header, Icon, Segment, Grid, Modal, Button, Embed, Image } from 'semantic-ui-react';\r\nimport Vikings from '../Video/Vikings.mp4';\r\nimport Got from '../Video/got.mp4';\r\nimport ReactPlayer from 'react-player'\r\n\r\n\r\nconst HeaderPart = () => {\r\n    const [open, setOpen] = useState(false);\r\n    const [dimmer, setDimmer] = useState('blurring');\r\n\r\n    const show = (dimmer) => {\r\n        setDimmer(dimmer);\r\n        setOpen(true);\r\n    }\r\n\r\n    const close = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid columns=\"equal\" inverted>\r\n                <Grid.Row textAlign='right'>\r\n                    <Grid.Column>\r\n                        11\r\n                    </Grid.Column>\r\n                    <Grid.Column>\r\n                        <Segment color='red' inverted>\r\n                            <Modal trigger={<Button>Show Modal</Button>} closeIcon>\r\n                                <Segment color='red' inverted>\r\n                                    <ReactPlayer url=\"https://www.youtube.com/watch?v=9Za_bQYuL1w\"\r\n                                        playing\r\n                                        loop\r\n                                        width='100%'\r\n                                        controls\r\n                                    />\r\n                                </Segment>\r\n                            </Modal>\r\n                        </Segment>\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>\r\n\r\n            <Button onClick={() => show('blurring')}>Blurring</Button>\r\n            <Modal trigger={<Button>Blurring Modal</Button>} dimmer={dimmer} open={open} onClose={() => close()}>\r\n                <Modal.Content>\r\n                    <Segment color='black' inverted>\r\n                        <ReactPlayer url=\"https://www.youtube.com/watch?v=9Za_bQYuL1w\"\r\n                            playing\r\n                            loop\r\n                            width='100%'\r\n                            controls\r\n                        />\r\n                    </Segment>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <Button\r\n                        positive\r\n                        icon='checkmark'\r\n                        labelPosition='right'\r\n                        content=\"Ok\"\r\n                        onClick={() => close()}\r\n                    />\r\n                </Modal.Actions>\r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default HeaderPart;"]},"metadata":{},"sourceType":"module"}