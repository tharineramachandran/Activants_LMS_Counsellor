{"ast":null,"code":"var _jsxFileName = \"E:\\\\ShawMovieWebsite\\\\shaw-website\\\\src\\\\SecondaryComponents\\\\Desktop\\\\_SearchMovieList.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Header, Icon, Segment, Grid, Modal, Search, Button, Dimmer, Loader, Embed, Image, Rating, Divider } from 'semantic-ui-react';\nimport _HeaderMovieCast from './_HeaderMovieCast';\nimport ReactPlayer from 'react-player';\n\nconst _SearchMovieList = props => {\n  const [open, setOpen] = useState(true);\n  const [defHeight, setHeight] = useState(window.innerWidth);\n  const [YouTube, setYoutube] = useState('');\n  useEffect(() => {\n    const setHeightofScreen = () => setHeight(window.innerHeight);\n\n    window.addEventListener('resize', setHeightofScreen);\n    return () => {\n      window.removeEventListener('resize', setHeightofScreen);\n    };\n  });\n  useEffect(() => {\n    if (props.movie.videos) {\n      const Trailer = props.movie.videos.results.sort((a, b) => b.size - a.size).filter(x => x.type === 'Trailer');\n      console.log(Trailer);\n      const Teaser = props.movie.videos.results.sort((a, b) => b.size - a.size).filter(x => x.type === 'Teaser');\n      console.log(Teaser);\n      let key = 'ybji16u608U';\n      if (Trailer) key = Trailer.map(x => x.key);else key = Teaser.map(x => x.key);\n      setYoutube(`https://www.youtube.com/watch?v=${key}`);\n    }\n\n    return () => {\n      setYoutube('');\n    };\n  }, [props.movie]);\n\n  const close = () => {\n    props.onCloseModal();\n    setOpen(!open);\n  };\n\n  console.log(\"came again\", open);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    size: 'fullscreen',\n    dimmer: \"blurring\",\n    open: open,\n    onClose: () => close(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Actions, {\n    style: {\n      padding: '0rem',\n      backgroundColor: '#000000'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    padded: true,\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 13,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    value: props.searchInputValue,\n    showNoResults: false,\n    className: \"customSearch\",\n    onSearchChange: props.onSearchHandler,\n    placeholder: \"Search...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Segment, {\n    color: \"#000000\",\n    style: {\n      padding: '10px',\n      margin: '0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => close(),\n    icon: true,\n    labelPosition: \"left\",\n    style: {\n      backgroundColor: `#111111`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"checkmark\",\n    color: \"green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 37\n    }\n  }, \"Done\")))))), /*#__PURE__*/React.createElement(Modal.Content, {\n    style: {\n      backgroundColor: 'transparent !important'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Description, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    style: {\n      marginRight: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Content, {\n    scrolling: true,\n    style: {\n      marginRight: '0rem',\n      backgroundColor: 'transparent !important',\n      minHeight: `${defHeight}px`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Description, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    padded: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 49\n    }\n  }, props.listOfMovies)))))), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Segment, {\n    color: \"green\",\n    padded: true,\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 33\n    }\n  }, YouTube ? /*#__PURE__*/React.createElement(ReactPlayer, {\n    url: YouTube,\n    loop: true,\n    width: \"100%\",\n    controls: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 48\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Dimmer, {\n    active: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Loader, {\n    padded: true,\n    indeterminate: true,\n    style: {\n      fontSize: '18px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 49\n    }\n  }, \"Click Videos to Play\")), /*#__PURE__*/React.createElement(Icon, {\n    name: \"youtube\",\n    style: {\n      fontSize: '20em'\n    },\n    color: \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 45\n    }\n  }))), props.movie.overview ? /*#__PURE__*/React.createElement(Grid, {\n    style: {\n      marginRight: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Segment, {\n    verticalAlign: \"middle\",\n    style: {\n      backgroundColor: '#111111'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    color: \"green\",\n    style: {\n      fontSize: '2.5em',\n      fontFamilty: '',\n      fontWeight: 'bold',\n      padding: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 53\n    }\n  }, props.movie.title || props.movie.name)))), /*#__PURE__*/React.createElement(Grid.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Segment, {\n    style: {\n      backgroundColor: '#111111'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 49\n    }\n  }, props.movie.overview ? /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"info\",\n    color: \"green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 61\n    }\n  }), \" Description\"), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 12,\n    style: {\n      textAlign: 'justify'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 57\n    }\n  }, props.movie.overview)) : \"\", props.movie.vote_average ? /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"star\",\n    color: \"green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 61\n    }\n  }), \"  Rating\"), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 57\n    }\n  }, props.movie.vote_average * 10, \"%\", \" \")) : \"\", props.movie.number_of_episodes ? /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"braille\",\n    color: \"green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 61\n    }\n  }), \" Episodes\"), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 57\n    }\n  }, props.movie.number_of_episodes)) : \"\", props.movie.number_of_seasons ? /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"folder open\",\n    color: \"green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 61\n    }\n  }), \" Seasons\"), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 57\n    }\n  }, props.movie.number_of_seasons)) : \"\", props.movie.release_date || props.movie.first_air_date ? /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"cog\",\n    color: \"green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 61\n    }\n  }), \" Release Date\"), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 57\n    }\n  }, props.movie.release_date || props.movie.first_air_date)) : \"\", props.movie.runtime || props.movie.episode_run_time ? /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"hourglass half\",\n    color: \"green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 61\n    }\n  }), \" Runtime\"), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 57\n    }\n  }, props.movie.runtime || props.movie.episode_run_time)) : \"\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 53\n    }\n  }))))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 47\n    }\n  })))))));\n};\n\nexport default _SearchMovieList;","map":{"version":3,"sources":["E:/ShawMovieWebsite/shaw-website/src/SecondaryComponents/Desktop/_SearchMovieList.js"],"names":["React","useState","useEffect","Header","Icon","Segment","Grid","Modal","Search","Button","Dimmer","Loader","Embed","Image","Rating","Divider","_HeaderMovieCast","ReactPlayer","_SearchMovieList","props","open","setOpen","defHeight","setHeight","window","innerWidth","YouTube","setYoutube","setHeightofScreen","innerHeight","addEventListener","removeEventListener","movie","videos","Trailer","results","sort","a","b","size","filter","x","type","console","log","Teaser","key","map","close","onCloseModal","padding","backgroundColor","searchInputValue","onSearchHandler","margin","color","marginRight","minHeight","listOfMovies","fontSize","overview","fontFamilty","fontWeight","title","name","textAlign","vote_average","number_of_episodes","number_of_seasons","release_date","first_air_date","runtime","episode_run_time"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Header, Icon, Segment, Grid, Modal, Search, Button, Dimmer, Loader, Embed, Image, Rating, Divider } from 'semantic-ui-react';\r\nimport _HeaderMovieCast from './_HeaderMovieCast';\r\nimport ReactPlayer from 'react-player'\r\n\r\n\r\nconst _SearchMovieList = props => {\r\n    const [open, setOpen] = useState(true);\r\n    const [defHeight, setHeight] = useState(window.innerWidth);\r\n    const [YouTube, setYoutube] = useState('');\r\n\r\n    useEffect(() => {\r\n        const setHeightofScreen = () => setHeight(window.innerHeight)\r\n        window.addEventListener('resize', setHeightofScreen)\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', setHeightofScreen)\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n\r\n        if (props.movie.videos) {\r\n\r\n            const Trailer = props.movie.videos.results.sort((a, b) => b.size - a.size).filter(x => x.type === 'Trailer');\r\n            console.log(Trailer);\r\n            const Teaser = props.movie.videos.results.sort((a, b) => b.size - a.size).filter(x => x.type === 'Teaser');\r\n            console.log(Teaser);\r\n            let key = 'ybji16u608U';\r\n            if (Trailer)\r\n                key = Trailer.map(x => x.key)\r\n            else\r\n                key = Teaser.map(x => x.key)\r\n\r\n            setYoutube(`https://www.youtube.com/watch?v=${key}`);\r\n        }\r\n\r\n\r\n        return () => {\r\n            setYoutube('');\r\n        }\r\n    }, [props.movie])\r\n\r\n\r\n    const close = () => {\r\n        props.onCloseModal();\r\n        setOpen(!open);\r\n    }\r\n\r\n    console.log(\"came again\", open);\r\n    return (\r\n        <React.Fragment>\r\n            <Modal size={'fullscreen'} dimmer=\"blurring\" open={open} onClose={() => close()}>\r\n                <Modal.Actions style={{ padding: '0rem', backgroundColor: '#000000' }}>\r\n                    <Grid padded textAlign=\"center\">\r\n                        <Grid.Column width={13} >\r\n                            <Search\r\n                                value={props.searchInputValue}\r\n                                showNoResults={false}\r\n                                className=\"customSearch\"\r\n                                onSearchChange={props.onSearchHandler}\r\n                                placeholder=\"Search...\" />\r\n                        </Grid.Column>\r\n                        <Grid.Column width={3}>\r\n                            <Segment color='#000000' style={{ padding: '10px', margin: '0px' }}>\r\n                                <Button onClick={() => close()} icon labelPosition='left' style={{ backgroundColor: `#111111` }}>\r\n                                    <Icon name='checkmark' color='green' />\r\n                                    <span style={{ color: 'white' }}>Done\r\n                                            </span>\r\n                                </Button>\r\n                            </Segment>\r\n                        </Grid.Column>\r\n                    </Grid>\r\n                </Modal.Actions>\r\n                <Modal.Content style={{ backgroundColor: 'transparent !important' }}>\r\n                    <Modal.Description>\r\n                        <Grid style={{ marginRight: '1rem' }}>\r\n                            <Grid.Column width={6}>\r\n                                <Modal.Content scrolling style={{ marginRight: '0rem', backgroundColor: 'transparent !important', minHeight: `${defHeight}px` }}>\r\n                                    <Modal.Description>\r\n                                        <Grid padded>\r\n                                            <Grid.Row>\r\n                                                <Grid.Column textAlign='center'>\r\n                                                    {props.listOfMovies}\r\n                                                </Grid.Column>\r\n                                            </Grid.Row>\r\n                                        </Grid>\r\n\r\n                                    </Modal.Description>\r\n                                </Modal.Content>\r\n\r\n                            </Grid.Column>\r\n                            <Grid.Column width={10}>\r\n                                <Segment color='green' padded textAlign=\"center\">\r\n                                    {YouTube ? <ReactPlayer url={YouTube}\r\n                                        loop\r\n                                        width='100%'\r\n                                        controls\r\n                                    /> :\r\n                                        <div>\r\n                                            <Dimmer active>\r\n                                                <Loader padded indeterminate style={{ fontSize: '18px' }}>Click Videos to Play</Loader>\r\n                                            </Dimmer>\r\n                                            <Icon name=\"youtube\" style={{ fontSize: '20em' }} color=\"red\" />\r\n                                        </div>\r\n                                    }\r\n                                </Segment>\r\n                                {props.movie.overview ?\r\n                                    <Grid style={{ marginRight: '1rem' }}>\r\n                                        <Grid.Row >\r\n                                            <Grid.Column>\r\n                                                <Segment verticalAlign='middle' style={{ backgroundColor: '#111111' }}>\r\n                                                    <Header color=\"green\" style={{ fontSize: '2.5em', fontFamilty: '', fontWeight: 'bold', padding: '1rem' }}>\r\n                                                        {props.movie.title || props.movie.name}\r\n                                                    </Header>\r\n                                                </Segment>\r\n                                            </Grid.Column>\r\n                                        </Grid.Row>\r\n                                        <Grid.Row>\r\n                                            <Grid.Column width={16}>\r\n                                                <Segment style={{ backgroundColor: '#111111' }}>\r\n                                                   {props.movie.overview ? \r\n                                                    <Grid>\r\n                                                        <Grid.Column width={4}>\r\n                                                            <Icon name=\"info\" color=\"green\"></Icon> Description\r\n                                                        </Grid.Column>\r\n                                                        <Grid.Column width={12} style={{textAlign:'justify'}}>\r\n                                                            {props.movie.overview}\r\n                                                        </Grid.Column>\r\n                                                    </Grid> : \"\" }\r\n                                                    {props.movie.vote_average ? \r\n                                                    <Grid>\r\n                                                        <Grid.Column width={4}>\r\n                                                            <Icon name=\"star\" color=\"green\"></Icon>  Rating\r\n                                                        </Grid.Column>\r\n                                                        <Grid.Column width={12}>\r\n                                                            {props.movie.vote_average * 10}%{\" \"}\r\n                                                        </Grid.Column>\r\n                                                    </Grid> : \"\" }\r\n                                                    {props.movie.number_of_episodes ?\r\n                                                    <Grid>\r\n                                                        <Grid.Column width={4}>\r\n                                                            <Icon name=\"braille\" color=\"green\"></Icon> Episodes\r\n                                                        </Grid.Column>\r\n                                                        <Grid.Column width={12}>\r\n                                                            {props.movie.number_of_episodes}\r\n                                                        </Grid.Column>\r\n                                                    </Grid> : \"\"}\r\n                                                    {props.movie.number_of_seasons ?\r\n                                                    <Grid>\r\n                                                        <Grid.Column width={4}>\r\n                                                            <Icon name=\"folder open\" color=\"green\"></Icon> Seasons\r\n                                                        </Grid.Column>\r\n                                                        <Grid.Column width={12}>\r\n                                                            {props.movie.number_of_seasons}\r\n                                                        </Grid.Column>\r\n                                                    </Grid> : \"\" }\r\n                                                    {props.movie.release_date || props.movie.first_air_date ? \r\n                                                    <Grid>\r\n                                                        <Grid.Column width={4}>\r\n                                                            <Icon name=\"cog\" color=\"green\"></Icon> Release Date\r\n                                                        </Grid.Column>\r\n                                                        <Grid.Column width={12}>\r\n                                                            {props.movie.release_date || props.movie.first_air_date}\r\n                                                        </Grid.Column>\r\n                                                    </Grid> : \"\" }\r\n                                                    {props.movie.runtime || props.movie.episode_run_time ?\r\n                                                    <Grid>\r\n                                                        <Grid.Column width={4}>\r\n                                                            <Icon name=\"hourglass half\" color=\"green\"></Icon> Runtime\r\n                                                        </Grid.Column>\r\n                                                        <Grid.Column width={12}>\r\n                                                        {props.movie.runtime || props.movie.episode_run_time}\r\n                                                        </Grid.Column>\r\n                                                    </Grid> : \"\" }\r\n                                                    <br/>\r\n                                                </Segment>\r\n                                            </Grid.Column>\r\n                                        </Grid.Row>\r\n                                    </Grid> : <div></div>}\r\n                            </Grid.Column>\r\n                        </Grid>\r\n                    </Modal.Description>\r\n                </Modal.Content>\r\n\r\n            </Modal>\r\n        </React.Fragment >\r\n    )\r\n}\r\n\r\nexport default _SearchMovieList;"]},"metadata":{},"sourceType":"module"}