{"ast":null,"code":"var _jsxFileName = \"E:\\\\ShawMovieWebsite\\\\shaw-website\\\\src\\\\Containers\\\\SearchGenresResult.js\";\nimport React, { Component, useState, useEffect, useRef } from 'react';\nimport _Header from '../SecondaryComponents/Desktop/_Header';\nimport _NavigationItems from '../SecondaryComponents/Desktop/_NavigationItems';\nimport _MovieGenres from '../SecondaryComponents/Desktop/_MovieGenres';\nimport axios from 'axios';\nimport _SearchMovieList from '../SecondaryComponents/Desktop/_SearchMovieList';\nimport _BrowseCategories from '../SecondaryComponents/Desktop/_BrowseCategories';\nimport _SearchMovieListDisplay from '../SecondaryComponents/Desktop/_SearchMovieListDisplay';\n\nconst SearchGenresResult = ({\n  movieGenreSelectedId\n}) => {\n  const [inputValue, setInputValue] = useState('');\n  const [movieList, setMovieList] = useState([]);\n  const [movieOverview, setMovieOverview] = useState(movieGenreSelected);\n  useEffect(() => {\n    const url = `https://api.themoviedb.org/3/search/multi?api_key=028e8ea4ca7d9164d085c9238979098b&language=en-US&include_adult=false&query=${inputValue}`;\n    axios.get(url).then(res => {\n      const results = res.data.results;\n      let movieImageUrl;\n      let movieRows = [];\n      results.forEach(movie => {\n        if (movie.poster_path !== null && movie.media_type !== \"person\") {\n          movieImageUrl = \"https://image.tmdb.org/t/p/w500\" + movie.poster_path;\n          const movieComponent = /*#__PURE__*/React.createElement(_SearchMovieListDisplay, {\n            movieDetials: () => selectMovieHandler(movie),\n            key: movie.id,\n            movieImage: movieImageUrl,\n            movie: movie,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 36\n            }\n          });\n          movieRows.push(movieComponent); // console.log(movie)\n        }\n      });\n      setMovieList(movieRows);\n    }).catch(error => {\n      console.log(\"errror\", error);\n    });\n    return () => {\n      setMovieList([]);\n      console.log(\"cleaned DC\");\n    };\n  }, [inputValue]);\n\n  if (movieGenreSelectedId) {\n    let url;\n  }\n\n  const selectMovieHandler = movie => {\n    let url;\n\n    if (movie.media_type === \"movie\") {\n      const movieId = movie.id;\n      console.log(movieId);\n      url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=028e8ea4ca7d9164d085c9238979098b&append_to_response=videos`;\n    } else if (movie.media_type === \"tv\") {\n      const tvId = movie.id;\n      url = `https://api.themoviedb.org/3/tv/${tvId}?api_key=028e8ea4ca7d9164d085c9238979098b&append_to_response=videos`;\n    }\n\n    axios.get(url).then(res => {\n      const movieData = res.data;\n      setMovieOverview(movieData);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  console.log(movieOverview);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, movieGenreSelected ? /*#__PURE__*/React.createElement(_SearchMovieList, {\n    movie: movieOverview,\n    listOfMovies: movieList,\n    onSearchHandler: e => setInputValue(e.target.value),\n    searchInputValue: inputValue,\n    onCloseModal: () => setInputValue(''),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 29\n    }\n  }) : \" \");\n};\n\nexport default SearchGenresResult;","map":{"version":3,"sources":["E:/ShawMovieWebsite/shaw-website/src/Containers/SearchGenresResult.js"],"names":["React","Component","useState","useEffect","useRef","_Header","_NavigationItems","_MovieGenres","axios","_SearchMovieList","_BrowseCategories","_SearchMovieListDisplay","SearchGenresResult","movieGenreSelectedId","inputValue","setInputValue","movieList","setMovieList","movieOverview","setMovieOverview","movieGenreSelected","url","get","then","res","results","data","movieImageUrl","movieRows","forEach","movie","poster_path","media_type","movieComponent","selectMovieHandler","id","push","catch","error","console","log","movieId","tvId","movieData","e","target","value"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect, useRef } from 'react'\r\nimport _Header from '../SecondaryComponents/Desktop/_Header'\r\nimport _NavigationItems from '../SecondaryComponents/Desktop/_NavigationItems'\r\nimport _MovieGenres from '../SecondaryComponents/Desktop/_MovieGenres'\r\nimport axios from 'axios'\r\nimport _SearchMovieList from '../SecondaryComponents/Desktop/_SearchMovieList'\r\nimport _BrowseCategories from '../SecondaryComponents/Desktop/_BrowseCategories'\r\nimport _SearchMovieListDisplay from '../SecondaryComponents/Desktop/_SearchMovieListDisplay'\r\n\r\nconst SearchGenresResult = ({ movieGenreSelectedId }) => {\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [movieList, setMovieList] = useState([]);\r\n  const [movieOverview, setMovieOverview] = useState(movieGenreSelected);\r\n\r\n  useEffect(() => {\r\n\r\n    const url = `https://api.themoviedb.org/3/search/multi?api_key=028e8ea4ca7d9164d085c9238979098b&language=en-US&include_adult=false&query=${inputValue}`;\r\n    axios.get(url)\r\n      .then(res => {\r\n        const results = res.data.results;\r\n        let movieImageUrl;\r\n        let movieRows = [];\r\n\r\n        results.forEach((movie) => {\r\n          if (movie.poster_path !== null && movie.media_type !== \"person\") {\r\n            movieImageUrl = \"https://image.tmdb.org/t/p/w500\" + movie.poster_path;\r\n\r\n            const movieComponent = <_SearchMovieListDisplay\r\n              movieDetials={() => selectMovieHandler(movie)}\r\n              key={movie.id}\r\n              movieImage={movieImageUrl}\r\n              movie={movie}\r\n            />\r\n            movieRows.push(movieComponent);\r\n            // console.log(movie)\r\n          }\r\n        })\r\n\r\n        setMovieList(movieRows);\r\n\r\n      }).catch(error => {\r\n        console.log(\"errror\", error);\r\n      });\r\n\r\n    return () => {\r\n      setMovieList([]);\r\n      console.log(\"cleaned DC\")\r\n    }\r\n\r\n  }, [inputValue]);\r\n\r\n  if(movieGenreSelectedId)\r\n  {\r\n    let url;\r\n  }\r\n\r\n  const selectMovieHandler = movie => {\r\n    let url;\r\n    if (movie.media_type === \"movie\") {\r\n      const movieId = movie.id;\r\n      console.log(movieId)\r\n      url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=028e8ea4ca7d9164d085c9238979098b&append_to_response=videos`;\r\n\r\n    } else if (movie.media_type === \"tv\") {\r\n      const tvId = movie.id\r\n      url = `https://api.themoviedb.org/3/tv/${tvId}?api_key=028e8ea4ca7d9164d085c9238979098b&append_to_response=videos`;\r\n    }\r\n\r\n    axios.get(url)\r\n      .then(res => {\r\n        const movieData = res.data;\r\n        setMovieOverview(movieData);\r\n\r\n      }).catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  console.log(movieOverview);\r\n\r\n  return (\r\n    <div>\r\n      {movieGenreSelected ? <_SearchMovieList movie={movieOverview} listOfMovies={movieList} onSearchHandler={e => setInputValue(e.target.value)} searchInputValue={inputValue} onCloseModal={() => setInputValue('')} /> : \" \"}\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default SearchGenresResult;"]},"metadata":{},"sourceType":"module"}